<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($spaa7e02, $spc53a3f, $sp827f09, $spd0cfb0, $spc95f60, $sp863f33) { DB::statement('call add_cards(?,?,?,?,?,?)', array($spaa7e02, $spc53a3f, $sp827f09, $spd0cfb0, $spc95f60, (int) $sp863f33)); } public static function _trash($spf5b559) { DB::transaction(function () use($spf5b559) { $sp4c441f = clone $spf5b559; $sp4c441f->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp840c11) { foreach ($sp840c11 as $sp5c3c93) { $sp48b1b0 = \App\Product::where('id', $sp5c3c93->product_id)->lockForUpdate()->first(); if ($sp48b1b0) { $sp48b1b0->count_all -= $sp5c3c93->count_left; $sp48b1b0->saveOrFail(); } } }); $spf5b559->delete(); return true; }); } public static function _restore($spf5b559) { DB::transaction(function () use($spf5b559) { $sp4c441f = clone $spf5b559; $sp4c441f->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp840c11) { foreach ($sp840c11 as $sp5c3c93) { $sp48b1b0 = \App\Product::where('id', $sp5c3c93->product_id)->lockForUpdate()->first(); if ($sp48b1b0) { $sp48b1b0->count_all += $sp5c3c93->count_left; $sp48b1b0->saveOrFail(); } } }); $spf5b559->restore(); return true; }); } }