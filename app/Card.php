<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($sp45cf7f, $sp1849cc, $sp53ba26, $sp646c5e, $sp221ed7, $sp7479a4) { DB::statement('call add_cards(?,?,?,?,?,?)', array($sp45cf7f, $sp1849cc, $sp53ba26, $sp646c5e, $sp221ed7, (int) $sp7479a4)); } public static function _trash($sp50919b) { DB::transaction(function () use($sp50919b) { $spd3deec = clone $sp50919b; $spd3deec->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($spa237bd) { foreach ($spa237bd as $sp32442e) { $sp73d110 = \App\Product::where('id', $sp32442e->product_id)->lockForUpdate()->first(); if ($sp73d110) { $sp73d110->count_all -= $sp32442e->count_left; $sp73d110->saveOrFail(); } } }); $sp50919b->delete(); return true; }); } public static function _restore($sp50919b) { DB::transaction(function () use($sp50919b) { $spd3deec = clone $sp50919b; $spd3deec->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($spa237bd) { foreach ($spa237bd as $sp32442e) { $sp73d110 = \App\Product::where('id', $sp32442e->product_id)->lockForUpdate()->first(); if ($sp73d110) { $sp73d110->count_all += $sp32442e->count_left; $sp73d110->saveOrFail(); } } }); $sp50919b->restore(); return true; }); } }