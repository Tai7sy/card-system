<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($sp95525e, $spac20cb, $sp6d9a17, $sp964b7d, $sp8d3776, $sp2dd44a) { DB::statement('call add_cards(?,?,?,?,?,?)', array($sp95525e, $spac20cb, $sp6d9a17, $sp964b7d, $sp8d3776, (int) $sp2dd44a)); } public static function _trash($spbea74d) { DB::transaction(function () use($spbea74d) { $spcb837b = clone $spbea74d; $spcb837b->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp228791) { foreach ($sp228791 as $sp1bee5a) { $spb0646a = \App\Product::where('id', $sp1bee5a->product_id)->lockForUpdate()->first(); if ($spb0646a) { $spb0646a->count_all -= $sp1bee5a->count_left; $spb0646a->saveOrFail(); } } }); $spbea74d->delete(); return true; }); } public static function _restore($spbea74d) { DB::transaction(function () use($spbea74d) { $spcb837b = clone $spbea74d; $spcb837b->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp228791) { foreach ($sp228791 as $sp1bee5a) { $spb0646a = \App\Product::where('id', $sp1bee5a->product_id)->lockForUpdate()->first(); if ($spb0646a) { $spb0646a->count_all += $sp1bee5a->count_left; $spb0646a->saveOrFail(); } } }); $spbea74d->restore(); return true; }); } }