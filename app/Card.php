<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($sp15a746, $spbb5d29, $sp4f56c1, $sp27b58d, $spa5ca46, $spc564ba) { DB::statement('call add_cards(?,?,?,?,?,?)', array($sp15a746, $spbb5d29, $sp4f56c1, $sp27b58d, $spa5ca46, (int) $spc564ba)); } public static function _trash($sp5044a7) { DB::transaction(function () use($sp5044a7) { $spee4521 = clone $sp5044a7; $spee4521->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp2e1960) { foreach ($sp2e1960 as $sp87990b) { $sp2cf004 = \App\Product::where('id', $sp87990b->product_id)->lockForUpdate()->first(); if ($sp2cf004) { $sp2cf004->count_all -= $sp87990b->count_left; $sp2cf004->saveOrFail(); } } }); $sp5044a7->delete(); return true; }); } public static function _restore($sp5044a7) { DB::transaction(function () use($sp5044a7) { $spee4521 = clone $sp5044a7; $spee4521->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp2e1960) { foreach ($sp2e1960 as $sp87990b) { $sp2cf004 = \App\Product::where('id', $sp87990b->product_id)->lockForUpdate()->first(); if ($sp2cf004) { $sp2cf004->count_all += $sp87990b->count_left; $sp2cf004->saveOrFail(); } } }); $sp5044a7->restore(); return true; }); } }