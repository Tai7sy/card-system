<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($sp47762c, $sp107f34, $sp8beb2b, $sp4e5656, $sp61a326, $sp156e9e) { DB::statement('call add_cards(?,?,?,?,?,?)', array($sp47762c, $sp107f34, $sp8beb2b, $sp4e5656, $sp61a326, (int) $sp156e9e)); } public static function _trash($sp0964e2) { DB::transaction(function () use($sp0964e2) { $spd5bdbc = clone $sp0964e2; $spd5bdbc->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp237319) { foreach ($sp237319 as $sp7a29e6) { $sp648779 = \App\Product::where('id', $sp7a29e6->product_id)->lockForUpdate()->first(); if ($sp648779) { $sp648779->count_all -= $sp7a29e6->count_left; $sp648779->saveOrFail(); } } }); $sp0964e2->delete(); return true; }); } public static function _restore($sp0964e2) { DB::transaction(function () use($sp0964e2) { $spd5bdbc = clone $sp0964e2; $spd5bdbc->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp237319) { foreach ($sp237319 as $sp7a29e6) { $sp648779 = \App\Product::where('id', $sp7a29e6->product_id)->lockForUpdate()->first(); if ($sp648779) { $sp648779->count_all += $sp7a29e6->count_left; $sp648779->saveOrFail(); } } }); $sp0964e2->restore(); return true; }); } }