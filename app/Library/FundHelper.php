<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp1d6e91, callable $spa70c1a) { $sp6f156a = null; try { return DB::transaction(function () use($sp1d6e91, &$sp6f156a, $spa70c1a) { $sp6f156a = \App\Order::where('id', $sp1d6e91)->lockForUpdate()->firstOrFail(); $spc31330 = $spa70c1a($sp6f156a); if ($spc31330 !== self::ACTION_CONTINUE) { return $spc31330; } $sp16b781 = User::where('id', $sp6f156a->user_id)->lockForUpdate()->firstOrFail(); $sp16b781->m_all += $sp6f156a->income; $sp16b781->saveOrFail(); $sp9392f6 = new FundRecord(); $sp9392f6->user_id = $sp6f156a->user_id; $sp9392f6->type = FundRecord::TYPE_IN; $sp9392f6->amount = $sp6f156a->income; $sp9392f6->all = $sp16b781->m_all; $sp9392f6->frozen = $sp16b781->m_frozen; $sp9392f6->paid = $sp16b781->m_paid; $sp9392f6->balance = $sp16b781->m_balance; $sp9392f6->remark = '订单#' . $sp6f156a->order_no; $sp9392f6->order_id = $sp6f156a->id; $sp9392f6->saveOrFail(); return true; }); } catch (\Throwable $sp803aea) { $sp3219af = 'FundHelper.orderSuccess error, order_id:' . $sp1d6e91; if ($sp6f156a) { $sp3219af .= ', user_id:' . $sp6f156a->user_id . ',income:' . $sp6f156a->income . ',order_no:' . $sp6f156a->order_no; } Log::error($sp3219af . ' with exception:', array('Exception' => $sp803aea)); return false; } } public static function orderFreeze($sp1d6e91, $spb9bcea) { $sp6f156a = null; try { return DB::transaction(function () use($sp1d6e91, &$sp6f156a, $spb9bcea) { $sp6f156a = \App\Order::where('id', $sp1d6e91)->lockForUpdate()->firstOrFail(); if ($sp6f156a->status === Order::STATUS_REFUND) { return false; } if ($sp6f156a->status === Order::STATUS_FROZEN) { return true; } $spf335f0 = $sp6f156a->status; if ($spf335f0 === \App\Order::STATUS_SUCCESS) { $sp7dfd2d = '已发货'; } elseif ($spf335f0 === \App\Order::STATUS_UNPAY) { $sp7dfd2d = '未付款'; } elseif ($spf335f0 === \App\Order::STATUS_PAID) { $sp7dfd2d = '未发货'; } else { throw new \Exception('unknown'); } $sp16b781 = User::where('id', $sp6f156a->user_id)->lockForUpdate()->firstOrFail(); $sp9392f6 = new FundRecord(); $sp9392f6->user_id = $sp6f156a->user_id; $sp9392f6->type = FundRecord::TYPE_OUT; $sp9392f6->order_id = $sp6f156a->id; $sp9392f6->remark = $sp6f156a === $sp6f156a ? '' : '关联订单#' . $sp6f156a->order_no . ': '; if ($spf335f0 === \App\Order::STATUS_SUCCESS) { $sp16b781->m_frozen += $sp6f156a->income; $sp16b781->saveOrFail(); $sp9392f6->amount = -$sp6f156a->income; $sp9392f6->remark .= $spb9bcea . ', 冻结订单#' . $sp6f156a->order_no; } else { $sp9392f6->amount = 0; $sp9392f6->remark .= $spb9bcea . ', 冻结订单(' . $sp7dfd2d . ')#' . $sp6f156a->order_no; } $sp9392f6->all = $sp16b781->m_all; $sp9392f6->frozen = $sp16b781->m_frozen; $sp9392f6->paid = $sp16b781->m_paid; $sp9392f6->balance = $sp16b781->m_balance; $sp9392f6->saveOrFail(); $sp6f156a->status = \App\Order::STATUS_FROZEN; $sp6f156a->frozen_reason = ($sp6f156a === $sp6f156a ? '' : '关联订单#' . $sp6f156a->order_no . ': ') . $spb9bcea; $sp6f156a->saveOrFail(); return true; }); } catch (\Throwable $sp803aea) { $sp3219af = 'FundHelper.orderFreeze error'; if ($sp6f156a) { $sp3219af .= ', order_no:' . $sp6f156a->order_no . ', user_id:' . $sp6f156a->user_id . ', amount:' . $sp6f156a->income; } else { $sp3219af .= ', order_no: null'; } Log::error($sp3219af . ' with exception:', array('Exception' => $sp803aea)); return false; } } public static function orderUnfreeze($sp1d6e91, $spfb04e5, callable $sp20e68a = null, &$spaac808 = null) { $sp6f156a = null; try { return DB::transaction(function () use($sp1d6e91, &$sp6f156a, $spfb04e5, $sp20e68a, &$spaac808) { $sp6f156a = \App\Order::where('id', $sp1d6e91)->lockForUpdate()->firstOrFail(); if ($sp20e68a !== null) { $spc31330 = $sp20e68a(); if ($spc31330 !== self::ACTION_CONTINUE) { return $spc31330; } } if ($sp6f156a->status === Order::STATUS_REFUND) { $spaac808 = $sp6f156a->status; return false; } if ($sp6f156a->status !== Order::STATUS_FROZEN) { $spaac808 = $sp6f156a->status; return true; } $sp324711 = $sp6f156a->card_orders()->exists(); if ($sp324711) { $spaac808 = \App\Order::STATUS_SUCCESS; $sp7dfd2d = '已发货'; } else { if ($sp6f156a->paid_at === NULL) { $spaac808 = \App\Order::STATUS_UNPAY; $sp7dfd2d = '未付款'; } else { $spaac808 = \App\Order::STATUS_PAID; $sp7dfd2d = '未发货'; } } $sp16b781 = User::where('id', $sp6f156a->user_id)->lockForUpdate()->firstOrFail(); $sp9392f6 = new FundRecord(); $sp9392f6->user_id = $sp6f156a->user_id; $sp9392f6->type = FundRecord::TYPE_IN; $sp9392f6->remark = $sp6f156a === $sp6f156a ? '' : '关联订单#' . $sp6f156a->order_no . ': '; $sp9392f6->order_id = $sp6f156a->id; if ($sp324711) { $sp16b781->m_frozen -= $sp6f156a->income; $sp16b781->saveOrFail(); $sp9392f6->amount = $sp6f156a->income; $sp9392f6->remark .= $spfb04e5 . ', 解冻订单#' . $sp6f156a->order_no; } else { $sp9392f6->amount = 0; $sp9392f6->remark .= $spfb04e5 . ', 解冻订单(' . $sp7dfd2d . ')#' . $sp6f156a->order_no; } $sp9392f6->all = $sp16b781->m_all; $sp9392f6->frozen = $sp16b781->m_frozen; $sp9392f6->paid = $sp16b781->m_paid; $sp9392f6->balance = $sp16b781->m_balance; $sp9392f6->saveOrFail(); $sp6f156a->status = $spaac808; $sp6f156a->saveOrFail(); return true; }); } catch (\Throwable $sp803aea) { $sp3219af = 'FundHelper.orderUnfreeze error'; if ($sp6f156a) { $sp3219af .= ', order_no:' . $sp6f156a->order_no . ', user_id:' . $sp6f156a->user_id . ',amount:' . $sp6f156a->income; } else { $sp3219af .= ', order_no: null'; } Log::error($sp3219af . ' with exception:', array('Exception' => $sp803aea)); return false; } } }