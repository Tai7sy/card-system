<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spc2e58a, callable $sp1cfe2f) { $sp106d4b = null; try { return DB::transaction(function () use($spc2e58a, &$sp106d4b, $sp1cfe2f) { $sp106d4b = \App\Order::where('id', $spc2e58a)->lockForUpdate()->firstOrFail(); $sp179a17 = $sp1cfe2f($sp106d4b); if ($sp179a17 !== self::ACTION_CONTINUE) { return $sp179a17; } $spf3d3c9 = User::where('id', $sp106d4b->user_id)->lockForUpdate()->firstOrFail(); $spf3d3c9->m_all += $sp106d4b->income; $spf3d3c9->saveOrFail(); $spf7960f = new FundRecord(); $spf7960f->user_id = $sp106d4b->user_id; $spf7960f->type = FundRecord::TYPE_IN; $spf7960f->amount = $sp106d4b->income; $spf7960f->all = $spf3d3c9->m_all; $spf7960f->frozen = $spf3d3c9->m_frozen; $spf7960f->paid = $spf3d3c9->m_paid; $spf7960f->balance = $spf3d3c9->m_balance; $spf7960f->remark = '订单#' . $sp106d4b->order_no; $spf7960f->order_id = $sp106d4b->id; $spf7960f->saveOrFail(); return true; }); } catch (\Throwable $sp16b835) { $spab838f = 'FundHelper.orderSuccess error, order_id:' . $spc2e58a; if ($sp106d4b) { $spab838f .= ', user_id:' . $sp106d4b->user_id . ',income:' . $sp106d4b->income . ',order_no:' . $sp106d4b->order_no; } Log::error($spab838f . ' with exception:', array('Exception' => $sp16b835)); return false; } } public static function orderFreeze($spc2e58a, $sp4fe0c3) { $sp106d4b = null; try { return DB::transaction(function () use($spc2e58a, &$sp106d4b, $sp4fe0c3) { $sp106d4b = \App\Order::where('id', $spc2e58a)->lockForUpdate()->firstOrFail(); if ($sp106d4b->status === Order::STATUS_REFUND) { return false; } if ($sp106d4b->status === Order::STATUS_FROZEN) { return true; } $spb2b29f = $sp106d4b->status; if ($spb2b29f === \App\Order::STATUS_SUCCESS) { $spc2ac72 = '已发货'; } elseif ($spb2b29f === \App\Order::STATUS_UNPAY) { $spc2ac72 = '未付款'; } elseif ($spb2b29f === \App\Order::STATUS_PAID) { $spc2ac72 = '未发货'; } else { throw new \Exception('unknown'); } $spf3d3c9 = User::where('id', $sp106d4b->user_id)->lockForUpdate()->firstOrFail(); $spf7960f = new FundRecord(); $spf7960f->user_id = $sp106d4b->user_id; $spf7960f->type = FundRecord::TYPE_OUT; $spf7960f->order_id = $sp106d4b->id; $spf7960f->remark = $sp106d4b === $sp106d4b ? '' : '关联订单#' . $sp106d4b->order_no . ': '; if ($spb2b29f === \App\Order::STATUS_SUCCESS) { $spf3d3c9->m_frozen += $sp106d4b->income; $spf3d3c9->saveOrFail(); $spf7960f->amount = -$sp106d4b->income; $spf7960f->remark .= $sp4fe0c3 . ', 冻结订单#' . $sp106d4b->order_no; } else { $spf7960f->amount = 0; $spf7960f->remark .= $sp4fe0c3 . ', 冻结订单(' . $spc2ac72 . ')#' . $sp106d4b->order_no; } $spf7960f->all = $spf3d3c9->m_all; $spf7960f->frozen = $spf3d3c9->m_frozen; $spf7960f->paid = $spf3d3c9->m_paid; $spf7960f->balance = $spf3d3c9->m_balance; $spf7960f->saveOrFail(); $sp106d4b->status = \App\Order::STATUS_FROZEN; $sp106d4b->frozen_reason = ($sp106d4b === $sp106d4b ? '' : '关联订单#' . $sp106d4b->order_no . ': ') . $sp4fe0c3; $sp106d4b->saveOrFail(); return true; }); } catch (\Throwable $sp16b835) { $spab838f = 'FundHelper.orderFreeze error'; if ($sp106d4b) { $spab838f .= ', order_no:' . $sp106d4b->order_no . ', user_id:' . $sp106d4b->user_id . ', amount:' . $sp106d4b->income; } else { $spab838f .= ', order_no: null'; } Log::error($spab838f . ' with exception:', array('Exception' => $sp16b835)); return false; } } public static function orderUnfreeze($spc2e58a, $spfc8f8f, callable $sp97e8b0 = null, &$sp39fa88 = null) { $sp106d4b = null; try { return DB::transaction(function () use($spc2e58a, &$sp106d4b, $spfc8f8f, $sp97e8b0, &$sp39fa88) { $sp106d4b = \App\Order::where('id', $spc2e58a)->lockForUpdate()->firstOrFail(); if ($sp97e8b0 !== null) { $sp179a17 = $sp97e8b0(); if ($sp179a17 !== self::ACTION_CONTINUE) { return $sp179a17; } } if ($sp106d4b->status === Order::STATUS_REFUND) { $sp39fa88 = $sp106d4b->status; return false; } if ($sp106d4b->status !== Order::STATUS_FROZEN) { $sp39fa88 = $sp106d4b->status; return true; } $spe8eb74 = $sp106d4b->card_orders()->exists(); if ($spe8eb74) { $sp39fa88 = \App\Order::STATUS_SUCCESS; $spc2ac72 = '已发货'; } else { if ($sp106d4b->paid_at === NULL) { $sp39fa88 = \App\Order::STATUS_UNPAY; $spc2ac72 = '未付款'; } else { $sp39fa88 = \App\Order::STATUS_PAID; $spc2ac72 = '未发货'; } } $spf3d3c9 = User::where('id', $sp106d4b->user_id)->lockForUpdate()->firstOrFail(); $spf7960f = new FundRecord(); $spf7960f->user_id = $sp106d4b->user_id; $spf7960f->type = FundRecord::TYPE_IN; $spf7960f->remark = $sp106d4b === $sp106d4b ? '' : '关联订单#' . $sp106d4b->order_no . ': '; $spf7960f->order_id = $sp106d4b->id; if ($spe8eb74) { $spf3d3c9->m_frozen -= $sp106d4b->income; $spf3d3c9->saveOrFail(); $spf7960f->amount = $sp106d4b->income; $spf7960f->remark .= $spfc8f8f . ', 解冻订单#' . $sp106d4b->order_no; } else { $spf7960f->amount = 0; $spf7960f->remark .= $spfc8f8f . ', 解冻订单(' . $spc2ac72 . ')#' . $sp106d4b->order_no; } $spf7960f->all = $spf3d3c9->m_all; $spf7960f->frozen = $spf3d3c9->m_frozen; $spf7960f->paid = $spf3d3c9->m_paid; $spf7960f->balance = $spf3d3c9->m_balance; $spf7960f->saveOrFail(); $sp106d4b->status = $sp39fa88; $sp106d4b->saveOrFail(); return true; }); } catch (\Throwable $sp16b835) { $spab838f = 'FundHelper.orderUnfreeze error'; if ($sp106d4b) { $spab838f .= ', order_no:' . $sp106d4b->order_no . ', user_id:' . $sp106d4b->user_id . ',amount:' . $sp106d4b->income; } else { $spab838f .= ', order_no: null'; } Log::error($spab838f . ' with exception:', array('Exception' => $sp16b835)); return false; } } }