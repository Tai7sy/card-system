<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp1915a8, callable $sp43160f) { $sp990b3b = null; try { return DB::transaction(function () use($sp1915a8, &$sp990b3b, $sp43160f) { $sp990b3b = \App\Order::where('id', $sp1915a8)->lockForUpdate()->firstOrFail(); $spd9807c = $sp43160f($sp990b3b); if ($spd9807c !== self::ACTION_CONTINUE) { return $spd9807c; } $sp3db17d = User::where('id', $sp990b3b->user_id)->lockForUpdate()->firstOrFail(); $sp3db17d->m_all += $sp990b3b->income; $sp3db17d->saveOrFail(); $sp2e2c9f = new FundRecord(); $sp2e2c9f->user_id = $sp990b3b->user_id; $sp2e2c9f->type = FundRecord::TYPE_IN; $sp2e2c9f->amount = $sp990b3b->income; $sp2e2c9f->all = $sp3db17d->m_all; $sp2e2c9f->frozen = $sp3db17d->m_frozen; $sp2e2c9f->paid = $sp3db17d->m_paid; $sp2e2c9f->balance = $sp3db17d->m_balance; $sp2e2c9f->remark = '订单#' . $sp990b3b->order_no; $sp2e2c9f->order_id = $sp990b3b->id; $sp2e2c9f->saveOrFail(); return true; }); } catch (\Throwable $sp0b065e) { $spfc43d6 = 'FundHelper.orderSuccess error, order_id:' . $sp1915a8; if ($sp990b3b) { $spfc43d6 .= ', user_id:' . $sp990b3b->user_id . ',income:' . $sp990b3b->income . ',order_no:' . $sp990b3b->order_no; } Log::error($spfc43d6 . ' with exception:', array('Exception' => $sp0b065e)); return false; } } public static function orderFreeze($sp1915a8, $spd931ee) { $sp990b3b = null; try { return DB::transaction(function () use($sp1915a8, &$sp990b3b, $spd931ee) { $sp990b3b = \App\Order::where('id', $sp1915a8)->lockForUpdate()->firstOrFail(); if ($sp990b3b->status === Order::STATUS_REFUND) { return false; } if ($sp990b3b->status === Order::STATUS_FROZEN) { return true; } $spf1e329 = $sp990b3b->status; if ($spf1e329 === \App\Order::STATUS_SUCCESS) { $sp6c02d2 = '已发货'; } elseif ($spf1e329 === \App\Order::STATUS_UNPAY) { $sp6c02d2 = '未付款'; } elseif ($spf1e329 === \App\Order::STATUS_PAID) { $sp6c02d2 = '未发货'; } else { throw new \Exception('unknown'); } $sp3db17d = User::where('id', $sp990b3b->user_id)->lockForUpdate()->firstOrFail(); $sp2e2c9f = new FundRecord(); $sp2e2c9f->user_id = $sp990b3b->user_id; $sp2e2c9f->type = FundRecord::TYPE_OUT; $sp2e2c9f->order_id = $sp990b3b->id; $sp2e2c9f->remark = $sp990b3b === $sp990b3b ? '' : '关联订单#' . $sp990b3b->order_no . ': '; if ($spf1e329 === \App\Order::STATUS_SUCCESS) { $sp3db17d->m_frozen += $sp990b3b->income; $sp3db17d->saveOrFail(); $sp2e2c9f->amount = -$sp990b3b->income; $sp2e2c9f->remark .= $spd931ee . ', 冻结订单#' . $sp990b3b->order_no; } else { $sp2e2c9f->amount = 0; $sp2e2c9f->remark .= $spd931ee . ', 冻结订单(' . $sp6c02d2 . ')#' . $sp990b3b->order_no; } $sp2e2c9f->all = $sp3db17d->m_all; $sp2e2c9f->frozen = $sp3db17d->m_frozen; $sp2e2c9f->paid = $sp3db17d->m_paid; $sp2e2c9f->balance = $sp3db17d->m_balance; $sp2e2c9f->saveOrFail(); $sp990b3b->status = \App\Order::STATUS_FROZEN; $sp990b3b->frozen_reason = ($sp990b3b === $sp990b3b ? '' : '关联订单#' . $sp990b3b->order_no . ': ') . $spd931ee; $sp990b3b->saveOrFail(); return true; }); } catch (\Throwable $sp0b065e) { $spfc43d6 = 'FundHelper.orderFreeze error'; if ($sp990b3b) { $spfc43d6 .= ', order_no:' . $sp990b3b->order_no . ', user_id:' . $sp990b3b->user_id . ', amount:' . $sp990b3b->income; } else { $spfc43d6 .= ', order_no: null'; } Log::error($spfc43d6 . ' with exception:', array('Exception' => $sp0b065e)); return false; } } public static function orderUnfreeze($sp1915a8, $sp382fa2, callable $spc49194 = null, &$sp3a090a = null) { $sp990b3b = null; try { return DB::transaction(function () use($sp1915a8, &$sp990b3b, $sp382fa2, $spc49194, &$sp3a090a) { $sp990b3b = \App\Order::where('id', $sp1915a8)->lockForUpdate()->firstOrFail(); if ($spc49194 !== null) { $spd9807c = $spc49194(); if ($spd9807c !== self::ACTION_CONTINUE) { return $spd9807c; } } if ($sp990b3b->status === Order::STATUS_REFUND) { $sp3a090a = $sp990b3b->status; return false; } if ($sp990b3b->status !== Order::STATUS_FROZEN) { $sp3a090a = $sp990b3b->status; return true; } $sp507b9c = $sp990b3b->card_orders()->exists(); if ($sp507b9c) { $sp3a090a = \App\Order::STATUS_SUCCESS; $sp6c02d2 = '已发货'; } else { if ($sp990b3b->paid_at === NULL) { $sp3a090a = \App\Order::STATUS_UNPAY; $sp6c02d2 = '未付款'; } else { $sp3a090a = \App\Order::STATUS_PAID; $sp6c02d2 = '未发货'; } } $sp3db17d = User::where('id', $sp990b3b->user_id)->lockForUpdate()->firstOrFail(); $sp2e2c9f = new FundRecord(); $sp2e2c9f->user_id = $sp990b3b->user_id; $sp2e2c9f->type = FundRecord::TYPE_IN; $sp2e2c9f->remark = $sp990b3b === $sp990b3b ? '' : '关联订单#' . $sp990b3b->order_no . ': '; $sp2e2c9f->order_id = $sp990b3b->id; if ($sp507b9c) { $sp3db17d->m_frozen -= $sp990b3b->income; $sp3db17d->saveOrFail(); $sp2e2c9f->amount = $sp990b3b->income; $sp2e2c9f->remark .= $sp382fa2 . ', 解冻订单#' . $sp990b3b->order_no; } else { $sp2e2c9f->amount = 0; $sp2e2c9f->remark .= $sp382fa2 . ', 解冻订单(' . $sp6c02d2 . ')#' . $sp990b3b->order_no; } $sp2e2c9f->all = $sp3db17d->m_all; $sp2e2c9f->frozen = $sp3db17d->m_frozen; $sp2e2c9f->paid = $sp3db17d->m_paid; $sp2e2c9f->balance = $sp3db17d->m_balance; $sp2e2c9f->saveOrFail(); $sp990b3b->status = $sp3a090a; $sp990b3b->saveOrFail(); return true; }); } catch (\Throwable $sp0b065e) { $spfc43d6 = 'FundHelper.orderUnfreeze error'; if ($sp990b3b) { $spfc43d6 .= ', order_no:' . $sp990b3b->order_no . ', user_id:' . $sp990b3b->user_id . ',amount:' . $sp990b3b->income; } else { $spfc43d6 .= ', order_no: null'; } Log::error($spfc43d6 . ' with exception:', array('Exception' => $sp0b065e)); return false; } } }