<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spbf1ba1, callable $sp405e31) { $sp79a792 = null; try { return DB::transaction(function () use($spbf1ba1, &$sp79a792, $sp405e31) { $sp79a792 = \App\Order::where('id', $spbf1ba1)->lockForUpdate()->firstOrFail(); $sp6e55ba = $sp405e31($sp79a792); if ($sp6e55ba !== self::ACTION_CONTINUE) { return $sp6e55ba; } $sp216502 = User::where('id', $sp79a792->user_id)->lockForUpdate()->firstOrFail(); $sp216502->m_all += $sp79a792->income; $sp216502->saveOrFail(); $sp79bef4 = new FundRecord(); $sp79bef4->user_id = $sp79a792->user_id; $sp79bef4->type = FundRecord::TYPE_IN; $sp79bef4->amount = $sp79a792->income; $sp79bef4->all = $sp216502->m_all; $sp79bef4->frozen = $sp216502->m_frozen; $sp79bef4->paid = $sp216502->m_paid; $sp79bef4->balance = $sp216502->m_balance; $sp79bef4->remark = '订单#' . $sp79a792->order_no; $sp79bef4->order_id = $sp79a792->id; $sp79bef4->saveOrFail(); return true; }); } catch (\Throwable $spd54c56) { $sp2d2f79 = 'FundHelper.orderSuccess error, order_id:' . $spbf1ba1; if ($sp79a792) { $sp2d2f79 .= ', user_id:' . $sp79a792->user_id . ',income:' . $sp79a792->income . ',order_no:' . $sp79a792->order_no; } Log::error($sp2d2f79 . ' with exception:', array('Exception' => $spd54c56)); return false; } } public static function orderFreeze($spbf1ba1, $spcf8840) { $sp79a792 = null; try { return DB::transaction(function () use($spbf1ba1, &$sp79a792, $spcf8840) { $sp79a792 = \App\Order::where('id', $spbf1ba1)->lockForUpdate()->firstOrFail(); if ($sp79a792->status === Order::STATUS_REFUND) { return false; } if ($sp79a792->status === Order::STATUS_FROZEN) { return true; } $sp917ae0 = $sp79a792->status; if ($sp917ae0 === \App\Order::STATUS_SUCCESS) { $spf592d8 = '已发货'; } elseif ($sp917ae0 === \App\Order::STATUS_UNPAY) { $spf592d8 = '未付款'; } elseif ($sp917ae0 === \App\Order::STATUS_PAID) { $spf592d8 = '未发货'; } else { throw new \Exception('unknown'); } $sp216502 = User::where('id', $sp79a792->user_id)->lockForUpdate()->firstOrFail(); $sp79bef4 = new FundRecord(); $sp79bef4->user_id = $sp79a792->user_id; $sp79bef4->type = FundRecord::TYPE_OUT; $sp79bef4->order_id = $sp79a792->id; $sp79bef4->remark = $sp79a792 === $sp79a792 ? '' : '关联订单#' . $sp79a792->order_no . ': '; if ($sp917ae0 === \App\Order::STATUS_SUCCESS) { $sp216502->m_frozen += $sp79a792->income; $sp216502->saveOrFail(); $sp79bef4->amount = -$sp79a792->income; $sp79bef4->remark .= $spcf8840 . ', 冻结订单#' . $sp79a792->order_no; } else { $sp79bef4->amount = 0; $sp79bef4->remark .= $spcf8840 . ', 冻结订单(' . $spf592d8 . ')#' . $sp79a792->order_no; } $sp79bef4->all = $sp216502->m_all; $sp79bef4->frozen = $sp216502->m_frozen; $sp79bef4->paid = $sp216502->m_paid; $sp79bef4->balance = $sp216502->m_balance; $sp79bef4->saveOrFail(); $sp79a792->status = \App\Order::STATUS_FROZEN; $sp79a792->frozen_reason = ($sp79a792 === $sp79a792 ? '' : '关联订单#' . $sp79a792->order_no . ': ') . $spcf8840; $sp79a792->saveOrFail(); return true; }); } catch (\Throwable $spd54c56) { $sp2d2f79 = 'FundHelper.orderFreeze error'; if ($sp79a792) { $sp2d2f79 .= ', order_no:' . $sp79a792->order_no . ', user_id:' . $sp79a792->user_id . ', amount:' . $sp79a792->income; } else { $sp2d2f79 .= ', order_no: null'; } Log::error($sp2d2f79 . ' with exception:', array('Exception' => $spd54c56)); return false; } } public static function orderUnfreeze($spbf1ba1, $sp9a6f57, callable $sp27fe74 = null, &$spfc11e7 = null) { $sp79a792 = null; try { return DB::transaction(function () use($spbf1ba1, &$sp79a792, $sp9a6f57, $sp27fe74, &$spfc11e7) { $sp79a792 = \App\Order::where('id', $spbf1ba1)->lockForUpdate()->firstOrFail(); if ($sp27fe74 !== null) { $sp6e55ba = $sp27fe74(); if ($sp6e55ba !== self::ACTION_CONTINUE) { return $sp6e55ba; } } if ($sp79a792->status === Order::STATUS_REFUND) { $spfc11e7 = $sp79a792->status; return false; } if ($sp79a792->status !== Order::STATUS_FROZEN) { $spfc11e7 = $sp79a792->status; return true; } $sp3cfaa5 = $sp79a792->card_orders()->exists(); if ($sp3cfaa5) { $spfc11e7 = \App\Order::STATUS_SUCCESS; $spf592d8 = '已发货'; } else { if ($sp79a792->paid_at === NULL) { $spfc11e7 = \App\Order::STATUS_UNPAY; $spf592d8 = '未付款'; } else { $spfc11e7 = \App\Order::STATUS_PAID; $spf592d8 = '未发货'; } } $sp216502 = User::where('id', $sp79a792->user_id)->lockForUpdate()->firstOrFail(); $sp79bef4 = new FundRecord(); $sp79bef4->user_id = $sp79a792->user_id; $sp79bef4->type = FundRecord::TYPE_IN; $sp79bef4->remark = $sp79a792 === $sp79a792 ? '' : '关联订单#' . $sp79a792->order_no . ': '; $sp79bef4->order_id = $sp79a792->id; if ($sp3cfaa5) { $sp216502->m_frozen -= $sp79a792->income; $sp216502->saveOrFail(); $sp79bef4->amount = $sp79a792->income; $sp79bef4->remark .= $sp9a6f57 . ', 解冻订单#' . $sp79a792->order_no; } else { $sp79bef4->amount = 0; $sp79bef4->remark .= $sp9a6f57 . ', 解冻订单(' . $spf592d8 . ')#' . $sp79a792->order_no; } $sp79bef4->all = $sp216502->m_all; $sp79bef4->frozen = $sp216502->m_frozen; $sp79bef4->paid = $sp216502->m_paid; $sp79bef4->balance = $sp216502->m_balance; $sp79bef4->saveOrFail(); $sp79a792->status = $spfc11e7; $sp79a792->saveOrFail(); return true; }); } catch (\Throwable $spd54c56) { $sp2d2f79 = 'FundHelper.orderUnfreeze error'; if ($sp79a792) { $sp2d2f79 .= ', order_no:' . $sp79a792->order_no . ', user_id:' . $sp79a792->user_id . ',amount:' . $sp79a792->income; } else { $sp2d2f79 .= ', order_no: null'; } Log::error($sp2d2f79 . ' with exception:', array('Exception' => $spd54c56)); return false; } } }