<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spf2b793, callable $sp530a81) { $spcd0b15 = null; try { return DB::transaction(function () use($spf2b793, &$spcd0b15, $sp530a81) { $spcd0b15 = \App\Order::where('id', $spf2b793)->lockForUpdate()->firstOrFail(); $spa51230 = $sp530a81($spcd0b15); if ($spa51230 !== self::ACTION_CONTINUE) { return $spa51230; } $sp91cc0b = User::where('id', $spcd0b15->user_id)->lockForUpdate()->firstOrFail(); $sp91cc0b->m_all += $spcd0b15->income; $sp91cc0b->saveOrFail(); $sp7a6e3b = new FundRecord(); $sp7a6e3b->user_id = $spcd0b15->user_id; $sp7a6e3b->type = FundRecord::TYPE_IN; $sp7a6e3b->amount = $spcd0b15->income; $sp7a6e3b->all = $sp91cc0b->m_all; $sp7a6e3b->frozen = $sp91cc0b->m_frozen; $sp7a6e3b->paid = $sp91cc0b->m_paid; $sp7a6e3b->balance = $sp91cc0b->m_balance; $sp7a6e3b->remark = '订单#' . $spcd0b15->order_no; $sp7a6e3b->order_id = $spcd0b15->id; $sp7a6e3b->saveOrFail(); return true; }); } catch (\Throwable $spdfbc42) { $spabf7f9 = 'FundHelper.orderSuccess error, order_id:' . $spf2b793; if ($spcd0b15) { $spabf7f9 .= ', user_id:' . $spcd0b15->user_id . ',income:' . $spcd0b15->income . ',order_no:' . $spcd0b15->order_no; } Log::error($spabf7f9 . ' with exception:', array('Exception' => $spdfbc42)); return false; } } public static function orderFreeze($spf2b793, $spf24a03) { $spcd0b15 = null; try { return DB::transaction(function () use($spf2b793, &$spcd0b15, $spf24a03) { $spcd0b15 = \App\Order::where('id', $spf2b793)->lockForUpdate()->firstOrFail(); if ($spcd0b15->status === Order::STATUS_REFUND) { return false; } if ($spcd0b15->status === Order::STATUS_FROZEN) { return true; } $sp55f934 = $spcd0b15->status; if ($sp55f934 === \App\Order::STATUS_SUCCESS) { $sp35d8a1 = '已发货'; } elseif ($sp55f934 === \App\Order::STATUS_UNPAY) { $sp35d8a1 = '未付款'; } elseif ($sp55f934 === \App\Order::STATUS_PAID) { $sp35d8a1 = '未发货'; } else { throw new \Exception('unknown'); } $sp91cc0b = User::where('id', $spcd0b15->user_id)->lockForUpdate()->firstOrFail(); $sp7a6e3b = new FundRecord(); $sp7a6e3b->user_id = $spcd0b15->user_id; $sp7a6e3b->type = FundRecord::TYPE_OUT; $sp7a6e3b->order_id = $spcd0b15->id; $sp7a6e3b->remark = $spcd0b15 === $spcd0b15 ? '' : '关联订单#' . $spcd0b15->order_no . ': '; if ($sp55f934 === \App\Order::STATUS_SUCCESS) { $sp91cc0b->m_frozen += $spcd0b15->income; $sp91cc0b->saveOrFail(); $sp7a6e3b->amount = -$spcd0b15->income; $sp7a6e3b->remark .= $spf24a03 . ', 冻结订单#' . $spcd0b15->order_no; } else { $sp7a6e3b->amount = 0; $sp7a6e3b->remark .= $spf24a03 . ', 冻结订单(' . $sp35d8a1 . ')#' . $spcd0b15->order_no; } $sp7a6e3b->all = $sp91cc0b->m_all; $sp7a6e3b->frozen = $sp91cc0b->m_frozen; $sp7a6e3b->paid = $sp91cc0b->m_paid; $sp7a6e3b->balance = $sp91cc0b->m_balance; $sp7a6e3b->saveOrFail(); $spcd0b15->status = \App\Order::STATUS_FROZEN; $spcd0b15->frozen_reason = ($spcd0b15 === $spcd0b15 ? '' : '关联订单#' . $spcd0b15->order_no . ': ') . $spf24a03; $spcd0b15->saveOrFail(); return true; }); } catch (\Throwable $spdfbc42) { $spabf7f9 = 'FundHelper.orderFreeze error'; if ($spcd0b15) { $spabf7f9 .= ', order_no:' . $spcd0b15->order_no . ', user_id:' . $spcd0b15->user_id . ', amount:' . $spcd0b15->income; } else { $spabf7f9 .= ', order_no: null'; } Log::error($spabf7f9 . ' with exception:', array('Exception' => $spdfbc42)); return false; } } public static function orderUnfreeze($spf2b793, $sp6c5708, callable $spccec53 = null, &$spcb49ec = null) { $spcd0b15 = null; try { return DB::transaction(function () use($spf2b793, &$spcd0b15, $sp6c5708, $spccec53, &$spcb49ec) { $spcd0b15 = \App\Order::where('id', $spf2b793)->lockForUpdate()->firstOrFail(); if ($spccec53 !== null) { $spa51230 = $spccec53(); if ($spa51230 !== self::ACTION_CONTINUE) { return $spa51230; } } if ($spcd0b15->status === Order::STATUS_REFUND) { $spcb49ec = $spcd0b15->status; return false; } if ($spcd0b15->status !== Order::STATUS_FROZEN) { $spcb49ec = $spcd0b15->status; return true; } $sp64f755 = $spcd0b15->card_orders()->exists(); if ($sp64f755) { $spcb49ec = \App\Order::STATUS_SUCCESS; $sp35d8a1 = '已发货'; } else { if ($spcd0b15->paid_at === NULL) { $spcb49ec = \App\Order::STATUS_UNPAY; $sp35d8a1 = '未付款'; } else { $spcb49ec = \App\Order::STATUS_PAID; $sp35d8a1 = '未发货'; } } $sp91cc0b = User::where('id', $spcd0b15->user_id)->lockForUpdate()->firstOrFail(); $sp7a6e3b = new FundRecord(); $sp7a6e3b->user_id = $spcd0b15->user_id; $sp7a6e3b->type = FundRecord::TYPE_IN; $sp7a6e3b->remark = $spcd0b15 === $spcd0b15 ? '' : '关联订单#' . $spcd0b15->order_no . ': '; $sp7a6e3b->order_id = $spcd0b15->id; if ($sp64f755) { $sp91cc0b->m_frozen -= $spcd0b15->income; $sp91cc0b->saveOrFail(); $sp7a6e3b->amount = $spcd0b15->income; $sp7a6e3b->remark .= $sp6c5708 . ', 解冻订单#' . $spcd0b15->order_no; } else { $sp7a6e3b->amount = 0; $sp7a6e3b->remark .= $sp6c5708 . ', 解冻订单(' . $sp35d8a1 . ')#' . $spcd0b15->order_no; } $sp7a6e3b->all = $sp91cc0b->m_all; $sp7a6e3b->frozen = $sp91cc0b->m_frozen; $sp7a6e3b->paid = $sp91cc0b->m_paid; $sp7a6e3b->balance = $sp91cc0b->m_balance; $sp7a6e3b->saveOrFail(); $spcd0b15->status = $spcb49ec; $spcd0b15->saveOrFail(); return true; }); } catch (\Throwable $spdfbc42) { $spabf7f9 = 'FundHelper.orderUnfreeze error'; if ($spcd0b15) { $spabf7f9 .= ', order_no:' . $spcd0b15->order_no . ', user_id:' . $spcd0b15->user_id . ',amount:' . $spcd0b15->income; } else { $spabf7f9 .= ', order_no: null'; } Log::error($spabf7f9 . ' with exception:', array('Exception' => $spdfbc42)); return false; } } }