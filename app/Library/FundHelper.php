<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spcbed86, callable $sp30b0b2) { $spff5c0e = null; try { return DB::transaction(function () use($spcbed86, &$spff5c0e, $sp30b0b2) { $spff5c0e = \App\Order::where('id', $spcbed86)->lockForUpdate()->firstOrFail(); $spced997 = $sp30b0b2($spff5c0e); if ($spced997 !== self::ACTION_CONTINUE) { return $spced997; } $sp24cedd = User::where('id', $spff5c0e->user_id)->lockForUpdate()->firstOrFail(); $sp24cedd->m_all += $spff5c0e->income; $sp24cedd->saveOrFail(); $spd79528 = new FundRecord(); $spd79528->user_id = $spff5c0e->user_id; $spd79528->type = FundRecord::TYPE_IN; $spd79528->amount = $spff5c0e->income; $spd79528->all = $sp24cedd->m_all; $spd79528->frozen = $sp24cedd->m_frozen; $spd79528->paid = $sp24cedd->m_paid; $spd79528->balance = $sp24cedd->m_balance; $spd79528->remark = '订单#' . $spff5c0e->order_no; $spd79528->order_id = $spff5c0e->id; $spd79528->saveOrFail(); return true; }); } catch (\Throwable $spd3b3eb) { $sp1f5ff7 = 'FundHelper.orderSuccess error, order_id:' . $spcbed86; if ($spff5c0e) { $sp1f5ff7 .= ', user_id:' . $spff5c0e->user_id . ',income:' . $spff5c0e->income . ',order_no:' . $spff5c0e->order_no; } Log::error($sp1f5ff7 . ' with exception:', array('Exception' => $spd3b3eb)); return false; } } public static function orderFreeze($spcbed86, $spd78601) { $spff5c0e = null; try { return DB::transaction(function () use($spcbed86, &$spff5c0e, $spd78601) { $spff5c0e = \App\Order::where('id', $spcbed86)->lockForUpdate()->firstOrFail(); if ($spff5c0e->status === Order::STATUS_REFUND) { return false; } if ($spff5c0e->status === Order::STATUS_FROZEN) { return true; } $spf176c4 = $spff5c0e->status; if ($spf176c4 === \App\Order::STATUS_SUCCESS) { $spa1c14a = '已发货'; } elseif ($spf176c4 === \App\Order::STATUS_UNPAY) { $spa1c14a = '未付款'; } elseif ($spf176c4 === \App\Order::STATUS_PAID) { $spa1c14a = '未发货'; } else { throw new \Exception('unknown'); } $sp24cedd = User::where('id', $spff5c0e->user_id)->lockForUpdate()->firstOrFail(); $spd79528 = new FundRecord(); $spd79528->user_id = $spff5c0e->user_id; $spd79528->type = FundRecord::TYPE_OUT; $spd79528->order_id = $spff5c0e->id; $spd79528->remark = $spff5c0e === $spff5c0e ? '' : '关联订单#' . $spff5c0e->order_no . ': '; if ($spf176c4 === \App\Order::STATUS_SUCCESS) { $sp24cedd->m_frozen += $spff5c0e->income; $sp24cedd->saveOrFail(); $spd79528->amount = -$spff5c0e->income; $spd79528->remark .= $spd78601 . ', 冻结订单#' . $spff5c0e->order_no; } else { $spd79528->amount = 0; $spd79528->remark .= $spd78601 . ', 冻结订单(' . $spa1c14a . ')#' . $spff5c0e->order_no; } $spd79528->all = $sp24cedd->m_all; $spd79528->frozen = $sp24cedd->m_frozen; $spd79528->paid = $sp24cedd->m_paid; $spd79528->balance = $sp24cedd->m_balance; $spd79528->saveOrFail(); $spff5c0e->status = \App\Order::STATUS_FROZEN; $spff5c0e->frozen_reason = ($spff5c0e === $spff5c0e ? '' : '关联订单#' . $spff5c0e->order_no . ': ') . $spd78601; $spff5c0e->saveOrFail(); return true; }); } catch (\Throwable $spd3b3eb) { $sp1f5ff7 = 'FundHelper.orderFreeze error'; if ($spff5c0e) { $sp1f5ff7 .= ', order_no:' . $spff5c0e->order_no . ', user_id:' . $spff5c0e->user_id . ', amount:' . $spff5c0e->income; } else { $sp1f5ff7 .= ', order_no: null'; } Log::error($sp1f5ff7 . ' with exception:', array('Exception' => $spd3b3eb)); return false; } } public static function orderUnfreeze($spcbed86, $sp1db61c, callable $sp3913a8 = null, &$sp37aebf = null) { $spff5c0e = null; try { return DB::transaction(function () use($spcbed86, &$spff5c0e, $sp1db61c, $sp3913a8, &$sp37aebf) { $spff5c0e = \App\Order::where('id', $spcbed86)->lockForUpdate()->firstOrFail(); if ($sp3913a8 !== null) { $spced997 = $sp3913a8(); if ($spced997 !== self::ACTION_CONTINUE) { return $spced997; } } if ($spff5c0e->status === Order::STATUS_REFUND) { $sp37aebf = $spff5c0e->status; return false; } if ($spff5c0e->status !== Order::STATUS_FROZEN) { $sp37aebf = $spff5c0e->status; return true; } $sp82f409 = $spff5c0e->card_orders()->exists(); if ($sp82f409) { $sp37aebf = \App\Order::STATUS_SUCCESS; $spa1c14a = '已发货'; } else { if ($spff5c0e->paid_at === NULL) { $sp37aebf = \App\Order::STATUS_UNPAY; $spa1c14a = '未付款'; } else { $sp37aebf = \App\Order::STATUS_PAID; $spa1c14a = '未发货'; } } $sp24cedd = User::where('id', $spff5c0e->user_id)->lockForUpdate()->firstOrFail(); $spd79528 = new FundRecord(); $spd79528->user_id = $spff5c0e->user_id; $spd79528->type = FundRecord::TYPE_IN; $spd79528->remark = $spff5c0e === $spff5c0e ? '' : '关联订单#' . $spff5c0e->order_no . ': '; $spd79528->order_id = $spff5c0e->id; if ($sp82f409) { $sp24cedd->m_frozen -= $spff5c0e->income; $sp24cedd->saveOrFail(); $spd79528->amount = $spff5c0e->income; $spd79528->remark .= $sp1db61c . ', 解冻订单#' . $spff5c0e->order_no; } else { $spd79528->amount = 0; $spd79528->remark .= $sp1db61c . ', 解冻订单(' . $spa1c14a . ')#' . $spff5c0e->order_no; } $spd79528->all = $sp24cedd->m_all; $spd79528->frozen = $sp24cedd->m_frozen; $spd79528->paid = $sp24cedd->m_paid; $spd79528->balance = $sp24cedd->m_balance; $spd79528->saveOrFail(); $spff5c0e->status = $sp37aebf; $spff5c0e->saveOrFail(); return true; }); } catch (\Throwable $spd3b3eb) { $sp1f5ff7 = 'FundHelper.orderUnfreeze error'; if ($spff5c0e) { $sp1f5ff7 .= ', order_no:' . $spff5c0e->order_no . ', user_id:' . $spff5c0e->user_id . ',amount:' . $spff5c0e->income; } else { $sp1f5ff7 .= ', order_no: null'; } Log::error($sp1f5ff7 . ' with exception:', array('Exception' => $spd3b3eb)); return false; } } }