<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spc3103e, callable $sp77f73c) { $sp42d084 = null; try { return DB::transaction(function () use($spc3103e, &$sp42d084, $sp77f73c) { $sp42d084 = \App\Order::where('id', $spc3103e)->lockForUpdate()->firstOrFail(); $spa64ee0 = $sp77f73c($sp42d084); if ($spa64ee0 !== self::ACTION_CONTINUE) { return $spa64ee0; } $sp766bcc = User::where('id', $sp42d084->user_id)->lockForUpdate()->firstOrFail(); $sp766bcc->m_all += $sp42d084->income; $sp766bcc->saveOrFail(); $sp8248a9 = new FundRecord(); $sp8248a9->user_id = $sp42d084->user_id; $sp8248a9->type = FundRecord::TYPE_IN; $sp8248a9->amount = $sp42d084->income; $sp8248a9->all = $sp766bcc->m_all; $sp8248a9->frozen = $sp766bcc->m_frozen; $sp8248a9->paid = $sp766bcc->m_paid; $sp8248a9->balance = $sp766bcc->m_balance; $sp8248a9->remark = '订单#' . $sp42d084->order_no; $sp8248a9->order_id = $sp42d084->id; $sp8248a9->saveOrFail(); return true; }); } catch (\Throwable $spd118f7) { $sp1955ac = 'FundHelper.orderSuccess error, order_id:' . $spc3103e; if ($sp42d084) { $sp1955ac .= ', user_id:' . $sp42d084->user_id . ',income:' . $sp42d084->income . ',order_no:' . $sp42d084->order_no; } Log::error($sp1955ac . ' with exception:', array('Exception' => $spd118f7)); return false; } } public static function orderFreeze($spc3103e, $spad9b1d) { $sp42d084 = null; try { return DB::transaction(function () use($spc3103e, &$sp42d084, $spad9b1d) { $sp42d084 = \App\Order::where('id', $spc3103e)->lockForUpdate()->firstOrFail(); if ($sp42d084->status === Order::STATUS_REFUND) { return false; } if ($sp42d084->status === Order::STATUS_FROZEN) { return true; } $spaea4cb = $sp42d084->status; if ($spaea4cb === \App\Order::STATUS_SUCCESS) { $sp400143 = '已发货'; } elseif ($spaea4cb === \App\Order::STATUS_UNPAY) { $sp400143 = '未付款'; } elseif ($spaea4cb === \App\Order::STATUS_PAID) { $sp400143 = '未发货'; } else { throw new \Exception('unknown'); } $sp766bcc = User::where('id', $sp42d084->user_id)->lockForUpdate()->firstOrFail(); $sp8248a9 = new FundRecord(); $sp8248a9->user_id = $sp42d084->user_id; $sp8248a9->type = FundRecord::TYPE_OUT; $sp8248a9->order_id = $sp42d084->id; $sp8248a9->remark = $sp42d084 === $sp42d084 ? '' : '关联订单#' . $sp42d084->order_no . ': '; if ($spaea4cb === \App\Order::STATUS_SUCCESS) { $sp766bcc->m_frozen += $sp42d084->income; $sp766bcc->saveOrFail(); $sp8248a9->amount = -$sp42d084->income; $sp8248a9->remark .= $spad9b1d . ', 冻结订单#' . $sp42d084->order_no; } else { $sp8248a9->amount = 0; $sp8248a9->remark .= $spad9b1d . ', 冻结订单(' . $sp400143 . ')#' . $sp42d084->order_no; } $sp8248a9->all = $sp766bcc->m_all; $sp8248a9->frozen = $sp766bcc->m_frozen; $sp8248a9->paid = $sp766bcc->m_paid; $sp8248a9->balance = $sp766bcc->m_balance; $sp8248a9->saveOrFail(); $sp42d084->status = \App\Order::STATUS_FROZEN; $sp42d084->frozen_reason = ($sp42d084 === $sp42d084 ? '' : '关联订单#' . $sp42d084->order_no . ': ') . $spad9b1d; $sp42d084->saveOrFail(); return true; }); } catch (\Throwable $spd118f7) { $sp1955ac = 'FundHelper.orderFreeze error'; if ($sp42d084) { $sp1955ac .= ', order_no:' . $sp42d084->order_no . ', user_id:' . $sp42d084->user_id . ', amount:' . $sp42d084->income; } else { $sp1955ac .= ', order_no: null'; } Log::error($sp1955ac . ' with exception:', array('Exception' => $spd118f7)); return false; } } public static function orderUnfreeze($spc3103e, $sp96b2c2, callable $sp27b124 = null, &$spdfe010 = null) { $sp42d084 = null; try { return DB::transaction(function () use($spc3103e, &$sp42d084, $sp96b2c2, $sp27b124, &$spdfe010) { $sp42d084 = \App\Order::where('id', $spc3103e)->lockForUpdate()->firstOrFail(); if ($sp27b124 !== null) { $spa64ee0 = $sp27b124(); if ($spa64ee0 !== self::ACTION_CONTINUE) { return $spa64ee0; } } if ($sp42d084->status === Order::STATUS_REFUND) { $spdfe010 = $sp42d084->status; return false; } if ($sp42d084->status !== Order::STATUS_FROZEN) { $spdfe010 = $sp42d084->status; return true; } $spf23838 = $sp42d084->card_orders()->exists(); if ($spf23838) { $spdfe010 = \App\Order::STATUS_SUCCESS; $sp400143 = '已发货'; } else { if ($sp42d084->paid_at === NULL) { $spdfe010 = \App\Order::STATUS_UNPAY; $sp400143 = '未付款'; } else { $spdfe010 = \App\Order::STATUS_PAID; $sp400143 = '未发货'; } } $sp766bcc = User::where('id', $sp42d084->user_id)->lockForUpdate()->firstOrFail(); $sp8248a9 = new FundRecord(); $sp8248a9->user_id = $sp42d084->user_id; $sp8248a9->type = FundRecord::TYPE_IN; $sp8248a9->remark = $sp42d084 === $sp42d084 ? '' : '关联订单#' . $sp42d084->order_no . ': '; $sp8248a9->order_id = $sp42d084->id; if ($spf23838) { $sp766bcc->m_frozen -= $sp42d084->income; $sp766bcc->saveOrFail(); $sp8248a9->amount = $sp42d084->income; $sp8248a9->remark .= $sp96b2c2 . ', 解冻订单#' . $sp42d084->order_no; } else { $sp8248a9->amount = 0; $sp8248a9->remark .= $sp96b2c2 . ', 解冻订单(' . $sp400143 . ')#' . $sp42d084->order_no; } $sp8248a9->all = $sp766bcc->m_all; $sp8248a9->frozen = $sp766bcc->m_frozen; $sp8248a9->paid = $sp766bcc->m_paid; $sp8248a9->balance = $sp766bcc->m_balance; $sp8248a9->saveOrFail(); $sp42d084->status = $spdfe010; $sp42d084->saveOrFail(); return true; }); } catch (\Throwable $spd118f7) { $sp1955ac = 'FundHelper.orderUnfreeze error'; if ($sp42d084) { $sp1955ac .= ', order_no:' . $sp42d084->order_no . ', user_id:' . $sp42d084->user_id . ',amount:' . $sp42d084->income; } else { $sp1955ac .= ', order_no: null'; } Log::error($sp1955ac . ' with exception:', array('Exception' => $spd118f7)); return false; } } }