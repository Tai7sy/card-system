<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spb6ceba, callable $sp78dcf2) { $sp7c328e = null; try { return DB::transaction(function () use($spb6ceba, &$sp7c328e, $sp78dcf2) { $sp7c328e = \App\Order::where('id', $spb6ceba)->lockForUpdate()->firstOrFail(); $sp296935 = $sp78dcf2($sp7c328e); if ($sp296935 !== self::ACTION_CONTINUE) { return $sp296935; } $spe2c9ac = User::where('id', $sp7c328e->user_id)->lockForUpdate()->firstOrFail(); $spe2c9ac->m_all += $sp7c328e->income; $spe2c9ac->saveOrFail(); $spbbb8a1 = new FundRecord(); $spbbb8a1->user_id = $sp7c328e->user_id; $spbbb8a1->type = FundRecord::TYPE_IN; $spbbb8a1->amount = $sp7c328e->income; $spbbb8a1->all = $spe2c9ac->m_all; $spbbb8a1->frozen = $spe2c9ac->m_frozen; $spbbb8a1->paid = $spe2c9ac->m_paid; $spbbb8a1->balance = $spe2c9ac->m_balance; $spbbb8a1->remark = '订单#' . $sp7c328e->order_no; $spbbb8a1->order_id = $sp7c328e->id; $spbbb8a1->saveOrFail(); return true; }); } catch (\Throwable $spbd4f27) { $sp7ee4b9 = 'FundHelper.orderSuccess error, order_id:' . $spb6ceba; if ($sp7c328e) { $sp7ee4b9 .= ', user_id:' . $sp7c328e->user_id . ',income:' . $sp7c328e->income . ',order_no:' . $sp7c328e->order_no; } Log::error($sp7ee4b9 . ' with exception:', array('Exception' => $spbd4f27)); return false; } } public static function orderFreeze($spb6ceba, $sp0bd758) { $sp7c328e = null; try { return DB::transaction(function () use($spb6ceba, &$sp7c328e, $sp0bd758) { $sp7c328e = \App\Order::where('id', $spb6ceba)->lockForUpdate()->firstOrFail(); if ($sp7c328e->status === Order::STATUS_REFUND) { return false; } if ($sp7c328e->status === Order::STATUS_FROZEN) { return true; } $sp25b410 = $sp7c328e->status; if ($sp25b410 === \App\Order::STATUS_SUCCESS) { $spadb47b = '已发货'; } elseif ($sp25b410 === \App\Order::STATUS_UNPAY) { $spadb47b = '未付款'; } elseif ($sp25b410 === \App\Order::STATUS_PAID) { $spadb47b = '未发货'; } else { throw new \Exception('unknown'); } $spe2c9ac = User::where('id', $sp7c328e->user_id)->lockForUpdate()->firstOrFail(); $spbbb8a1 = new FundRecord(); $spbbb8a1->user_id = $sp7c328e->user_id; $spbbb8a1->type = FundRecord::TYPE_OUT; $spbbb8a1->order_id = $sp7c328e->id; $spbbb8a1->remark = $sp7c328e === $sp7c328e ? '' : '关联订单#' . $sp7c328e->order_no . ': '; if ($sp25b410 === \App\Order::STATUS_SUCCESS) { $spe2c9ac->m_frozen += $sp7c328e->income; $spe2c9ac->saveOrFail(); $spbbb8a1->amount = -$sp7c328e->income; $spbbb8a1->remark .= $sp0bd758 . ', 冻结订单#' . $sp7c328e->order_no; } else { $spbbb8a1->amount = 0; $spbbb8a1->remark .= $sp0bd758 . ', 冻结订单(' . $spadb47b . ')#' . $sp7c328e->order_no; } $spbbb8a1->all = $spe2c9ac->m_all; $spbbb8a1->frozen = $spe2c9ac->m_frozen; $spbbb8a1->paid = $spe2c9ac->m_paid; $spbbb8a1->balance = $spe2c9ac->m_balance; $spbbb8a1->saveOrFail(); $sp7c328e->status = \App\Order::STATUS_FROZEN; $sp7c328e->frozen_reason = ($sp7c328e === $sp7c328e ? '' : '关联订单#' . $sp7c328e->order_no . ': ') . $sp0bd758; $sp7c328e->saveOrFail(); return true; }); } catch (\Throwable $spbd4f27) { $sp7ee4b9 = 'FundHelper.orderFreeze error'; if ($sp7c328e) { $sp7ee4b9 .= ', order_no:' . $sp7c328e->order_no . ', user_id:' . $sp7c328e->user_id . ', amount:' . $sp7c328e->income; } else { $sp7ee4b9 .= ', order_no: null'; } Log::error($sp7ee4b9 . ' with exception:', array('Exception' => $spbd4f27)); return false; } } public static function orderUnfreeze($spb6ceba, $sp874676, callable $sp2ea811 = null, &$spd18e4e = null) { $sp7c328e = null; try { return DB::transaction(function () use($spb6ceba, &$sp7c328e, $sp874676, $sp2ea811, &$spd18e4e) { $sp7c328e = \App\Order::where('id', $spb6ceba)->lockForUpdate()->firstOrFail(); if ($sp2ea811 !== null) { $sp296935 = $sp2ea811(); if ($sp296935 !== self::ACTION_CONTINUE) { return $sp296935; } } if ($sp7c328e->status === Order::STATUS_REFUND) { $spd18e4e = $sp7c328e->status; return false; } if ($sp7c328e->status !== Order::STATUS_FROZEN) { $spd18e4e = $sp7c328e->status; return true; } $sp32a204 = $sp7c328e->card_orders()->exists(); if ($sp32a204) { $spd18e4e = \App\Order::STATUS_SUCCESS; $spadb47b = '已发货'; } else { if ($sp7c328e->paid_at === NULL) { $spd18e4e = \App\Order::STATUS_UNPAY; $spadb47b = '未付款'; } else { $spd18e4e = \App\Order::STATUS_PAID; $spadb47b = '未发货'; } } $spe2c9ac = User::where('id', $sp7c328e->user_id)->lockForUpdate()->firstOrFail(); $spbbb8a1 = new FundRecord(); $spbbb8a1->user_id = $sp7c328e->user_id; $spbbb8a1->type = FundRecord::TYPE_IN; $spbbb8a1->remark = $sp7c328e === $sp7c328e ? '' : '关联订单#' . $sp7c328e->order_no . ': '; $spbbb8a1->order_id = $sp7c328e->id; if ($sp32a204) { $spe2c9ac->m_frozen -= $sp7c328e->income; $spe2c9ac->saveOrFail(); $spbbb8a1->amount = $sp7c328e->income; $spbbb8a1->remark .= $sp874676 . ', 解冻订单#' . $sp7c328e->order_no; } else { $spbbb8a1->amount = 0; $spbbb8a1->remark .= $sp874676 . ', 解冻订单(' . $spadb47b . ')#' . $sp7c328e->order_no; } $spbbb8a1->all = $spe2c9ac->m_all; $spbbb8a1->frozen = $spe2c9ac->m_frozen; $spbbb8a1->paid = $spe2c9ac->m_paid; $spbbb8a1->balance = $spe2c9ac->m_balance; $spbbb8a1->saveOrFail(); $sp7c328e->status = $spd18e4e; $sp7c328e->saveOrFail(); return true; }); } catch (\Throwable $spbd4f27) { $sp7ee4b9 = 'FundHelper.orderUnfreeze error'; if ($sp7c328e) { $sp7ee4b9 .= ', order_no:' . $sp7c328e->order_no . ', user_id:' . $sp7c328e->user_id . ',amount:' . $sp7c328e->income; } else { $sp7ee4b9 .= ', order_no: null'; } Log::error($sp7ee4b9 . ' with exception:', array('Exception' => $spbd4f27)); return false; } } }