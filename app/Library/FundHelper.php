<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp293e7f, callable $sp1a14bc) { $sp1abdd8 = null; try { return DB::transaction(function () use($sp293e7f, &$sp1abdd8, $sp1a14bc) { $sp1abdd8 = \App\Order::where('id', $sp293e7f)->lockForUpdate()->firstOrFail(); $sp5f5153 = $sp1a14bc($sp1abdd8); if ($sp5f5153 !== self::ACTION_CONTINUE) { return $sp5f5153; } $sp21e2d0 = User::where('id', $sp1abdd8->user_id)->lockForUpdate()->firstOrFail(); $sp21e2d0->m_all += $sp1abdd8->income; $sp21e2d0->saveOrFail(); $sp02f003 = new FundRecord(); $sp02f003->user_id = $sp1abdd8->user_id; $sp02f003->type = FundRecord::TYPE_IN; $sp02f003->amount = $sp1abdd8->income; $sp02f003->all = $sp21e2d0->m_all; $sp02f003->frozen = $sp21e2d0->m_frozen; $sp02f003->paid = $sp21e2d0->m_paid; $sp02f003->balance = $sp21e2d0->m_balance; $sp02f003->remark = '订单#' . $sp1abdd8->order_no; $sp02f003->order_id = $sp1abdd8->id; $sp02f003->saveOrFail(); return true; }); } catch (\Throwable $sped8699) { $sp3c95ae = 'FundHelper.orderSuccess error, order_id:' . $sp293e7f; if ($sp1abdd8) { $sp3c95ae .= ', user_id:' . $sp1abdd8->user_id . ',income:' . $sp1abdd8->income . ',order_no:' . $sp1abdd8->order_no; } Log::error($sp3c95ae . ' with exception:', array('Exception' => $sped8699)); return false; } } public static function orderFreeze($sp293e7f, $sp99a9d4) { $sp1abdd8 = null; try { return DB::transaction(function () use($sp293e7f, &$sp1abdd8, $sp99a9d4) { $sp1abdd8 = \App\Order::where('id', $sp293e7f)->lockForUpdate()->firstOrFail(); if ($sp1abdd8->status === Order::STATUS_REFUND) { return false; } if ($sp1abdd8->status === Order::STATUS_FROZEN) { return true; } $spc02c80 = $sp1abdd8->status; if ($spc02c80 === \App\Order::STATUS_SUCCESS) { $sp9b74b9 = '已发货'; } elseif ($spc02c80 === \App\Order::STATUS_UNPAY) { $sp9b74b9 = '未付款'; } elseif ($spc02c80 === \App\Order::STATUS_PAID) { $sp9b74b9 = '未发货'; } else { throw new \Exception('unknown'); } $sp21e2d0 = User::where('id', $sp1abdd8->user_id)->lockForUpdate()->firstOrFail(); $sp02f003 = new FundRecord(); $sp02f003->user_id = $sp1abdd8->user_id; $sp02f003->type = FundRecord::TYPE_OUT; $sp02f003->order_id = $sp1abdd8->id; $sp02f003->remark = $sp1abdd8 === $sp1abdd8 ? '' : '关联订单#' . $sp1abdd8->order_no . ': '; if ($spc02c80 === \App\Order::STATUS_SUCCESS) { $sp21e2d0->m_frozen += $sp1abdd8->income; $sp21e2d0->saveOrFail(); $sp02f003->amount = -$sp1abdd8->income; $sp02f003->remark .= $sp99a9d4 . ', 冻结订单#' . $sp1abdd8->order_no; } else { $sp02f003->amount = 0; $sp02f003->remark .= $sp99a9d4 . ', 冻结订单(' . $sp9b74b9 . ')#' . $sp1abdd8->order_no; } $sp02f003->all = $sp21e2d0->m_all; $sp02f003->frozen = $sp21e2d0->m_frozen; $sp02f003->paid = $sp21e2d0->m_paid; $sp02f003->balance = $sp21e2d0->m_balance; $sp02f003->saveOrFail(); $sp1abdd8->status = \App\Order::STATUS_FROZEN; $sp1abdd8->frozen_reason = ($sp1abdd8 === $sp1abdd8 ? '' : '关联订单#' . $sp1abdd8->order_no . ': ') . $sp99a9d4; $sp1abdd8->saveOrFail(); return true; }); } catch (\Throwable $sped8699) { $sp3c95ae = 'FundHelper.orderFreeze error'; if ($sp1abdd8) { $sp3c95ae .= ', order_no:' . $sp1abdd8->order_no . ', user_id:' . $sp1abdd8->user_id . ', amount:' . $sp1abdd8->income; } else { $sp3c95ae .= ', order_no: null'; } Log::error($sp3c95ae . ' with exception:', array('Exception' => $sped8699)); return false; } } public static function orderUnfreeze($sp293e7f, $sp5be287, callable $spc4f9a3 = null, &$sp3783db = null) { $sp1abdd8 = null; try { return DB::transaction(function () use($sp293e7f, &$sp1abdd8, $sp5be287, $spc4f9a3, &$sp3783db) { $sp1abdd8 = \App\Order::where('id', $sp293e7f)->lockForUpdate()->firstOrFail(); if ($spc4f9a3 !== null) { $sp5f5153 = $spc4f9a3(); if ($sp5f5153 !== self::ACTION_CONTINUE) { return $sp5f5153; } } if ($sp1abdd8->status === Order::STATUS_REFUND) { $sp3783db = $sp1abdd8->status; return false; } if ($sp1abdd8->status !== Order::STATUS_FROZEN) { $sp3783db = $sp1abdd8->status; return true; } $sp5c5097 = $sp1abdd8->card_orders()->exists(); if ($sp5c5097) { $sp3783db = \App\Order::STATUS_SUCCESS; $sp9b74b9 = '已发货'; } else { if ($sp1abdd8->paid_at === NULL) { $sp3783db = \App\Order::STATUS_UNPAY; $sp9b74b9 = '未付款'; } else { $sp3783db = \App\Order::STATUS_PAID; $sp9b74b9 = '未发货'; } } $sp21e2d0 = User::where('id', $sp1abdd8->user_id)->lockForUpdate()->firstOrFail(); $sp02f003 = new FundRecord(); $sp02f003->user_id = $sp1abdd8->user_id; $sp02f003->type = FundRecord::TYPE_IN; $sp02f003->remark = $sp1abdd8 === $sp1abdd8 ? '' : '关联订单#' . $sp1abdd8->order_no . ': '; $sp02f003->order_id = $sp1abdd8->id; if ($sp5c5097) { $sp21e2d0->m_frozen -= $sp1abdd8->income; $sp21e2d0->saveOrFail(); $sp02f003->amount = $sp1abdd8->income; $sp02f003->remark .= $sp5be287 . ', 解冻订单#' . $sp1abdd8->order_no; } else { $sp02f003->amount = 0; $sp02f003->remark .= $sp5be287 . ', 解冻订单(' . $sp9b74b9 . ')#' . $sp1abdd8->order_no; } $sp02f003->all = $sp21e2d0->m_all; $sp02f003->frozen = $sp21e2d0->m_frozen; $sp02f003->paid = $sp21e2d0->m_paid; $sp02f003->balance = $sp21e2d0->m_balance; $sp02f003->saveOrFail(); $sp1abdd8->status = $sp3783db; $sp1abdd8->saveOrFail(); return true; }); } catch (\Throwable $sped8699) { $sp3c95ae = 'FundHelper.orderUnfreeze error'; if ($sp1abdd8) { $sp3c95ae .= ', order_no:' . $sp1abdd8->order_no . ', user_id:' . $sp1abdd8->user_id . ',amount:' . $sp1abdd8->income; } else { $sp3c95ae .= ', order_no: null'; } Log::error($sp3c95ae . ' with exception:', array('Exception' => $sped8699)); return false; } } }