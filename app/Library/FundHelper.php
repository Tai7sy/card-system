<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp4f5d8e, callable $spfffd47) { $spf6b161 = null; try { return DB::transaction(function () use($sp4f5d8e, &$spf6b161, $spfffd47) { $spf6b161 = \App\Order::where('id', $sp4f5d8e)->lockForUpdate()->firstOrFail(); $sp6706d8 = $spfffd47($spf6b161); if ($sp6706d8 !== self::ACTION_CONTINUE) { return $sp6706d8; } $sp264a55 = User::where('id', $spf6b161->user_id)->lockForUpdate()->firstOrFail(); $sp264a55->m_all += $spf6b161->income; $sp264a55->saveOrFail(); $sp9ce3db = new FundRecord(); $sp9ce3db->user_id = $spf6b161->user_id; $sp9ce3db->type = FundRecord::TYPE_IN; $sp9ce3db->amount = $spf6b161->income; $sp9ce3db->all = $sp264a55->m_all; $sp9ce3db->frozen = $sp264a55->m_frozen; $sp9ce3db->paid = $sp264a55->m_paid; $sp9ce3db->balance = $sp264a55->m_balance; $sp9ce3db->remark = '订单#' . $spf6b161->order_no; $sp9ce3db->order_id = $spf6b161->id; $sp9ce3db->saveOrFail(); return true; }); } catch (\Throwable $spf95c2c) { $spa01063 = 'FundHelper.orderSuccess error, order_id:' . $sp4f5d8e; if ($spf6b161) { $spa01063 .= ', user_id:' . $spf6b161->user_id . ',income:' . $spf6b161->income . ',order_no:' . $spf6b161->order_no; } Log::error($spa01063 . ' with exception:', array('Exception' => $spf95c2c)); return false; } } public static function orderFreeze($sp4f5d8e, $spa91cd9) { $spf6b161 = null; try { return DB::transaction(function () use($sp4f5d8e, &$spf6b161, $spa91cd9) { $spf6b161 = \App\Order::where('id', $sp4f5d8e)->lockForUpdate()->firstOrFail(); if ($spf6b161->status === Order::STATUS_REFUND) { return false; } if ($spf6b161->status === Order::STATUS_FROZEN) { return true; } $spef9515 = $spf6b161->status; if ($spef9515 === \App\Order::STATUS_SUCCESS) { $sp9c24cb = '已发货'; } elseif ($spef9515 === \App\Order::STATUS_UNPAY) { $sp9c24cb = '未付款'; } elseif ($spef9515 === \App\Order::STATUS_PAID) { $sp9c24cb = '未发货'; } else { throw new \Exception('unknown'); } $sp264a55 = User::where('id', $spf6b161->user_id)->lockForUpdate()->firstOrFail(); $sp9ce3db = new FundRecord(); $sp9ce3db->user_id = $spf6b161->user_id; $sp9ce3db->type = FundRecord::TYPE_OUT; $sp9ce3db->order_id = $spf6b161->id; $sp9ce3db->remark = $spf6b161 === $spf6b161 ? '' : '关联订单#' . $spf6b161->order_no . ': '; if ($spef9515 === \App\Order::STATUS_SUCCESS) { $sp264a55->m_frozen += $spf6b161->income; $sp264a55->saveOrFail(); $sp9ce3db->amount = -$spf6b161->income; $sp9ce3db->remark .= $spa91cd9 . ', 冻结订单#' . $spf6b161->order_no; } else { $sp9ce3db->amount = 0; $sp9ce3db->remark .= $spa91cd9 . ', 冻结订单(' . $sp9c24cb . ')#' . $spf6b161->order_no; } $sp9ce3db->all = $sp264a55->m_all; $sp9ce3db->frozen = $sp264a55->m_frozen; $sp9ce3db->paid = $sp264a55->m_paid; $sp9ce3db->balance = $sp264a55->m_balance; $sp9ce3db->saveOrFail(); $spf6b161->status = \App\Order::STATUS_FROZEN; $spf6b161->frozen_reason = ($spf6b161 === $spf6b161 ? '' : '关联订单#' . $spf6b161->order_no . ': ') . $spa91cd9; $spf6b161->saveOrFail(); return true; }); } catch (\Throwable $spf95c2c) { $spa01063 = 'FundHelper.orderFreeze error'; if ($spf6b161) { $spa01063 .= ', order_no:' . $spf6b161->order_no . ', user_id:' . $spf6b161->user_id . ', amount:' . $spf6b161->income; } else { $spa01063 .= ', order_no: null'; } Log::error($spa01063 . ' with exception:', array('Exception' => $spf95c2c)); return false; } } public static function orderUnfreeze($sp4f5d8e, $spf0b637, callable $spc7a319 = null, &$spcd458b = null) { $spf6b161 = null; try { return DB::transaction(function () use($sp4f5d8e, &$spf6b161, $spf0b637, $spc7a319, &$spcd458b) { $spf6b161 = \App\Order::where('id', $sp4f5d8e)->lockForUpdate()->firstOrFail(); if ($spc7a319 !== null) { $sp6706d8 = $spc7a319(); if ($sp6706d8 !== self::ACTION_CONTINUE) { return $sp6706d8; } } if ($spf6b161->status === Order::STATUS_REFUND) { $spcd458b = $spf6b161->status; return false; } if ($spf6b161->status !== Order::STATUS_FROZEN) { $spcd458b = $spf6b161->status; return true; } $sp3235c0 = $spf6b161->card_orders()->exists(); if ($sp3235c0) { $spcd458b = \App\Order::STATUS_SUCCESS; $sp9c24cb = '已发货'; } else { if ($spf6b161->paid_at === NULL) { $spcd458b = \App\Order::STATUS_UNPAY; $sp9c24cb = '未付款'; } else { $spcd458b = \App\Order::STATUS_PAID; $sp9c24cb = '未发货'; } } $sp264a55 = User::where('id', $spf6b161->user_id)->lockForUpdate()->firstOrFail(); $sp9ce3db = new FundRecord(); $sp9ce3db->user_id = $spf6b161->user_id; $sp9ce3db->type = FundRecord::TYPE_IN; $sp9ce3db->remark = $spf6b161 === $spf6b161 ? '' : '关联订单#' . $spf6b161->order_no . ': '; $sp9ce3db->order_id = $spf6b161->id; if ($sp3235c0) { $sp264a55->m_frozen -= $spf6b161->income; $sp264a55->saveOrFail(); $sp9ce3db->amount = $spf6b161->income; $sp9ce3db->remark .= $spf0b637 . ', 解冻订单#' . $spf6b161->order_no; } else { $sp9ce3db->amount = 0; $sp9ce3db->remark .= $spf0b637 . ', 解冻订单(' . $sp9c24cb . ')#' . $spf6b161->order_no; } $sp9ce3db->all = $sp264a55->m_all; $sp9ce3db->frozen = $sp264a55->m_frozen; $sp9ce3db->paid = $sp264a55->m_paid; $sp9ce3db->balance = $sp264a55->m_balance; $sp9ce3db->saveOrFail(); $spf6b161->status = $spcd458b; $spf6b161->saveOrFail(); return true; }); } catch (\Throwable $spf95c2c) { $spa01063 = 'FundHelper.orderUnfreeze error'; if ($spf6b161) { $spa01063 .= ', order_no:' . $spf6b161->order_no . ', user_id:' . $spf6b161->user_id . ',amount:' . $spf6b161->income; } else { $spa01063 .= ', order_no: null'; } Log::error($spa01063 . ' with exception:', array('Exception' => $spf95c2c)); return false; } } }