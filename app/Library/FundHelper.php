<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spa1be93, callable $sp672fac) { $sp8fbe20 = null; try { return DB::transaction(function () use($spa1be93, &$sp8fbe20, $sp672fac) { $sp8fbe20 = \App\Order::where('id', $spa1be93)->lockForUpdate()->firstOrFail(); $sp93ae8e = $sp672fac($sp8fbe20); if ($sp93ae8e !== self::ACTION_CONTINUE) { return $sp93ae8e; } $spd78df7 = User::where('id', $sp8fbe20->user_id)->lockForUpdate()->firstOrFail(); $spd78df7->m_all += $sp8fbe20->income; $spd78df7->saveOrFail(); $spb4b00d = new FundRecord(); $spb4b00d->user_id = $sp8fbe20->user_id; $spb4b00d->type = FundRecord::TYPE_IN; $spb4b00d->amount = $sp8fbe20->income; $spb4b00d->all = $spd78df7->m_all; $spb4b00d->frozen = $spd78df7->m_frozen; $spb4b00d->paid = $spd78df7->m_paid; $spb4b00d->balance = $spd78df7->m_balance; $spb4b00d->remark = '订单#' . $sp8fbe20->order_no; $spb4b00d->order_id = $sp8fbe20->id; $spb4b00d->saveOrFail(); return true; }); } catch (\Throwable $sp8e3e91) { $spadbb50 = 'FundHelper.orderSuccess error, order_id:' . $spa1be93; if ($sp8fbe20) { $spadbb50 .= ', user_id:' . $sp8fbe20->user_id . ',income:' . $sp8fbe20->income . ',order_no:' . $sp8fbe20->order_no; } Log::error($spadbb50 . ' with exception:', array('Exception' => $sp8e3e91)); return false; } } public static function orderFreeze($spa1be93, $spc30129) { $sp8fbe20 = null; try { return DB::transaction(function () use($spa1be93, &$sp8fbe20, $spc30129) { $sp8fbe20 = \App\Order::where('id', $spa1be93)->lockForUpdate()->firstOrFail(); if ($sp8fbe20->status === Order::STATUS_REFUND) { return false; } if ($sp8fbe20->status === Order::STATUS_FROZEN) { return true; } $spf62f23 = $sp8fbe20->status; if ($spf62f23 === \App\Order::STATUS_SUCCESS) { $spcaa9d9 = '已发货'; } elseif ($spf62f23 === \App\Order::STATUS_UNPAY) { $spcaa9d9 = '未付款'; } elseif ($spf62f23 === \App\Order::STATUS_PAID) { $spcaa9d9 = '未发货'; } else { throw new \Exception('unknown'); } $spd78df7 = User::where('id', $sp8fbe20->user_id)->lockForUpdate()->firstOrFail(); $spb4b00d = new FundRecord(); $spb4b00d->user_id = $sp8fbe20->user_id; $spb4b00d->type = FundRecord::TYPE_OUT; $spb4b00d->order_id = $sp8fbe20->id; $spb4b00d->remark = $sp8fbe20 === $sp8fbe20 ? '' : '关联订单#' . $sp8fbe20->order_no . ': '; if ($spf62f23 === \App\Order::STATUS_SUCCESS) { $spd78df7->m_frozen += $sp8fbe20->income; $spd78df7->saveOrFail(); $spb4b00d->amount = -$sp8fbe20->income; $spb4b00d->remark .= $spc30129 . ', 冻结订单#' . $sp8fbe20->order_no; } else { $spb4b00d->amount = 0; $spb4b00d->remark .= $spc30129 . ', 冻结订单(' . $spcaa9d9 . ')#' . $sp8fbe20->order_no; } $spb4b00d->all = $spd78df7->m_all; $spb4b00d->frozen = $spd78df7->m_frozen; $spb4b00d->paid = $spd78df7->m_paid; $spb4b00d->balance = $spd78df7->m_balance; $spb4b00d->saveOrFail(); $sp8fbe20->status = \App\Order::STATUS_FROZEN; $sp8fbe20->frozen_reason = ($sp8fbe20 === $sp8fbe20 ? '' : '关联订单#' . $sp8fbe20->order_no . ': ') . $spc30129; $sp8fbe20->saveOrFail(); return true; }); } catch (\Throwable $sp8e3e91) { $spadbb50 = 'FundHelper.orderFreeze error'; if ($sp8fbe20) { $spadbb50 .= ', order_no:' . $sp8fbe20->order_no . ', user_id:' . $sp8fbe20->user_id . ', amount:' . $sp8fbe20->income; } else { $spadbb50 .= ', order_no: null'; } Log::error($spadbb50 . ' with exception:', array('Exception' => $sp8e3e91)); return false; } } public static function orderUnfreeze($spa1be93, $spc5ccc0, callable $sp85ec6a = null, &$sp3ac7e0 = null) { $sp8fbe20 = null; try { return DB::transaction(function () use($spa1be93, &$sp8fbe20, $spc5ccc0, $sp85ec6a, &$sp3ac7e0) { $sp8fbe20 = \App\Order::where('id', $spa1be93)->lockForUpdate()->firstOrFail(); if ($sp85ec6a !== null) { $sp93ae8e = $sp85ec6a(); if ($sp93ae8e !== self::ACTION_CONTINUE) { return $sp93ae8e; } } if ($sp8fbe20->status === Order::STATUS_REFUND) { $sp3ac7e0 = $sp8fbe20->status; return false; } if ($sp8fbe20->status !== Order::STATUS_FROZEN) { $sp3ac7e0 = $sp8fbe20->status; return true; } $sp3300e6 = $sp8fbe20->card_orders()->exists(); if ($sp3300e6) { $sp3ac7e0 = \App\Order::STATUS_SUCCESS; $spcaa9d9 = '已发货'; } else { if ($sp8fbe20->paid_at === NULL) { $sp3ac7e0 = \App\Order::STATUS_UNPAY; $spcaa9d9 = '未付款'; } else { $sp3ac7e0 = \App\Order::STATUS_PAID; $spcaa9d9 = '未发货'; } } $spd78df7 = User::where('id', $sp8fbe20->user_id)->lockForUpdate()->firstOrFail(); $spb4b00d = new FundRecord(); $spb4b00d->user_id = $sp8fbe20->user_id; $spb4b00d->type = FundRecord::TYPE_IN; $spb4b00d->remark = $sp8fbe20 === $sp8fbe20 ? '' : '关联订单#' . $sp8fbe20->order_no . ': '; $spb4b00d->order_id = $sp8fbe20->id; if ($sp3300e6) { $spd78df7->m_frozen -= $sp8fbe20->income; $spd78df7->saveOrFail(); $spb4b00d->amount = $sp8fbe20->income; $spb4b00d->remark .= $spc5ccc0 . ', 解冻订单#' . $sp8fbe20->order_no; } else { $spb4b00d->amount = 0; $spb4b00d->remark .= $spc5ccc0 . ', 解冻订单(' . $spcaa9d9 . ')#' . $sp8fbe20->order_no; } $spb4b00d->all = $spd78df7->m_all; $spb4b00d->frozen = $spd78df7->m_frozen; $spb4b00d->paid = $spd78df7->m_paid; $spb4b00d->balance = $spd78df7->m_balance; $spb4b00d->saveOrFail(); $sp8fbe20->status = $sp3ac7e0; $sp8fbe20->saveOrFail(); return true; }); } catch (\Throwable $sp8e3e91) { $spadbb50 = 'FundHelper.orderUnfreeze error'; if ($sp8fbe20) { $spadbb50 .= ', order_no:' . $sp8fbe20->order_no . ', user_id:' . $sp8fbe20->user_id . ',amount:' . $sp8fbe20->income; } else { $spadbb50 .= ', order_no: null'; } Log::error($spadbb50 . ' with exception:', array('Exception' => $sp8e3e91)); return false; } } }