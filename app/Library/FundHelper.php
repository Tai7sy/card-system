<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp7d06f4, callable $spf8bcad) { $spaf5db5 = null; try { return DB::transaction(function () use($sp7d06f4, &$spaf5db5, $spf8bcad) { $spaf5db5 = \App\Order::where('id', $sp7d06f4)->lockForUpdate()->firstOrFail(); $sp8ee8d3 = $spf8bcad($spaf5db5); if ($sp8ee8d3 !== self::ACTION_CONTINUE) { return $sp8ee8d3; } $sp0a324a = User::where('id', $spaf5db5->user_id)->lockForUpdate()->firstOrFail(); $sp0a324a->m_all += $spaf5db5->income; $sp0a324a->saveOrFail(); $spe65572 = new FundRecord(); $spe65572->user_id = $spaf5db5->user_id; $spe65572->type = FundRecord::TYPE_IN; $spe65572->amount = $spaf5db5->income; $spe65572->all = $sp0a324a->m_all; $spe65572->frozen = $sp0a324a->m_frozen; $spe65572->paid = $sp0a324a->m_paid; $spe65572->balance = $sp0a324a->m_balance; $spe65572->remark = '订单#' . $spaf5db5->order_no; $spe65572->order_id = $spaf5db5->id; $spe65572->saveOrFail(); return true; }); } catch (\Throwable $sp54a0c6) { $spbabee5 = 'FundHelper.orderSuccess error, order_id:' . $sp7d06f4; if ($spaf5db5) { $spbabee5 .= ', user_id:' . $spaf5db5->user_id . ',income:' . $spaf5db5->income . ',order_no:' . $spaf5db5->order_no; } Log::error($spbabee5 . ' with exception:', array('Exception' => $sp54a0c6)); return false; } } public static function orderFreeze($sp7d06f4, $sp50e390) { $spaf5db5 = null; try { return DB::transaction(function () use($sp7d06f4, &$spaf5db5, $sp50e390) { $spaf5db5 = \App\Order::where('id', $sp7d06f4)->lockForUpdate()->firstOrFail(); if ($spaf5db5->status === Order::STATUS_REFUND) { return false; } if ($spaf5db5->status === Order::STATUS_FROZEN) { return true; } $sp118f70 = $spaf5db5->status; if ($sp118f70 === \App\Order::STATUS_SUCCESS) { $spa67c2b = '已发货'; } elseif ($sp118f70 === \App\Order::STATUS_UNPAY) { $spa67c2b = '未付款'; } elseif ($sp118f70 === \App\Order::STATUS_PAID) { $spa67c2b = '未发货'; } else { throw new \Exception('unknown'); } $sp0a324a = User::where('id', $spaf5db5->user_id)->lockForUpdate()->firstOrFail(); $spe65572 = new FundRecord(); $spe65572->user_id = $spaf5db5->user_id; $spe65572->type = FundRecord::TYPE_OUT; $spe65572->order_id = $spaf5db5->id; $spe65572->remark = $spaf5db5 === $spaf5db5 ? '' : '关联订单#' . $spaf5db5->order_no . ': '; if ($sp118f70 === \App\Order::STATUS_SUCCESS) { $sp0a324a->m_frozen += $spaf5db5->income; $sp0a324a->saveOrFail(); $spe65572->amount = -$spaf5db5->income; $spe65572->remark .= $sp50e390 . ', 冻结订单#' . $spaf5db5->order_no; } else { $spe65572->amount = 0; $spe65572->remark .= $sp50e390 . ', 冻结订单(' . $spa67c2b . ')#' . $spaf5db5->order_no; } $spe65572->all = $sp0a324a->m_all; $spe65572->frozen = $sp0a324a->m_frozen; $spe65572->paid = $sp0a324a->m_paid; $spe65572->balance = $sp0a324a->m_balance; $spe65572->saveOrFail(); $spaf5db5->status = \App\Order::STATUS_FROZEN; $spaf5db5->frozen_reason = ($spaf5db5 === $spaf5db5 ? '' : '关联订单#' . $spaf5db5->order_no . ': ') . $sp50e390; $spaf5db5->saveOrFail(); return true; }); } catch (\Throwable $sp54a0c6) { $spbabee5 = 'FundHelper.orderFreeze error'; if ($spaf5db5) { $spbabee5 .= ', order_no:' . $spaf5db5->order_no . ', user_id:' . $spaf5db5->user_id . ', amount:' . $spaf5db5->income; } else { $spbabee5 .= ', order_no: null'; } Log::error($spbabee5 . ' with exception:', array('Exception' => $sp54a0c6)); return false; } } public static function orderUnfreeze($sp7d06f4, $sp23cc14, callable $sp27d41f = null, &$sp03d501 = null) { $spaf5db5 = null; try { return DB::transaction(function () use($sp7d06f4, &$spaf5db5, $sp23cc14, $sp27d41f, &$sp03d501) { $spaf5db5 = \App\Order::where('id', $sp7d06f4)->lockForUpdate()->firstOrFail(); if ($sp27d41f !== null) { $sp8ee8d3 = $sp27d41f(); if ($sp8ee8d3 !== self::ACTION_CONTINUE) { return $sp8ee8d3; } } if ($spaf5db5->status === Order::STATUS_REFUND) { $sp03d501 = $spaf5db5->status; return false; } if ($spaf5db5->status !== Order::STATUS_FROZEN) { $sp03d501 = $spaf5db5->status; return true; } $sp27f53c = $spaf5db5->card_orders()->exists(); if ($sp27f53c) { $sp03d501 = \App\Order::STATUS_SUCCESS; $spa67c2b = '已发货'; } else { if ($spaf5db5->paid_at === NULL) { $sp03d501 = \App\Order::STATUS_UNPAY; $spa67c2b = '未付款'; } else { $sp03d501 = \App\Order::STATUS_PAID; $spa67c2b = '未发货'; } } $sp0a324a = User::where('id', $spaf5db5->user_id)->lockForUpdate()->firstOrFail(); $spe65572 = new FundRecord(); $spe65572->user_id = $spaf5db5->user_id; $spe65572->type = FundRecord::TYPE_IN; $spe65572->remark = $spaf5db5 === $spaf5db5 ? '' : '关联订单#' . $spaf5db5->order_no . ': '; $spe65572->order_id = $spaf5db5->id; if ($sp27f53c) { $sp0a324a->m_frozen -= $spaf5db5->income; $sp0a324a->saveOrFail(); $spe65572->amount = $spaf5db5->income; $spe65572->remark .= $sp23cc14 . ', 解冻订单#' . $spaf5db5->order_no; } else { $spe65572->amount = 0; $spe65572->remark .= $sp23cc14 . ', 解冻订单(' . $spa67c2b . ')#' . $spaf5db5->order_no; } $spe65572->all = $sp0a324a->m_all; $spe65572->frozen = $sp0a324a->m_frozen; $spe65572->paid = $sp0a324a->m_paid; $spe65572->balance = $sp0a324a->m_balance; $spe65572->saveOrFail(); $spaf5db5->status = $sp03d501; $spaf5db5->saveOrFail(); return true; }); } catch (\Throwable $sp54a0c6) { $spbabee5 = 'FundHelper.orderUnfreeze error'; if ($spaf5db5) { $spbabee5 .= ', order_no:' . $spaf5db5->order_no . ', user_id:' . $spaf5db5->user_id . ',amount:' . $spaf5db5->income; } else { $spbabee5 .= ', order_no: null'; } Log::error($spbabee5 . ' with exception:', array('Exception' => $sp54a0c6)); return false; } } }