<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp8030c3, callable $sp44c398) { $sp322370 = null; try { return DB::transaction(function () use($sp8030c3, &$sp322370, $sp44c398) { $sp322370 = \App\Order::where('id', $sp8030c3)->lockForUpdate()->firstOrFail(); $sp00ac62 = $sp44c398($sp322370); if ($sp00ac62 !== self::ACTION_CONTINUE) { return $sp00ac62; } $spc33961 = User::where('id', $sp322370->user_id)->lockForUpdate()->firstOrFail(); $spc33961->m_all += $sp322370->income; $spc33961->saveOrFail(); $sp471434 = new FundRecord(); $sp471434->user_id = $sp322370->user_id; $sp471434->type = FundRecord::TYPE_IN; $sp471434->amount = $sp322370->income; $sp471434->all = $spc33961->m_all; $sp471434->frozen = $spc33961->m_frozen; $sp471434->paid = $spc33961->m_paid; $sp471434->balance = $spc33961->m_balance; $sp471434->remark = '订单#' . $sp322370->order_no; $sp471434->order_id = $sp322370->id; $sp471434->saveOrFail(); return true; }); } catch (\Throwable $sp45222f) { $spfd1ead = 'FundHelper.orderSuccess error, order_id:' . $sp8030c3; if ($sp322370) { $spfd1ead .= ', user_id:' . $sp322370->user_id . ',income:' . $sp322370->income . ',order_no:' . $sp322370->order_no; } Log::error($spfd1ead . ' with exception:', array('Exception' => $sp45222f)); return false; } } public static function orderFreeze($sp8030c3, $sp3ed973) { $sp322370 = null; try { return DB::transaction(function () use($sp8030c3, &$sp322370, $sp3ed973) { $sp322370 = \App\Order::where('id', $sp8030c3)->lockForUpdate()->firstOrFail(); if ($sp322370->status === Order::STATUS_REFUND) { return false; } if ($sp322370->status === Order::STATUS_FROZEN) { return true; } $spdba2d0 = $sp322370->status; if ($spdba2d0 === \App\Order::STATUS_SUCCESS) { $sp2848ac = '已发货'; } elseif ($spdba2d0 === \App\Order::STATUS_UNPAY) { $sp2848ac = '未付款'; } elseif ($spdba2d0 === \App\Order::STATUS_PAID) { $sp2848ac = '未发货'; } else { throw new \Exception('unknown'); } $spc33961 = User::where('id', $sp322370->user_id)->lockForUpdate()->firstOrFail(); $sp471434 = new FundRecord(); $sp471434->user_id = $sp322370->user_id; $sp471434->type = FundRecord::TYPE_OUT; $sp471434->order_id = $sp322370->id; $sp471434->remark = $sp322370 === $sp322370 ? '' : '关联订单#' . $sp322370->order_no . ': '; if ($spdba2d0 === \App\Order::STATUS_SUCCESS) { $spc33961->m_frozen += $sp322370->income; $spc33961->saveOrFail(); $sp471434->amount = -$sp322370->income; $sp471434->remark .= $sp3ed973 . ', 冻结订单#' . $sp322370->order_no; } else { $sp471434->amount = 0; $sp471434->remark .= $sp3ed973 . ', 冻结订单(' . $sp2848ac . ')#' . $sp322370->order_no; } $sp471434->all = $spc33961->m_all; $sp471434->frozen = $spc33961->m_frozen; $sp471434->paid = $spc33961->m_paid; $sp471434->balance = $spc33961->m_balance; $sp471434->saveOrFail(); $sp322370->status = \App\Order::STATUS_FROZEN; $sp322370->frozen_reason = ($sp322370 === $sp322370 ? '' : '关联订单#' . $sp322370->order_no . ': ') . $sp3ed973; $sp322370->saveOrFail(); return true; }); } catch (\Throwable $sp45222f) { $spfd1ead = 'FundHelper.orderFreeze error'; if ($sp322370) { $spfd1ead .= ', order_no:' . $sp322370->order_no . ', user_id:' . $sp322370->user_id . ', amount:' . $sp322370->income; } else { $spfd1ead .= ', order_no: null'; } Log::error($spfd1ead . ' with exception:', array('Exception' => $sp45222f)); return false; } } public static function orderUnfreeze($sp8030c3, $spdd954a, callable $sp096232 = null, &$spfb5c06 = null) { $sp322370 = null; try { return DB::transaction(function () use($sp8030c3, &$sp322370, $spdd954a, $sp096232, &$spfb5c06) { $sp322370 = \App\Order::where('id', $sp8030c3)->lockForUpdate()->firstOrFail(); if ($sp096232 !== null) { $sp00ac62 = $sp096232(); if ($sp00ac62 !== self::ACTION_CONTINUE) { return $sp00ac62; } } if ($sp322370->status === Order::STATUS_REFUND) { $spfb5c06 = $sp322370->status; return false; } if ($sp322370->status !== Order::STATUS_FROZEN) { $spfb5c06 = $sp322370->status; return true; } $spaad415 = $sp322370->card_orders()->exists(); if ($spaad415) { $spfb5c06 = \App\Order::STATUS_SUCCESS; $sp2848ac = '已发货'; } else { if ($sp322370->paid_at === NULL) { $spfb5c06 = \App\Order::STATUS_UNPAY; $sp2848ac = '未付款'; } else { $spfb5c06 = \App\Order::STATUS_PAID; $sp2848ac = '未发货'; } } $spc33961 = User::where('id', $sp322370->user_id)->lockForUpdate()->firstOrFail(); $sp471434 = new FundRecord(); $sp471434->user_id = $sp322370->user_id; $sp471434->type = FundRecord::TYPE_IN; $sp471434->remark = $sp322370 === $sp322370 ? '' : '关联订单#' . $sp322370->order_no . ': '; $sp471434->order_id = $sp322370->id; if ($spaad415) { $spc33961->m_frozen -= $sp322370->income; $spc33961->saveOrFail(); $sp471434->amount = $sp322370->income; $sp471434->remark .= $spdd954a . ', 解冻订单#' . $sp322370->order_no; } else { $sp471434->amount = 0; $sp471434->remark .= $spdd954a . ', 解冻订单(' . $sp2848ac . ')#' . $sp322370->order_no; } $sp471434->all = $spc33961->m_all; $sp471434->frozen = $spc33961->m_frozen; $sp471434->paid = $spc33961->m_paid; $sp471434->balance = $spc33961->m_balance; $sp471434->saveOrFail(); $sp322370->status = $spfb5c06; $sp322370->saveOrFail(); return true; }); } catch (\Throwable $sp45222f) { $spfd1ead = 'FundHelper.orderUnfreeze error'; if ($sp322370) { $spfd1ead .= ', order_no:' . $sp322370->order_no . ', user_id:' . $sp322370->user_id . ',amount:' . $sp322370->income; } else { $spfd1ead .= ', order_no: null'; } Log::error($spfd1ead . ' with exception:', array('Exception' => $sp45222f)); return false; } } }