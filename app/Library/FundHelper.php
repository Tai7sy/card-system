<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp748f3f, callable $sp483b7b) { $sp7b2cfc = null; try { return DB::transaction(function () use($sp748f3f, &$sp7b2cfc, $sp483b7b) { $sp7b2cfc = \App\Order::where('id', $sp748f3f)->lockForUpdate()->firstOrFail(); $sp786169 = $sp483b7b($sp7b2cfc); if ($sp786169 !== self::ACTION_CONTINUE) { return $sp786169; } $sp845283 = User::where('id', $sp7b2cfc->user_id)->lockForUpdate()->firstOrFail(); $sp845283->m_all += $sp7b2cfc->income; $sp845283->saveOrFail(); $sp9c3375 = new FundRecord(); $sp9c3375->user_id = $sp7b2cfc->user_id; $sp9c3375->type = FundRecord::TYPE_IN; $sp9c3375->amount = $sp7b2cfc->income; $sp9c3375->all = $sp845283->m_all; $sp9c3375->frozen = $sp845283->m_frozen; $sp9c3375->paid = $sp845283->m_paid; $sp9c3375->balance = $sp845283->m_balance; $sp9c3375->remark = '订单#' . $sp7b2cfc->order_no; $sp9c3375->order_id = $sp7b2cfc->id; $sp9c3375->saveOrFail(); return true; }); } catch (\Throwable $sp45f5f1) { $spa9bccc = 'FundHelper.orderSuccess error, order_id:' . $sp748f3f; if ($sp7b2cfc) { $spa9bccc .= ', user_id:' . $sp7b2cfc->user_id . ',income:' . $sp7b2cfc->income . ',order_no:' . $sp7b2cfc->order_no; } Log::error($spa9bccc . ' with exception:', array('Exception' => $sp45f5f1)); return false; } } public static function orderFreeze($sp748f3f, $sp01391f) { $sp7b2cfc = null; try { return DB::transaction(function () use($sp748f3f, &$sp7b2cfc, $sp01391f) { $sp7b2cfc = \App\Order::where('id', $sp748f3f)->lockForUpdate()->firstOrFail(); if ($sp7b2cfc->status === Order::STATUS_REFUND) { return false; } if ($sp7b2cfc->status === Order::STATUS_FROZEN) { return true; } $sp3b8d13 = $sp7b2cfc->status; if ($sp3b8d13 === \App\Order::STATUS_SUCCESS) { $spc60774 = '已发货'; } elseif ($sp3b8d13 === \App\Order::STATUS_UNPAY) { $spc60774 = '未付款'; } elseif ($sp3b8d13 === \App\Order::STATUS_PAID) { $spc60774 = '未发货'; } else { throw new \Exception('unknown'); } $sp845283 = User::where('id', $sp7b2cfc->user_id)->lockForUpdate()->firstOrFail(); $sp9c3375 = new FundRecord(); $sp9c3375->user_id = $sp7b2cfc->user_id; $sp9c3375->type = FundRecord::TYPE_OUT; $sp9c3375->order_id = $sp7b2cfc->id; $sp9c3375->remark = $sp7b2cfc === $sp7b2cfc ? '' : '关联订单#' . $sp7b2cfc->order_no . ': '; if ($sp3b8d13 === \App\Order::STATUS_SUCCESS) { $sp845283->m_frozen += $sp7b2cfc->income; $sp845283->saveOrFail(); $sp9c3375->amount = -$sp7b2cfc->income; $sp9c3375->remark .= $sp01391f . ', 冻结订单#' . $sp7b2cfc->order_no; } else { $sp9c3375->amount = 0; $sp9c3375->remark .= $sp01391f . ', 冻结订单(' . $spc60774 . ')#' . $sp7b2cfc->order_no; } $sp9c3375->all = $sp845283->m_all; $sp9c3375->frozen = $sp845283->m_frozen; $sp9c3375->paid = $sp845283->m_paid; $sp9c3375->balance = $sp845283->m_balance; $sp9c3375->saveOrFail(); $sp7b2cfc->status = \App\Order::STATUS_FROZEN; $sp7b2cfc->frozen_reason = ($sp7b2cfc === $sp7b2cfc ? '' : '关联订单#' . $sp7b2cfc->order_no . ': ') . $sp01391f; $sp7b2cfc->saveOrFail(); return true; }); } catch (\Throwable $sp45f5f1) { $spa9bccc = 'FundHelper.orderFreeze error'; if ($sp7b2cfc) { $spa9bccc .= ', order_no:' . $sp7b2cfc->order_no . ', user_id:' . $sp7b2cfc->user_id . ', amount:' . $sp7b2cfc->income; } else { $spa9bccc .= ', order_no: null'; } Log::error($spa9bccc . ' with exception:', array('Exception' => $sp45f5f1)); return false; } } public static function orderUnfreeze($sp748f3f, $sp96e2b0, callable $spbd18af = null, &$sp2fc4dd = null) { $sp7b2cfc = null; try { return DB::transaction(function () use($sp748f3f, &$sp7b2cfc, $sp96e2b0, $spbd18af, &$sp2fc4dd) { $sp7b2cfc = \App\Order::where('id', $sp748f3f)->lockForUpdate()->firstOrFail(); if ($spbd18af !== null) { $sp786169 = $spbd18af(); if ($sp786169 !== self::ACTION_CONTINUE) { return $sp786169; } } if ($sp7b2cfc->status === Order::STATUS_REFUND) { $sp2fc4dd = $sp7b2cfc->status; return false; } if ($sp7b2cfc->status !== Order::STATUS_FROZEN) { $sp2fc4dd = $sp7b2cfc->status; return true; } $spa3de69 = $sp7b2cfc->card_orders()->exists(); if ($spa3de69) { $sp2fc4dd = \App\Order::STATUS_SUCCESS; $spc60774 = '已发货'; } else { if ($sp7b2cfc->paid_at === NULL) { $sp2fc4dd = \App\Order::STATUS_UNPAY; $spc60774 = '未付款'; } else { $sp2fc4dd = \App\Order::STATUS_PAID; $spc60774 = '未发货'; } } $sp845283 = User::where('id', $sp7b2cfc->user_id)->lockForUpdate()->firstOrFail(); $sp9c3375 = new FundRecord(); $sp9c3375->user_id = $sp7b2cfc->user_id; $sp9c3375->type = FundRecord::TYPE_IN; $sp9c3375->remark = $sp7b2cfc === $sp7b2cfc ? '' : '关联订单#' . $sp7b2cfc->order_no . ': '; $sp9c3375->order_id = $sp7b2cfc->id; if ($spa3de69) { $sp845283->m_frozen -= $sp7b2cfc->income; $sp845283->saveOrFail(); $sp9c3375->amount = $sp7b2cfc->income; $sp9c3375->remark .= $sp96e2b0 . ', 解冻订单#' . $sp7b2cfc->order_no; } else { $sp9c3375->amount = 0; $sp9c3375->remark .= $sp96e2b0 . ', 解冻订单(' . $spc60774 . ')#' . $sp7b2cfc->order_no; } $sp9c3375->all = $sp845283->m_all; $sp9c3375->frozen = $sp845283->m_frozen; $sp9c3375->paid = $sp845283->m_paid; $sp9c3375->balance = $sp845283->m_balance; $sp9c3375->saveOrFail(); $sp7b2cfc->status = $sp2fc4dd; $sp7b2cfc->saveOrFail(); return true; }); } catch (\Throwable $sp45f5f1) { $spa9bccc = 'FundHelper.orderUnfreeze error'; if ($sp7b2cfc) { $spa9bccc .= ', order_no:' . $sp7b2cfc->order_no . ', user_id:' . $sp7b2cfc->user_id . ',amount:' . $sp7b2cfc->income; } else { $spa9bccc .= ', order_no: null'; } Log::error($spa9bccc . ' with exception:', array('Exception' => $sp45f5f1)); return false; } } }