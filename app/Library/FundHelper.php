<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp27a21b, callable $sp17afc8) { $sp7cc18f = null; try { return DB::transaction(function () use($sp27a21b, &$sp7cc18f, $sp17afc8) { $sp7cc18f = \App\Order::where('id', $sp27a21b)->lockForUpdate()->firstOrFail(); $sp571ce3 = $sp17afc8($sp7cc18f); if ($sp571ce3 !== self::ACTION_CONTINUE) { return $sp571ce3; } $sp586d7b = User::where('id', $sp7cc18f->user_id)->lockForUpdate()->firstOrFail(); $sp586d7b->m_all += $sp7cc18f->income; $sp586d7b->saveOrFail(); $sp3cd947 = new FundRecord(); $sp3cd947->user_id = $sp7cc18f->user_id; $sp3cd947->type = FundRecord::TYPE_IN; $sp3cd947->amount = $sp7cc18f->income; $sp3cd947->all = $sp586d7b->m_all; $sp3cd947->frozen = $sp586d7b->m_frozen; $sp3cd947->paid = $sp586d7b->m_paid; $sp3cd947->balance = $sp586d7b->m_balance; $sp3cd947->remark = '订单#' . $sp7cc18f->order_no; $sp3cd947->order_id = $sp7cc18f->id; $sp3cd947->saveOrFail(); return true; }); } catch (\Throwable $spf745ad) { $sp8117f7 = 'FundHelper.orderSuccess error, order_id:' . $sp27a21b; if ($sp7cc18f) { $sp8117f7 .= ', user_id:' . $sp7cc18f->user_id . ',income:' . $sp7cc18f->income . ',order_no:' . $sp7cc18f->order_no; } Log::error($sp8117f7 . ' with exception:', array('Exception' => $spf745ad)); return false; } } public static function orderFreeze($sp27a21b, $sp0a664b) { $sp7cc18f = null; try { return DB::transaction(function () use($sp27a21b, &$sp7cc18f, $sp0a664b) { $sp7cc18f = \App\Order::where('id', $sp27a21b)->lockForUpdate()->firstOrFail(); if ($sp7cc18f->status === Order::STATUS_REFUND) { return false; } if ($sp7cc18f->status === Order::STATUS_FROZEN) { return true; } $spbec573 = $sp7cc18f->status; if ($spbec573 === \App\Order::STATUS_SUCCESS) { $sp5cc939 = '已发货'; } elseif ($spbec573 === \App\Order::STATUS_UNPAY) { $sp5cc939 = '未付款'; } elseif ($spbec573 === \App\Order::STATUS_PAID) { $sp5cc939 = '未发货'; } else { throw new \Exception('unknown'); } $sp586d7b = User::where('id', $sp7cc18f->user_id)->lockForUpdate()->firstOrFail(); $sp3cd947 = new FundRecord(); $sp3cd947->user_id = $sp7cc18f->user_id; $sp3cd947->type = FundRecord::TYPE_OUT; $sp3cd947->order_id = $sp7cc18f->id; $sp3cd947->remark = $sp7cc18f === $sp7cc18f ? '' : '关联订单#' . $sp7cc18f->order_no . ': '; if ($spbec573 === \App\Order::STATUS_SUCCESS) { $sp586d7b->m_frozen += $sp7cc18f->income; $sp586d7b->saveOrFail(); $sp3cd947->amount = -$sp7cc18f->income; $sp3cd947->remark .= $sp0a664b . ', 冻结订单#' . $sp7cc18f->order_no; } else { $sp3cd947->amount = 0; $sp3cd947->remark .= $sp0a664b . ', 冻结订单(' . $sp5cc939 . ')#' . $sp7cc18f->order_no; } $sp3cd947->all = $sp586d7b->m_all; $sp3cd947->frozen = $sp586d7b->m_frozen; $sp3cd947->paid = $sp586d7b->m_paid; $sp3cd947->balance = $sp586d7b->m_balance; $sp3cd947->saveOrFail(); $sp7cc18f->status = \App\Order::STATUS_FROZEN; $sp7cc18f->frozen_reason = ($sp7cc18f === $sp7cc18f ? '' : '关联订单#' . $sp7cc18f->order_no . ': ') . $sp0a664b; $sp7cc18f->saveOrFail(); return true; }); } catch (\Throwable $spf745ad) { $sp8117f7 = 'FundHelper.orderFreeze error'; if ($sp7cc18f) { $sp8117f7 .= ', order_no:' . $sp7cc18f->order_no . ', user_id:' . $sp7cc18f->user_id . ', amount:' . $sp7cc18f->income; } else { $sp8117f7 .= ', order_no: null'; } Log::error($sp8117f7 . ' with exception:', array('Exception' => $spf745ad)); return false; } } public static function orderUnfreeze($sp27a21b, $sp2d57c2, callable $spce1e4d = null, &$sp3355e9 = null) { $sp7cc18f = null; try { return DB::transaction(function () use($sp27a21b, &$sp7cc18f, $sp2d57c2, $spce1e4d, &$sp3355e9) { $sp7cc18f = \App\Order::where('id', $sp27a21b)->lockForUpdate()->firstOrFail(); if ($spce1e4d !== null) { $sp571ce3 = $spce1e4d(); if ($sp571ce3 !== self::ACTION_CONTINUE) { return $sp571ce3; } } if ($sp7cc18f->status === Order::STATUS_REFUND) { $sp3355e9 = $sp7cc18f->status; return false; } if ($sp7cc18f->status !== Order::STATUS_FROZEN) { $sp3355e9 = $sp7cc18f->status; return true; } $sp892684 = $sp7cc18f->card_orders()->exists(); if ($sp892684) { $sp3355e9 = \App\Order::STATUS_SUCCESS; $sp5cc939 = '已发货'; } else { if ($sp7cc18f->paid_at === NULL) { $sp3355e9 = \App\Order::STATUS_UNPAY; $sp5cc939 = '未付款'; } else { $sp3355e9 = \App\Order::STATUS_PAID; $sp5cc939 = '未发货'; } } $sp586d7b = User::where('id', $sp7cc18f->user_id)->lockForUpdate()->firstOrFail(); $sp3cd947 = new FundRecord(); $sp3cd947->user_id = $sp7cc18f->user_id; $sp3cd947->type = FundRecord::TYPE_IN; $sp3cd947->remark = $sp7cc18f === $sp7cc18f ? '' : '关联订单#' . $sp7cc18f->order_no . ': '; $sp3cd947->order_id = $sp7cc18f->id; if ($sp892684) { $sp586d7b->m_frozen -= $sp7cc18f->income; $sp586d7b->saveOrFail(); $sp3cd947->amount = $sp7cc18f->income; $sp3cd947->remark .= $sp2d57c2 . ', 解冻订单#' . $sp7cc18f->order_no; } else { $sp3cd947->amount = 0; $sp3cd947->remark .= $sp2d57c2 . ', 解冻订单(' . $sp5cc939 . ')#' . $sp7cc18f->order_no; } $sp3cd947->all = $sp586d7b->m_all; $sp3cd947->frozen = $sp586d7b->m_frozen; $sp3cd947->paid = $sp586d7b->m_paid; $sp3cd947->balance = $sp586d7b->m_balance; $sp3cd947->saveOrFail(); $sp7cc18f->status = $sp3355e9; $sp7cc18f->saveOrFail(); return true; }); } catch (\Throwable $spf745ad) { $sp8117f7 = 'FundHelper.orderUnfreeze error'; if ($sp7cc18f) { $sp8117f7 .= ', order_no:' . $sp7cc18f->order_no . ', user_id:' . $sp7cc18f->user_id . ',amount:' . $sp7cc18f->income; } else { $sp8117f7 .= ', order_no: null'; } Log::error($sp8117f7 . ' with exception:', array('Exception' => $spf745ad)); return false; } } }