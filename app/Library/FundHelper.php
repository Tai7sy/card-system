<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp1948da, callable $sp17e591) { $speb076b = null; try { return DB::transaction(function () use($sp1948da, &$speb076b, $sp17e591) { $speb076b = \App\Order::where('id', $sp1948da)->lockForUpdate()->firstOrFail(); $spf96e67 = $sp17e591($speb076b); if ($spf96e67 !== self::ACTION_CONTINUE) { return $spf96e67; } $spd05c92 = User::where('id', $speb076b->user_id)->lockForUpdate()->firstOrFail(); $spd05c92->m_all += $speb076b->income; $spd05c92->saveOrFail(); $sp10b416 = new FundRecord(); $sp10b416->user_id = $speb076b->user_id; $sp10b416->type = FundRecord::TYPE_IN; $sp10b416->amount = $speb076b->income; $sp10b416->all = $spd05c92->m_all; $sp10b416->frozen = $spd05c92->m_frozen; $sp10b416->paid = $spd05c92->m_paid; $sp10b416->balance = $spd05c92->m_balance; $sp10b416->remark = '订单#' . $speb076b->order_no; $sp10b416->order_id = $speb076b->id; $sp10b416->saveOrFail(); return true; }); } catch (\Throwable $spb62437) { $spa374f7 = 'FundHelper.orderSuccess error, order_id:' . $sp1948da; if ($speb076b) { $spa374f7 .= ', user_id:' . $speb076b->user_id . ',income:' . $speb076b->income . ',order_no:' . $speb076b->order_no; } Log::error($spa374f7 . ' with exception:', array('Exception' => $spb62437)); return false; } } public static function orderFreeze($sp1948da, $sp33a9d2) { $speb076b = null; try { return DB::transaction(function () use($sp1948da, &$speb076b, $sp33a9d2) { $speb076b = \App\Order::where('id', $sp1948da)->lockForUpdate()->firstOrFail(); if ($speb076b->status === Order::STATUS_REFUND) { return false; } if ($speb076b->status === Order::STATUS_FROZEN) { return true; } $spd4f871 = $speb076b->status; if ($spd4f871 === \App\Order::STATUS_SUCCESS) { $spf3a817 = '已发货'; } elseif ($spd4f871 === \App\Order::STATUS_UNPAY) { $spf3a817 = '未付款'; } elseif ($spd4f871 === \App\Order::STATUS_PAID) { $spf3a817 = '未发货'; } else { throw new \Exception('unknown'); } $spd05c92 = User::where('id', $speb076b->user_id)->lockForUpdate()->firstOrFail(); $sp10b416 = new FundRecord(); $sp10b416->user_id = $speb076b->user_id; $sp10b416->type = FundRecord::TYPE_OUT; $sp10b416->order_id = $speb076b->id; $sp10b416->remark = $speb076b === $speb076b ? '' : '关联订单#' . $speb076b->order_no . ': '; if ($spd4f871 === \App\Order::STATUS_SUCCESS) { $spd05c92->m_frozen += $speb076b->income; $spd05c92->saveOrFail(); $sp10b416->amount = -$speb076b->income; $sp10b416->remark .= $sp33a9d2 . ', 冻结订单#' . $speb076b->order_no; } else { $sp10b416->amount = 0; $sp10b416->remark .= $sp33a9d2 . ', 冻结订单(' . $spf3a817 . ')#' . $speb076b->order_no; } $sp10b416->all = $spd05c92->m_all; $sp10b416->frozen = $spd05c92->m_frozen; $sp10b416->paid = $spd05c92->m_paid; $sp10b416->balance = $spd05c92->m_balance; $sp10b416->saveOrFail(); $speb076b->status = \App\Order::STATUS_FROZEN; $speb076b->frozen_reason = ($speb076b === $speb076b ? '' : '关联订单#' . $speb076b->order_no . ': ') . $sp33a9d2; $speb076b->saveOrFail(); return true; }); } catch (\Throwable $spb62437) { $spa374f7 = 'FundHelper.orderFreeze error'; if ($speb076b) { $spa374f7 .= ', order_no:' . $speb076b->order_no . ', user_id:' . $speb076b->user_id . ', amount:' . $speb076b->income; } else { $spa374f7 .= ', order_no: null'; } Log::error($spa374f7 . ' with exception:', array('Exception' => $spb62437)); return false; } } public static function orderUnfreeze($sp1948da, $spede2ad, callable $sp06bdca = null, &$sp0b03be = null) { $speb076b = null; try { return DB::transaction(function () use($sp1948da, &$speb076b, $spede2ad, $sp06bdca, &$sp0b03be) { $speb076b = \App\Order::where('id', $sp1948da)->lockForUpdate()->firstOrFail(); if ($sp06bdca !== null) { $spf96e67 = $sp06bdca(); if ($spf96e67 !== self::ACTION_CONTINUE) { return $spf96e67; } } if ($speb076b->status === Order::STATUS_REFUND) { $sp0b03be = $speb076b->status; return false; } if ($speb076b->status !== Order::STATUS_FROZEN) { $sp0b03be = $speb076b->status; return true; } $spd1fd35 = $speb076b->card_orders()->exists(); if ($spd1fd35) { $sp0b03be = \App\Order::STATUS_SUCCESS; $spf3a817 = '已发货'; } else { if ($speb076b->paid_at === NULL) { $sp0b03be = \App\Order::STATUS_UNPAY; $spf3a817 = '未付款'; } else { $sp0b03be = \App\Order::STATUS_PAID; $spf3a817 = '未发货'; } } $spd05c92 = User::where('id', $speb076b->user_id)->lockForUpdate()->firstOrFail(); $sp10b416 = new FundRecord(); $sp10b416->user_id = $speb076b->user_id; $sp10b416->type = FundRecord::TYPE_IN; $sp10b416->remark = $speb076b === $speb076b ? '' : '关联订单#' . $speb076b->order_no . ': '; $sp10b416->order_id = $speb076b->id; if ($spd1fd35) { $spd05c92->m_frozen -= $speb076b->income; $spd05c92->saveOrFail(); $sp10b416->amount = $speb076b->income; $sp10b416->remark .= $spede2ad . ', 解冻订单#' . $speb076b->order_no; } else { $sp10b416->amount = 0; $sp10b416->remark .= $spede2ad . ', 解冻订单(' . $spf3a817 . ')#' . $speb076b->order_no; } $sp10b416->all = $spd05c92->m_all; $sp10b416->frozen = $spd05c92->m_frozen; $sp10b416->paid = $spd05c92->m_paid; $sp10b416->balance = $spd05c92->m_balance; $sp10b416->saveOrFail(); $speb076b->status = $sp0b03be; $speb076b->saveOrFail(); return true; }); } catch (\Throwable $spb62437) { $spa374f7 = 'FundHelper.orderUnfreeze error'; if ($speb076b) { $spa374f7 .= ', order_no:' . $speb076b->order_no . ', user_id:' . $speb076b->user_id . ',amount:' . $speb076b->income; } else { $spa374f7 .= ', order_no: null'; } Log::error($spa374f7 . ' with exception:', array('Exception' => $spb62437)); return false; } } }