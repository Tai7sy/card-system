<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp9e940d, callable $sp16f7b0) { $spd807de = null; try { return DB::transaction(function () use($sp9e940d, &$spd807de, $sp16f7b0) { $spd807de = \App\Order::where('id', $sp9e940d)->lockForUpdate()->firstOrFail(); $spa6aab5 = $sp16f7b0($spd807de); if ($spa6aab5 !== self::ACTION_CONTINUE) { return $spa6aab5; } $sp359016 = User::where('id', $spd807de->user_id)->lockForUpdate()->firstOrFail(); $sp359016->m_all += $spd807de->income; $sp359016->saveOrFail(); $sp0a8d0b = new FundRecord(); $sp0a8d0b->user_id = $spd807de->user_id; $sp0a8d0b->type = FundRecord::TYPE_IN; $sp0a8d0b->amount = $spd807de->income; $sp0a8d0b->all = $sp359016->m_all; $sp0a8d0b->frozen = $sp359016->m_frozen; $sp0a8d0b->paid = $sp359016->m_paid; $sp0a8d0b->balance = $sp359016->m_balance; $sp0a8d0b->remark = '订单#' . $spd807de->order_no; $sp0a8d0b->order_id = $spd807de->id; $sp0a8d0b->saveOrFail(); return true; }); } catch (\Throwable $spa356ee) { $spa32dfd = 'FundHelper.orderSuccess error, order_id:' . $sp9e940d; if ($spd807de) { $spa32dfd .= ', user_id:' . $spd807de->user_id . ',income:' . $spd807de->income . ',order_no:' . $spd807de->order_no; } Log::error($spa32dfd . ' with exception:', array('Exception' => $spa356ee)); return false; } } public static function orderFreeze($sp9e940d, $sp670ca9) { $spd807de = null; try { return DB::transaction(function () use($sp9e940d, &$spd807de, $sp670ca9) { $spd807de = \App\Order::where('id', $sp9e940d)->lockForUpdate()->firstOrFail(); if ($spd807de->status === Order::STATUS_REFUND) { return false; } if ($spd807de->status === Order::STATUS_FROZEN) { return true; } $sp7d38ce = $spd807de->status; if ($sp7d38ce === \App\Order::STATUS_SUCCESS) { $sp7e316d = '已发货'; } elseif ($sp7d38ce === \App\Order::STATUS_UNPAY) { $sp7e316d = '未付款'; } elseif ($sp7d38ce === \App\Order::STATUS_PAID) { $sp7e316d = '未发货'; } else { throw new \Exception('unknown'); } $sp359016 = User::where('id', $spd807de->user_id)->lockForUpdate()->firstOrFail(); $sp0a8d0b = new FundRecord(); $sp0a8d0b->user_id = $spd807de->user_id; $sp0a8d0b->type = FundRecord::TYPE_OUT; $sp0a8d0b->order_id = $spd807de->id; $sp0a8d0b->remark = $spd807de === $spd807de ? '' : '关联订单#' . $spd807de->order_no . ': '; if ($sp7d38ce === \App\Order::STATUS_SUCCESS) { $sp359016->m_frozen += $spd807de->income; $sp359016->saveOrFail(); $sp0a8d0b->amount = -$spd807de->income; $sp0a8d0b->remark .= $sp670ca9 . ', 冻结订单#' . $spd807de->order_no; } else { $sp0a8d0b->amount = 0; $sp0a8d0b->remark .= $sp670ca9 . ', 冻结订单(' . $sp7e316d . ')#' . $spd807de->order_no; } $sp0a8d0b->all = $sp359016->m_all; $sp0a8d0b->frozen = $sp359016->m_frozen; $sp0a8d0b->paid = $sp359016->m_paid; $sp0a8d0b->balance = $sp359016->m_balance; $sp0a8d0b->saveOrFail(); $spd807de->status = \App\Order::STATUS_FROZEN; $spd807de->frozen_reason = ($spd807de === $spd807de ? '' : '关联订单#' . $spd807de->order_no . ': ') . $sp670ca9; $spd807de->saveOrFail(); return true; }); } catch (\Throwable $spa356ee) { $spa32dfd = 'FundHelper.orderFreeze error'; if ($spd807de) { $spa32dfd .= ', order_no:' . $spd807de->order_no . ', user_id:' . $spd807de->user_id . ', amount:' . $spd807de->income; } else { $spa32dfd .= ', order_no: null'; } Log::error($spa32dfd . ' with exception:', array('Exception' => $spa356ee)); return false; } } public static function orderUnfreeze($sp9e940d, $sp6c05ce, callable $sp1bb0f1 = null, &$sp614b60 = null) { $spd807de = null; try { return DB::transaction(function () use($sp9e940d, &$spd807de, $sp6c05ce, $sp1bb0f1, &$sp614b60) { $spd807de = \App\Order::where('id', $sp9e940d)->lockForUpdate()->firstOrFail(); if ($sp1bb0f1 !== null) { $spa6aab5 = $sp1bb0f1(); if ($spa6aab5 !== self::ACTION_CONTINUE) { return $spa6aab5; } } if ($spd807de->status === Order::STATUS_REFUND) { $sp614b60 = $spd807de->status; return false; } if ($spd807de->status !== Order::STATUS_FROZEN) { $sp614b60 = $spd807de->status; return true; } $sp60bcb7 = $spd807de->card_orders()->exists(); if ($sp60bcb7) { $sp614b60 = \App\Order::STATUS_SUCCESS; $sp7e316d = '已发货'; } else { if ($spd807de->paid_at === NULL) { $sp614b60 = \App\Order::STATUS_UNPAY; $sp7e316d = '未付款'; } else { $sp614b60 = \App\Order::STATUS_PAID; $sp7e316d = '未发货'; } } $sp359016 = User::where('id', $spd807de->user_id)->lockForUpdate()->firstOrFail(); $sp0a8d0b = new FundRecord(); $sp0a8d0b->user_id = $spd807de->user_id; $sp0a8d0b->type = FundRecord::TYPE_IN; $sp0a8d0b->remark = $spd807de === $spd807de ? '' : '关联订单#' . $spd807de->order_no . ': '; $sp0a8d0b->order_id = $spd807de->id; if ($sp60bcb7) { $sp359016->m_frozen -= $spd807de->income; $sp359016->saveOrFail(); $sp0a8d0b->amount = $spd807de->income; $sp0a8d0b->remark .= $sp6c05ce . ', 解冻订单#' . $spd807de->order_no; } else { $sp0a8d0b->amount = 0; $sp0a8d0b->remark .= $sp6c05ce . ', 解冻订单(' . $sp7e316d . ')#' . $spd807de->order_no; } $sp0a8d0b->all = $sp359016->m_all; $sp0a8d0b->frozen = $sp359016->m_frozen; $sp0a8d0b->paid = $sp359016->m_paid; $sp0a8d0b->balance = $sp359016->m_balance; $sp0a8d0b->saveOrFail(); $spd807de->status = $sp614b60; $spd807de->saveOrFail(); return true; }); } catch (\Throwable $spa356ee) { $spa32dfd = 'FundHelper.orderUnfreeze error'; if ($spd807de) { $spa32dfd .= ', order_no:' . $spd807de->order_no . ', user_id:' . $spd807de->user_id . ',amount:' . $spd807de->income; } else { $spa32dfd .= ', order_no: null'; } Log::error($spa32dfd . ' with exception:', array('Exception' => $spa356ee)); return false; } } }