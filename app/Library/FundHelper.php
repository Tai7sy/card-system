<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp27545d, callable $spfa0e85) { $sp8ac6c1 = null; try { return DB::transaction(function () use($sp27545d, &$sp8ac6c1, $spfa0e85) { $sp8ac6c1 = \App\Order::where('id', $sp27545d)->lockForUpdate()->firstOrFail(); $spa87332 = $spfa0e85($sp8ac6c1); if ($spa87332 !== self::ACTION_CONTINUE) { return $spa87332; } $sp590011 = User::where('id', $sp8ac6c1->user_id)->lockForUpdate()->firstOrFail(); $sp590011->m_all += $sp8ac6c1->income; $sp590011->saveOrFail(); $sp8deb25 = new FundRecord(); $sp8deb25->user_id = $sp8ac6c1->user_id; $sp8deb25->type = FundRecord::TYPE_IN; $sp8deb25->amount = $sp8ac6c1->income; $sp8deb25->all = $sp590011->m_all; $sp8deb25->frozen = $sp590011->m_frozen; $sp8deb25->paid = $sp590011->m_paid; $sp8deb25->balance = $sp590011->m_balance; $sp8deb25->remark = '订单#' . $sp8ac6c1->order_no; $sp8deb25->order_id = $sp8ac6c1->id; $sp8deb25->saveOrFail(); return true; }); } catch (\Throwable $sp7900a2) { $sp93a168 = 'FundHelper.orderSuccess error, order_id:' . $sp27545d; if ($sp8ac6c1) { $sp93a168 .= ', user_id:' . $sp8ac6c1->user_id . ',income:' . $sp8ac6c1->income . ',order_no:' . $sp8ac6c1->order_no; } Log::error($sp93a168 . ' with exception:', array('Exception' => $sp7900a2)); return false; } } public static function orderFreeze($sp27545d, $sp49115f) { $sp8ac6c1 = null; try { return DB::transaction(function () use($sp27545d, &$sp8ac6c1, $sp49115f) { $sp8ac6c1 = \App\Order::where('id', $sp27545d)->lockForUpdate()->firstOrFail(); if ($sp8ac6c1->status === Order::STATUS_REFUND) { return false; } if ($sp8ac6c1->status === Order::STATUS_FROZEN) { return true; } $sp5652bb = $sp8ac6c1->status; if ($sp5652bb === \App\Order::STATUS_SUCCESS) { $spb5d8c6 = '已发货'; } elseif ($sp5652bb === \App\Order::STATUS_UNPAY) { $spb5d8c6 = '未付款'; } elseif ($sp5652bb === \App\Order::STATUS_PAID) { $spb5d8c6 = '未发货'; } else { throw new \Exception('unknown'); } $sp590011 = User::where('id', $sp8ac6c1->user_id)->lockForUpdate()->firstOrFail(); $sp8deb25 = new FundRecord(); $sp8deb25->user_id = $sp8ac6c1->user_id; $sp8deb25->type = FundRecord::TYPE_OUT; $sp8deb25->order_id = $sp8ac6c1->id; $sp8deb25->remark = $sp8ac6c1 === $sp8ac6c1 ? '' : '关联订单#' . $sp8ac6c1->order_no . ': '; if ($sp5652bb === \App\Order::STATUS_SUCCESS) { $sp590011->m_frozen += $sp8ac6c1->income; $sp590011->saveOrFail(); $sp8deb25->amount = -$sp8ac6c1->income; $sp8deb25->remark .= $sp49115f . ', 冻结订单#' . $sp8ac6c1->order_no; } else { $sp8deb25->amount = 0; $sp8deb25->remark .= $sp49115f . ', 冻结订单(' . $spb5d8c6 . ')#' . $sp8ac6c1->order_no; } $sp8deb25->all = $sp590011->m_all; $sp8deb25->frozen = $sp590011->m_frozen; $sp8deb25->paid = $sp590011->m_paid; $sp8deb25->balance = $sp590011->m_balance; $sp8deb25->saveOrFail(); $sp8ac6c1->status = \App\Order::STATUS_FROZEN; $sp8ac6c1->frozen_reason = ($sp8ac6c1 === $sp8ac6c1 ? '' : '关联订单#' . $sp8ac6c1->order_no . ': ') . $sp49115f; $sp8ac6c1->saveOrFail(); return true; }); } catch (\Throwable $sp7900a2) { $sp93a168 = 'FundHelper.orderFreeze error'; if ($sp8ac6c1) { $sp93a168 .= ', order_no:' . $sp8ac6c1->order_no . ', user_id:' . $sp8ac6c1->user_id . ', amount:' . $sp8ac6c1->income; } else { $sp93a168 .= ', order_no: null'; } Log::error($sp93a168 . ' with exception:', array('Exception' => $sp7900a2)); return false; } } public static function orderUnfreeze($sp27545d, $spec0cd1, callable $spd59a1b = null, &$sp8591a5 = null) { $sp8ac6c1 = null; try { return DB::transaction(function () use($sp27545d, &$sp8ac6c1, $spec0cd1, $spd59a1b, &$sp8591a5) { $sp8ac6c1 = \App\Order::where('id', $sp27545d)->lockForUpdate()->firstOrFail(); if ($spd59a1b !== null) { $spa87332 = $spd59a1b(); if ($spa87332 !== self::ACTION_CONTINUE) { return $spa87332; } } if ($sp8ac6c1->status === Order::STATUS_REFUND) { $sp8591a5 = $sp8ac6c1->status; return false; } if ($sp8ac6c1->status !== Order::STATUS_FROZEN) { $sp8591a5 = $sp8ac6c1->status; return true; } $spfab907 = $sp8ac6c1->card_orders()->exists(); if ($spfab907) { $sp8591a5 = \App\Order::STATUS_SUCCESS; $spb5d8c6 = '已发货'; } else { if ($sp8ac6c1->paid_at === NULL) { $sp8591a5 = \App\Order::STATUS_UNPAY; $spb5d8c6 = '未付款'; } else { $sp8591a5 = \App\Order::STATUS_PAID; $spb5d8c6 = '未发货'; } } $sp590011 = User::where('id', $sp8ac6c1->user_id)->lockForUpdate()->firstOrFail(); $sp8deb25 = new FundRecord(); $sp8deb25->user_id = $sp8ac6c1->user_id; $sp8deb25->type = FundRecord::TYPE_IN; $sp8deb25->remark = $sp8ac6c1 === $sp8ac6c1 ? '' : '关联订单#' . $sp8ac6c1->order_no . ': '; $sp8deb25->order_id = $sp8ac6c1->id; if ($spfab907) { $sp590011->m_frozen -= $sp8ac6c1->income; $sp590011->saveOrFail(); $sp8deb25->amount = $sp8ac6c1->income; $sp8deb25->remark .= $spec0cd1 . ', 解冻订单#' . $sp8ac6c1->order_no; } else { $sp8deb25->amount = 0; $sp8deb25->remark .= $spec0cd1 . ', 解冻订单(' . $spb5d8c6 . ')#' . $sp8ac6c1->order_no; } $sp8deb25->all = $sp590011->m_all; $sp8deb25->frozen = $sp590011->m_frozen; $sp8deb25->paid = $sp590011->m_paid; $sp8deb25->balance = $sp590011->m_balance; $sp8deb25->saveOrFail(); $sp8ac6c1->status = $sp8591a5; $sp8ac6c1->saveOrFail(); return true; }); } catch (\Throwable $sp7900a2) { $sp93a168 = 'FundHelper.orderUnfreeze error'; if ($sp8ac6c1) { $sp93a168 .= ', order_no:' . $sp8ac6c1->order_no . ', user_id:' . $sp8ac6c1->user_id . ',amount:' . $sp8ac6c1->income; } else { $sp93a168 .= ', order_no: null'; } Log::error($sp93a168 . ' with exception:', array('Exception' => $sp7900a2)); return false; } } }