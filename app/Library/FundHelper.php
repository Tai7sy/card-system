<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp1f742d, callable $sp0fcdbd) { $sp7dcca7 = null; try { return DB::transaction(function () use($sp1f742d, &$sp7dcca7, $sp0fcdbd) { $sp7dcca7 = \App\Order::where('id', $sp1f742d)->lockForUpdate()->firstOrFail(); $sp29a775 = $sp0fcdbd($sp7dcca7); if ($sp29a775 !== self::ACTION_CONTINUE) { return $sp29a775; } $sp694bd2 = User::where('id', $sp7dcca7->user_id)->lockForUpdate()->firstOrFail(); $sp694bd2->m_all += $sp7dcca7->income; $sp694bd2->saveOrFail(); $sp0f9252 = new FundRecord(); $sp0f9252->user_id = $sp7dcca7->user_id; $sp0f9252->type = FundRecord::TYPE_IN; $sp0f9252->amount = $sp7dcca7->income; $sp0f9252->all = $sp694bd2->m_all; $sp0f9252->frozen = $sp694bd2->m_frozen; $sp0f9252->paid = $sp694bd2->m_paid; $sp0f9252->balance = $sp694bd2->m_balance; $sp0f9252->remark = '订单#' . $sp7dcca7->order_no; $sp0f9252->order_id = $sp7dcca7->id; $sp0f9252->saveOrFail(); return true; }); } catch (\Throwable $spece20f) { $sp2af324 = 'FundHelper.orderSuccess error, order_id:' . $sp1f742d; if ($sp7dcca7) { $sp2af324 .= ', user_id:' . $sp7dcca7->user_id . ',income:' . $sp7dcca7->income . ',order_no:' . $sp7dcca7->order_no; } Log::error($sp2af324 . ' with exception:', array('Exception' => $spece20f)); return false; } } public static function orderFreeze($sp1f742d, $sp10a9c0) { $sp7dcca7 = null; try { return DB::transaction(function () use($sp1f742d, &$sp7dcca7, $sp10a9c0) { $sp7dcca7 = \App\Order::where('id', $sp1f742d)->lockForUpdate()->firstOrFail(); if ($sp7dcca7->status === Order::STATUS_REFUND) { return false; } if ($sp7dcca7->status === Order::STATUS_FROZEN) { return true; } $spa218c4 = $sp7dcca7->status; if ($spa218c4 === \App\Order::STATUS_SUCCESS) { $sp0c5813 = '已发货'; } elseif ($spa218c4 === \App\Order::STATUS_UNPAY) { $sp0c5813 = '未付款'; } elseif ($spa218c4 === \App\Order::STATUS_PAID) { $sp0c5813 = '未发货'; } else { throw new \Exception('unknown'); } $sp694bd2 = User::where('id', $sp7dcca7->user_id)->lockForUpdate()->firstOrFail(); $sp0f9252 = new FundRecord(); $sp0f9252->user_id = $sp7dcca7->user_id; $sp0f9252->type = FundRecord::TYPE_OUT; $sp0f9252->order_id = $sp7dcca7->id; $sp0f9252->remark = $sp7dcca7 === $sp7dcca7 ? '' : '关联订单#' . $sp7dcca7->order_no . ': '; if ($spa218c4 === \App\Order::STATUS_SUCCESS) { $sp694bd2->m_frozen += $sp7dcca7->income; $sp694bd2->saveOrFail(); $sp0f9252->amount = -$sp7dcca7->income; $sp0f9252->remark .= $sp10a9c0 . ', 冻结订单#' . $sp7dcca7->order_no; } else { $sp0f9252->amount = 0; $sp0f9252->remark .= $sp10a9c0 . ', 冻结订单(' . $sp0c5813 . ')#' . $sp7dcca7->order_no; } $sp0f9252->all = $sp694bd2->m_all; $sp0f9252->frozen = $sp694bd2->m_frozen; $sp0f9252->paid = $sp694bd2->m_paid; $sp0f9252->balance = $sp694bd2->m_balance; $sp0f9252->saveOrFail(); $sp7dcca7->status = \App\Order::STATUS_FROZEN; $sp7dcca7->frozen_reason = ($sp7dcca7 === $sp7dcca7 ? '' : '关联订单#' . $sp7dcca7->order_no . ': ') . $sp10a9c0; $sp7dcca7->saveOrFail(); return true; }); } catch (\Throwable $spece20f) { $sp2af324 = 'FundHelper.orderFreeze error'; if ($sp7dcca7) { $sp2af324 .= ', order_no:' . $sp7dcca7->order_no . ', user_id:' . $sp7dcca7->user_id . ', amount:' . $sp7dcca7->income; } else { $sp2af324 .= ', order_no: null'; } Log::error($sp2af324 . ' with exception:', array('Exception' => $spece20f)); return false; } } public static function orderUnfreeze($sp1f742d, $spf3fa17, callable $spb23766 = null, &$spd81133 = null) { $sp7dcca7 = null; try { return DB::transaction(function () use($sp1f742d, &$sp7dcca7, $spf3fa17, $spb23766, &$spd81133) { $sp7dcca7 = \App\Order::where('id', $sp1f742d)->lockForUpdate()->firstOrFail(); if ($spb23766 !== null) { $sp29a775 = $spb23766(); if ($sp29a775 !== self::ACTION_CONTINUE) { return $sp29a775; } } if ($sp7dcca7->status === Order::STATUS_REFUND) { $spd81133 = $sp7dcca7->status; return false; } if ($sp7dcca7->status !== Order::STATUS_FROZEN) { $spd81133 = $sp7dcca7->status; return true; } $sp8d650d = $sp7dcca7->card_orders()->exists(); if ($sp8d650d) { $spd81133 = \App\Order::STATUS_SUCCESS; $sp0c5813 = '已发货'; } else { if ($sp7dcca7->paid_at === NULL) { $spd81133 = \App\Order::STATUS_UNPAY; $sp0c5813 = '未付款'; } else { $spd81133 = \App\Order::STATUS_PAID; $sp0c5813 = '未发货'; } } $sp694bd2 = User::where('id', $sp7dcca7->user_id)->lockForUpdate()->firstOrFail(); $sp0f9252 = new FundRecord(); $sp0f9252->user_id = $sp7dcca7->user_id; $sp0f9252->type = FundRecord::TYPE_IN; $sp0f9252->remark = $sp7dcca7 === $sp7dcca7 ? '' : '关联订单#' . $sp7dcca7->order_no . ': '; $sp0f9252->order_id = $sp7dcca7->id; if ($sp8d650d) { $sp694bd2->m_frozen -= $sp7dcca7->income; $sp694bd2->saveOrFail(); $sp0f9252->amount = $sp7dcca7->income; $sp0f9252->remark .= $spf3fa17 . ', 解冻订单#' . $sp7dcca7->order_no; } else { $sp0f9252->amount = 0; $sp0f9252->remark .= $spf3fa17 . ', 解冻订单(' . $sp0c5813 . ')#' . $sp7dcca7->order_no; } $sp0f9252->all = $sp694bd2->m_all; $sp0f9252->frozen = $sp694bd2->m_frozen; $sp0f9252->paid = $sp694bd2->m_paid; $sp0f9252->balance = $sp694bd2->m_balance; $sp0f9252->saveOrFail(); $sp7dcca7->status = $spd81133; $sp7dcca7->saveOrFail(); return true; }); } catch (\Throwable $spece20f) { $sp2af324 = 'FundHelper.orderUnfreeze error'; if ($sp7dcca7) { $sp2af324 .= ', order_no:' . $sp7dcca7->order_no . ', user_id:' . $sp7dcca7->user_id . ',amount:' . $sp7dcca7->income; } else { $sp2af324 .= ', order_no: null'; } Log::error($sp2af324 . ' with exception:', array('Exception' => $spece20f)); return false; } } }