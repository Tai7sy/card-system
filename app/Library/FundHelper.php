<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp406042, callable $sp15c343) { $spbaa1fa = null; try { return DB::transaction(function () use($sp406042, &$spbaa1fa, $sp15c343) { $spbaa1fa = \App\Order::where('id', $sp406042)->lockForUpdate()->firstOrFail(); $spd7b285 = $sp15c343($spbaa1fa); if ($spd7b285 !== self::ACTION_CONTINUE) { return $spd7b285; } $sp836da4 = User::where('id', $spbaa1fa->user_id)->lockForUpdate()->firstOrFail(); $sp836da4->m_all += $spbaa1fa->income; $sp836da4->saveOrFail(); $spb82d81 = new FundRecord(); $spb82d81->user_id = $spbaa1fa->user_id; $spb82d81->type = FundRecord::TYPE_IN; $spb82d81->amount = $spbaa1fa->income; $spb82d81->all = $sp836da4->m_all; $spb82d81->frozen = $sp836da4->m_frozen; $spb82d81->paid = $sp836da4->m_paid; $spb82d81->balance = $sp836da4->m_balance; $spb82d81->remark = '订单#' . $spbaa1fa->order_no; $spb82d81->order_id = $spbaa1fa->id; $spb82d81->saveOrFail(); return true; }); } catch (\Throwable $sp4b79b8) { $sp4c4581 = 'FundHelper.orderSuccess error, order_id:' . $sp406042; if ($spbaa1fa) { $sp4c4581 .= ', user_id:' . $spbaa1fa->user_id . ',income:' . $spbaa1fa->income . ',order_no:' . $spbaa1fa->order_no; } Log::error($sp4c4581 . ' with exception:', array('Exception' => $sp4b79b8)); return false; } } public static function orderFreeze($sp406042, $sp8560b4) { $spbaa1fa = null; try { return DB::transaction(function () use($sp406042, &$spbaa1fa, $sp8560b4) { $spbaa1fa = \App\Order::where('id', $sp406042)->lockForUpdate()->firstOrFail(); if ($spbaa1fa->status === Order::STATUS_REFUND) { return false; } if ($spbaa1fa->status === Order::STATUS_FROZEN) { return true; } $specf655 = $spbaa1fa->status; if ($specf655 === \App\Order::STATUS_SUCCESS) { $spae0293 = '已发货'; } elseif ($specf655 === \App\Order::STATUS_UNPAY) { $spae0293 = '未付款'; } elseif ($specf655 === \App\Order::STATUS_PAID) { $spae0293 = '未发货'; } else { throw new \Exception('unknown'); } $sp836da4 = User::where('id', $spbaa1fa->user_id)->lockForUpdate()->firstOrFail(); $spb82d81 = new FundRecord(); $spb82d81->user_id = $spbaa1fa->user_id; $spb82d81->type = FundRecord::TYPE_OUT; $spb82d81->order_id = $spbaa1fa->id; $spb82d81->remark = $spbaa1fa === $spbaa1fa ? '' : '关联订单#' . $spbaa1fa->order_no . ': '; if ($specf655 === \App\Order::STATUS_SUCCESS) { $sp836da4->m_frozen += $spbaa1fa->income; $sp836da4->saveOrFail(); $spb82d81->amount = -$spbaa1fa->income; $spb82d81->remark .= $sp8560b4 . ', 冻结订单#' . $spbaa1fa->order_no; } else { $spb82d81->amount = 0; $spb82d81->remark .= $sp8560b4 . ', 冻结订单(' . $spae0293 . ')#' . $spbaa1fa->order_no; } $spb82d81->all = $sp836da4->m_all; $spb82d81->frozen = $sp836da4->m_frozen; $spb82d81->paid = $sp836da4->m_paid; $spb82d81->balance = $sp836da4->m_balance; $spb82d81->saveOrFail(); $spbaa1fa->status = \App\Order::STATUS_FROZEN; $spbaa1fa->frozen_reason = ($spbaa1fa === $spbaa1fa ? '' : '关联订单#' . $spbaa1fa->order_no . ': ') . $sp8560b4; $spbaa1fa->saveOrFail(); return true; }); } catch (\Throwable $sp4b79b8) { $sp4c4581 = 'FundHelper.orderFreeze error'; if ($spbaa1fa) { $sp4c4581 .= ', order_no:' . $spbaa1fa->order_no . ', user_id:' . $spbaa1fa->user_id . ', amount:' . $spbaa1fa->income; } else { $sp4c4581 .= ', order_no: null'; } Log::error($sp4c4581 . ' with exception:', array('Exception' => $sp4b79b8)); return false; } } public static function orderUnfreeze($sp406042, $sp05a7d0, callable $sp2fac51 = null, &$sp0b0163 = null) { $spbaa1fa = null; try { return DB::transaction(function () use($sp406042, &$spbaa1fa, $sp05a7d0, $sp2fac51, &$sp0b0163) { $spbaa1fa = \App\Order::where('id', $sp406042)->lockForUpdate()->firstOrFail(); if ($sp2fac51 !== null) { $spd7b285 = $sp2fac51(); if ($spd7b285 !== self::ACTION_CONTINUE) { return $spd7b285; } } if ($spbaa1fa->status === Order::STATUS_REFUND) { $sp0b0163 = $spbaa1fa->status; return false; } if ($spbaa1fa->status !== Order::STATUS_FROZEN) { $sp0b0163 = $spbaa1fa->status; return true; } $spf37bc1 = $spbaa1fa->card_orders()->exists(); if ($spf37bc1) { $sp0b0163 = \App\Order::STATUS_SUCCESS; $spae0293 = '已发货'; } else { if ($spbaa1fa->paid_at === NULL) { $sp0b0163 = \App\Order::STATUS_UNPAY; $spae0293 = '未付款'; } else { $sp0b0163 = \App\Order::STATUS_PAID; $spae0293 = '未发货'; } } $sp836da4 = User::where('id', $spbaa1fa->user_id)->lockForUpdate()->firstOrFail(); $spb82d81 = new FundRecord(); $spb82d81->user_id = $spbaa1fa->user_id; $spb82d81->type = FundRecord::TYPE_IN; $spb82d81->remark = $spbaa1fa === $spbaa1fa ? '' : '关联订单#' . $spbaa1fa->order_no . ': '; $spb82d81->order_id = $spbaa1fa->id; if ($spf37bc1) { $sp836da4->m_frozen -= $spbaa1fa->income; $sp836da4->saveOrFail(); $spb82d81->amount = $spbaa1fa->income; $spb82d81->remark .= $sp05a7d0 . ', 解冻订单#' . $spbaa1fa->order_no; } else { $spb82d81->amount = 0; $spb82d81->remark .= $sp05a7d0 . ', 解冻订单(' . $spae0293 . ')#' . $spbaa1fa->order_no; } $spb82d81->all = $sp836da4->m_all; $spb82d81->frozen = $sp836da4->m_frozen; $spb82d81->paid = $sp836da4->m_paid; $spb82d81->balance = $sp836da4->m_balance; $spb82d81->saveOrFail(); $spbaa1fa->status = $sp0b0163; $spbaa1fa->saveOrFail(); return true; }); } catch (\Throwable $sp4b79b8) { $sp4c4581 = 'FundHelper.orderUnfreeze error'; if ($spbaa1fa) { $sp4c4581 .= ', order_no:' . $spbaa1fa->order_no . ', user_id:' . $spbaa1fa->user_id . ',amount:' . $spbaa1fa->income; } else { $sp4c4581 .= ', order_no: null'; } Log::error($sp4c4581 . ' with exception:', array('Exception' => $sp4b79b8)); return false; } } }