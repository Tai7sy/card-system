<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spd04f8a, callable $sp44d51d) { $spe0613f = null; try { return DB::transaction(function () use($spd04f8a, &$spe0613f, $sp44d51d) { $spe0613f = \App\Order::where('id', $spd04f8a)->lockForUpdate()->firstOrFail(); $sp9b52fe = $sp44d51d($spe0613f); if ($sp9b52fe !== self::ACTION_CONTINUE) { return $sp9b52fe; } $spbbb773 = User::where('id', $spe0613f->user_id)->lockForUpdate()->firstOrFail(); $spbbb773->m_all += $spe0613f->income; $spbbb773->saveOrFail(); $spf4b37f = new FundRecord(); $spf4b37f->user_id = $spe0613f->user_id; $spf4b37f->type = FundRecord::TYPE_IN; $spf4b37f->amount = $spe0613f->income; $spf4b37f->all = $spbbb773->m_all; $spf4b37f->frozen = $spbbb773->m_frozen; $spf4b37f->paid = $spbbb773->m_paid; $spf4b37f->balance = $spbbb773->m_balance; $spf4b37f->remark = '订单#' . $spe0613f->order_no; $spf4b37f->order_id = $spe0613f->id; $spf4b37f->saveOrFail(); return true; }); } catch (\Throwable $sp3f4aab) { $sp417133 = 'FundHelper.orderSuccess error, order_id:' . $spd04f8a; if ($spe0613f) { $sp417133 .= ', user_id:' . $spe0613f->user_id . ',income:' . $spe0613f->income . ',order_no:' . $spe0613f->order_no; } Log::error($sp417133 . ' with exception:', array('Exception' => $sp3f4aab)); return false; } } public static function orderFreeze($spd04f8a, $sp1abd79) { $spe0613f = null; try { return DB::transaction(function () use($spd04f8a, &$spe0613f, $sp1abd79) { $spe0613f = \App\Order::where('id', $spd04f8a)->lockForUpdate()->firstOrFail(); if ($spe0613f->status === Order::STATUS_REFUND) { return false; } if ($spe0613f->status === Order::STATUS_FROZEN) { return true; } $spc9c73d = $spe0613f->status; if ($spc9c73d === \App\Order::STATUS_SUCCESS) { $sp630f04 = '已发货'; } elseif ($spc9c73d === \App\Order::STATUS_UNPAY) { $sp630f04 = '未付款'; } elseif ($spc9c73d === \App\Order::STATUS_PAID) { $sp630f04 = '未发货'; } else { throw new \Exception('unknown'); } $spbbb773 = User::where('id', $spe0613f->user_id)->lockForUpdate()->firstOrFail(); $spf4b37f = new FundRecord(); $spf4b37f->user_id = $spe0613f->user_id; $spf4b37f->type = FundRecord::TYPE_OUT; $spf4b37f->order_id = $spe0613f->id; $spf4b37f->remark = $spe0613f === $spe0613f ? '' : '关联订单#' . $spe0613f->order_no . ': '; if ($spc9c73d === \App\Order::STATUS_SUCCESS) { $spbbb773->m_frozen += $spe0613f->income; $spbbb773->saveOrFail(); $spf4b37f->amount = -$spe0613f->income; $spf4b37f->remark .= $sp1abd79 . ', 冻结订单#' . $spe0613f->order_no; } else { $spf4b37f->amount = 0; $spf4b37f->remark .= $sp1abd79 . ', 冻结订单(' . $sp630f04 . ')#' . $spe0613f->order_no; } $spf4b37f->all = $spbbb773->m_all; $spf4b37f->frozen = $spbbb773->m_frozen; $spf4b37f->paid = $spbbb773->m_paid; $spf4b37f->balance = $spbbb773->m_balance; $spf4b37f->saveOrFail(); $spe0613f->status = \App\Order::STATUS_FROZEN; $spe0613f->frozen_reason = ($spe0613f === $spe0613f ? '' : '关联订单#' . $spe0613f->order_no . ': ') . $sp1abd79; $spe0613f->saveOrFail(); return true; }); } catch (\Throwable $sp3f4aab) { $sp417133 = 'FundHelper.orderFreeze error'; if ($spe0613f) { $sp417133 .= ', order_no:' . $spe0613f->order_no . ', user_id:' . $spe0613f->user_id . ', amount:' . $spe0613f->income; } else { $sp417133 .= ', order_no: null'; } Log::error($sp417133 . ' with exception:', array('Exception' => $sp3f4aab)); return false; } } public static function orderUnfreeze($spd04f8a, $sp970605, callable $sp9ac62f = null, &$sp3f483e = null) { $spe0613f = null; try { return DB::transaction(function () use($spd04f8a, &$spe0613f, $sp970605, $sp9ac62f, &$sp3f483e) { $spe0613f = \App\Order::where('id', $spd04f8a)->lockForUpdate()->firstOrFail(); if ($sp9ac62f !== null) { $sp9b52fe = $sp9ac62f(); if ($sp9b52fe !== self::ACTION_CONTINUE) { return $sp9b52fe; } } if ($spe0613f->status === Order::STATUS_REFUND) { $sp3f483e = $spe0613f->status; return false; } if ($spe0613f->status !== Order::STATUS_FROZEN) { $sp3f483e = $spe0613f->status; return true; } $spc79f05 = $spe0613f->card_orders()->exists(); if ($spc79f05) { $sp3f483e = \App\Order::STATUS_SUCCESS; $sp630f04 = '已发货'; } else { if ($spe0613f->paid_at === NULL) { $sp3f483e = \App\Order::STATUS_UNPAY; $sp630f04 = '未付款'; } else { $sp3f483e = \App\Order::STATUS_PAID; $sp630f04 = '未发货'; } } $spbbb773 = User::where('id', $spe0613f->user_id)->lockForUpdate()->firstOrFail(); $spf4b37f = new FundRecord(); $spf4b37f->user_id = $spe0613f->user_id; $spf4b37f->type = FundRecord::TYPE_IN; $spf4b37f->remark = $spe0613f === $spe0613f ? '' : '关联订单#' . $spe0613f->order_no . ': '; $spf4b37f->order_id = $spe0613f->id; if ($spc79f05) { $spbbb773->m_frozen -= $spe0613f->income; $spbbb773->saveOrFail(); $spf4b37f->amount = $spe0613f->income; $spf4b37f->remark .= $sp970605 . ', 解冻订单#' . $spe0613f->order_no; } else { $spf4b37f->amount = 0; $spf4b37f->remark .= $sp970605 . ', 解冻订单(' . $sp630f04 . ')#' . $spe0613f->order_no; } $spf4b37f->all = $spbbb773->m_all; $spf4b37f->frozen = $spbbb773->m_frozen; $spf4b37f->paid = $spbbb773->m_paid; $spf4b37f->balance = $spbbb773->m_balance; $spf4b37f->saveOrFail(); $spe0613f->status = $sp3f483e; $spe0613f->saveOrFail(); return true; }); } catch (\Throwable $sp3f4aab) { $sp417133 = 'FundHelper.orderUnfreeze error'; if ($spe0613f) { $sp417133 .= ', order_no:' . $spe0613f->order_no . ', user_id:' . $spe0613f->user_id . ',amount:' . $spe0613f->income; } else { $sp417133 .= ', order_no: null'; } Log::error($sp417133 . ' with exception:', array('Exception' => $sp3f4aab)); return false; } } }