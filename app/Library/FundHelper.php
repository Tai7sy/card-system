<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spe5a302, callable $spac2b89) { $spedec71 = null; try { return DB::transaction(function () use($spe5a302, &$spedec71, $spac2b89) { $spedec71 = \App\Order::where('id', $spe5a302)->lockForUpdate()->firstOrFail(); $sp5359c9 = $spac2b89($spedec71); if ($sp5359c9 !== self::ACTION_CONTINUE) { return $sp5359c9; } $spac34b1 = User::where('id', $spedec71->user_id)->lockForUpdate()->firstOrFail(); $spac34b1->m_all += $spedec71->income; $spac34b1->saveOrFail(); $sp792da7 = new FundRecord(); $sp792da7->user_id = $spedec71->user_id; $sp792da7->type = FundRecord::TYPE_IN; $sp792da7->amount = $spedec71->income; $sp792da7->all = $spac34b1->m_all; $sp792da7->frozen = $spac34b1->m_frozen; $sp792da7->paid = $spac34b1->m_paid; $sp792da7->balance = $spac34b1->m_balance; $sp792da7->remark = '订单#' . $spedec71->order_no; $sp792da7->order_id = $spedec71->id; $sp792da7->saveOrFail(); return true; }); } catch (\Throwable $sp6a7295) { $spa24442 = 'FundHelper.orderSuccess error, order_id:' . $spe5a302; if ($spedec71) { $spa24442 .= ', user_id:' . $spedec71->user_id . ',income:' . $spedec71->income . ',order_no:' . $spedec71->order_no; } Log::error($spa24442 . ' with exception:', array('Exception' => $sp6a7295)); return false; } } public static function orderFreeze($spe5a302, $sp35d759) { $spedec71 = null; try { return DB::transaction(function () use($spe5a302, &$spedec71, $sp35d759) { $spedec71 = \App\Order::where('id', $spe5a302)->lockForUpdate()->firstOrFail(); if ($spedec71->status === Order::STATUS_REFUND) { return false; } if ($spedec71->status === Order::STATUS_FROZEN) { return true; } $spf336f5 = $spedec71->status; if ($spf336f5 === \App\Order::STATUS_SUCCESS) { $spc6c487 = '已发货'; } elseif ($spf336f5 === \App\Order::STATUS_UNPAY) { $spc6c487 = '未付款'; } elseif ($spf336f5 === \App\Order::STATUS_PAID) { $spc6c487 = '未发货'; } else { throw new \Exception('unknown'); } $spac34b1 = User::where('id', $spedec71->user_id)->lockForUpdate()->firstOrFail(); $sp792da7 = new FundRecord(); $sp792da7->user_id = $spedec71->user_id; $sp792da7->type = FundRecord::TYPE_OUT; $sp792da7->order_id = $spedec71->id; $sp792da7->remark = $spedec71 === $spedec71 ? '' : '关联订单#' . $spedec71->order_no . ': '; if ($spf336f5 === \App\Order::STATUS_SUCCESS) { $spac34b1->m_frozen += $spedec71->income; $spac34b1->saveOrFail(); $sp792da7->amount = -$spedec71->income; $sp792da7->remark .= $sp35d759 . ', 冻结订单#' . $spedec71->order_no; } else { $sp792da7->amount = 0; $sp792da7->remark .= $sp35d759 . ', 冻结订单(' . $spc6c487 . ')#' . $spedec71->order_no; } $sp792da7->all = $spac34b1->m_all; $sp792da7->frozen = $spac34b1->m_frozen; $sp792da7->paid = $spac34b1->m_paid; $sp792da7->balance = $spac34b1->m_balance; $sp792da7->saveOrFail(); $spedec71->status = \App\Order::STATUS_FROZEN; $spedec71->frozen_reason = ($spedec71 === $spedec71 ? '' : '关联订单#' . $spedec71->order_no . ': ') . $sp35d759; $spedec71->saveOrFail(); return true; }); } catch (\Throwable $sp6a7295) { $spa24442 = 'FundHelper.orderFreeze error'; if ($spedec71) { $spa24442 .= ', order_no:' . $spedec71->order_no . ', user_id:' . $spedec71->user_id . ', amount:' . $spedec71->income; } else { $spa24442 .= ', order_no: null'; } Log::error($spa24442 . ' with exception:', array('Exception' => $sp6a7295)); return false; } } public static function orderUnfreeze($spe5a302, $sp82af3d, callable $sp6adede = null, &$sp172c79 = null) { $spedec71 = null; try { return DB::transaction(function () use($spe5a302, &$spedec71, $sp82af3d, $sp6adede, &$sp172c79) { $spedec71 = \App\Order::where('id', $spe5a302)->lockForUpdate()->firstOrFail(); if ($sp6adede !== null) { $sp5359c9 = $sp6adede(); if ($sp5359c9 !== self::ACTION_CONTINUE) { return $sp5359c9; } } if ($spedec71->status === Order::STATUS_REFUND) { $sp172c79 = $spedec71->status; return false; } if ($spedec71->status !== Order::STATUS_FROZEN) { $sp172c79 = $spedec71->status; return true; } $sp0cd54e = $spedec71->card_orders()->exists(); if ($sp0cd54e) { $sp172c79 = \App\Order::STATUS_SUCCESS; $spc6c487 = '已发货'; } else { if ($spedec71->paid_at === NULL) { $sp172c79 = \App\Order::STATUS_UNPAY; $spc6c487 = '未付款'; } else { $sp172c79 = \App\Order::STATUS_PAID; $spc6c487 = '未发货'; } } $spac34b1 = User::where('id', $spedec71->user_id)->lockForUpdate()->firstOrFail(); $sp792da7 = new FundRecord(); $sp792da7->user_id = $spedec71->user_id; $sp792da7->type = FundRecord::TYPE_IN; $sp792da7->remark = $spedec71 === $spedec71 ? '' : '关联订单#' . $spedec71->order_no . ': '; $sp792da7->order_id = $spedec71->id; if ($sp0cd54e) { $spac34b1->m_frozen -= $spedec71->income; $spac34b1->saveOrFail(); $sp792da7->amount = $spedec71->income; $sp792da7->remark .= $sp82af3d . ', 解冻订单#' . $spedec71->order_no; } else { $sp792da7->amount = 0; $sp792da7->remark .= $sp82af3d . ', 解冻订单(' . $spc6c487 . ')#' . $spedec71->order_no; } $sp792da7->all = $spac34b1->m_all; $sp792da7->frozen = $spac34b1->m_frozen; $sp792da7->paid = $spac34b1->m_paid; $sp792da7->balance = $spac34b1->m_balance; $sp792da7->saveOrFail(); $spedec71->status = $sp172c79; $spedec71->saveOrFail(); return true; }); } catch (\Throwable $sp6a7295) { $spa24442 = 'FundHelper.orderUnfreeze error'; if ($spedec71) { $spa24442 .= ', order_no:' . $spedec71->order_no . ', user_id:' . $spedec71->user_id . ',amount:' . $spedec71->income; } else { $spa24442 .= ', order_no: null'; } Log::error($spa24442 . ' with exception:', array('Exception' => $sp6a7295)); return false; } } }