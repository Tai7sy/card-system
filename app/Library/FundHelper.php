<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp1d65ca, callable $spe15144) { $spb656d1 = null; try { return DB::transaction(function () use($sp1d65ca, &$spb656d1, $spe15144) { $spb656d1 = \App\Order::where('id', $sp1d65ca)->lockForUpdate()->firstOrFail(); $sp599084 = $spe15144($spb656d1); if ($sp599084 !== self::ACTION_CONTINUE) { return $sp599084; } $spdc0e57 = User::where('id', $spb656d1->user_id)->lockForUpdate()->firstOrFail(); $spdc0e57->m_all += $spb656d1->income; $spdc0e57->saveOrFail(); $sp7bb191 = new FundRecord(); $sp7bb191->user_id = $spb656d1->user_id; $sp7bb191->type = FundRecord::TYPE_IN; $sp7bb191->amount = $spb656d1->income; $sp7bb191->all = $spdc0e57->m_all; $sp7bb191->frozen = $spdc0e57->m_frozen; $sp7bb191->paid = $spdc0e57->m_paid; $sp7bb191->balance = $spdc0e57->m_balance; $sp7bb191->remark = '订单#' . $spb656d1->order_no; $sp7bb191->order_id = $spb656d1->id; $sp7bb191->saveOrFail(); return true; }); } catch (\Throwable $sp696863) { $spe765e4 = 'FundHelper.orderSuccess error, order_id:' . $sp1d65ca; if ($spb656d1) { $spe765e4 .= ', user_id:' . $spb656d1->user_id . ',income:' . $spb656d1->income . ',order_no:' . $spb656d1->order_no; } Log::error($spe765e4 . ' with exception:', array('Exception' => $sp696863)); return false; } } public static function orderFreeze($sp1d65ca, $sp8355d1) { $spb656d1 = null; try { return DB::transaction(function () use($sp1d65ca, &$spb656d1, $sp8355d1) { $spb656d1 = \App\Order::where('id', $sp1d65ca)->lockForUpdate()->firstOrFail(); if ($spb656d1->status === Order::STATUS_REFUND) { return false; } if ($spb656d1->status === Order::STATUS_FROZEN) { return true; } $sp0bfd65 = $spb656d1->status; if ($sp0bfd65 === \App\Order::STATUS_SUCCESS) { $sp5ef17d = '已发货'; } elseif ($sp0bfd65 === \App\Order::STATUS_UNPAY) { $sp5ef17d = '未付款'; } elseif ($sp0bfd65 === \App\Order::STATUS_PAID) { $sp5ef17d = '未发货'; } else { throw new \Exception('unknown'); } $spdc0e57 = User::where('id', $spb656d1->user_id)->lockForUpdate()->firstOrFail(); $sp7bb191 = new FundRecord(); $sp7bb191->user_id = $spb656d1->user_id; $sp7bb191->type = FundRecord::TYPE_OUT; $sp7bb191->order_id = $spb656d1->id; $sp7bb191->remark = $spb656d1 === $spb656d1 ? '' : '关联订单#' . $spb656d1->order_no . ': '; if ($sp0bfd65 === \App\Order::STATUS_SUCCESS) { $spdc0e57->m_frozen += $spb656d1->income; $spdc0e57->saveOrFail(); $sp7bb191->amount = -$spb656d1->income; $sp7bb191->remark .= $sp8355d1 . ', 冻结订单#' . $spb656d1->order_no; } else { $sp7bb191->amount = 0; $sp7bb191->remark .= $sp8355d1 . ', 冻结订单(' . $sp5ef17d . ')#' . $spb656d1->order_no; } $sp7bb191->all = $spdc0e57->m_all; $sp7bb191->frozen = $spdc0e57->m_frozen; $sp7bb191->paid = $spdc0e57->m_paid; $sp7bb191->balance = $spdc0e57->m_balance; $sp7bb191->saveOrFail(); $spb656d1->status = \App\Order::STATUS_FROZEN; $spb656d1->frozen_reason = ($spb656d1 === $spb656d1 ? '' : '关联订单#' . $spb656d1->order_no . ': ') . $sp8355d1; $spb656d1->saveOrFail(); return true; }); } catch (\Throwable $sp696863) { $spe765e4 = 'FundHelper.orderFreeze error'; if ($spb656d1) { $spe765e4 .= ', order_no:' . $spb656d1->order_no . ', user_id:' . $spb656d1->user_id . ', amount:' . $spb656d1->income; } else { $spe765e4 .= ', order_no: null'; } Log::error($spe765e4 . ' with exception:', array('Exception' => $sp696863)); return false; } } public static function orderUnfreeze($sp1d65ca, $sp728099, callable $sp22f9c0 = null, &$spfa1351 = null) { $spb656d1 = null; try { return DB::transaction(function () use($sp1d65ca, &$spb656d1, $sp728099, $sp22f9c0, &$spfa1351) { $spb656d1 = \App\Order::where('id', $sp1d65ca)->lockForUpdate()->firstOrFail(); if ($sp22f9c0 !== null) { $sp599084 = $sp22f9c0(); if ($sp599084 !== self::ACTION_CONTINUE) { return $sp599084; } } if ($spb656d1->status === Order::STATUS_REFUND) { $spfa1351 = $spb656d1->status; return false; } if ($spb656d1->status !== Order::STATUS_FROZEN) { $spfa1351 = $spb656d1->status; return true; } $sp9a36ef = $spb656d1->card_orders()->exists(); if ($sp9a36ef) { $spfa1351 = \App\Order::STATUS_SUCCESS; $sp5ef17d = '已发货'; } else { if ($spb656d1->paid_at === NULL) { $spfa1351 = \App\Order::STATUS_UNPAY; $sp5ef17d = '未付款'; } else { $spfa1351 = \App\Order::STATUS_PAID; $sp5ef17d = '未发货'; } } $spdc0e57 = User::where('id', $spb656d1->user_id)->lockForUpdate()->firstOrFail(); $sp7bb191 = new FundRecord(); $sp7bb191->user_id = $spb656d1->user_id; $sp7bb191->type = FundRecord::TYPE_IN; $sp7bb191->remark = $spb656d1 === $spb656d1 ? '' : '关联订单#' . $spb656d1->order_no . ': '; $sp7bb191->order_id = $spb656d1->id; if ($sp9a36ef) { $spdc0e57->m_frozen -= $spb656d1->income; $spdc0e57->saveOrFail(); $sp7bb191->amount = $spb656d1->income; $sp7bb191->remark .= $sp728099 . ', 解冻订单#' . $spb656d1->order_no; } else { $sp7bb191->amount = 0; $sp7bb191->remark .= $sp728099 . ', 解冻订单(' . $sp5ef17d . ')#' . $spb656d1->order_no; } $sp7bb191->all = $spdc0e57->m_all; $sp7bb191->frozen = $spdc0e57->m_frozen; $sp7bb191->paid = $spdc0e57->m_paid; $sp7bb191->balance = $spdc0e57->m_balance; $sp7bb191->saveOrFail(); $spb656d1->status = $spfa1351; $spb656d1->saveOrFail(); return true; }); } catch (\Throwable $sp696863) { $spe765e4 = 'FundHelper.orderUnfreeze error'; if ($spb656d1) { $spe765e4 .= ', order_no:' . $spb656d1->order_no . ', user_id:' . $spb656d1->user_id . ',amount:' . $spb656d1->income; } else { $spe765e4 .= ', order_no: null'; } Log::error($spe765e4 . ' with exception:', array('Exception' => $sp696863)); return false; } } }