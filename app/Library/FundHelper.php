<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp290576, callable $sp821214) { $sp4cc7a0 = null; try { return DB::transaction(function () use($sp290576, &$sp4cc7a0, $sp821214) { $sp4cc7a0 = \App\Order::where('id', $sp290576)->lockForUpdate()->firstOrFail(); $sp44edeb = $sp821214($sp4cc7a0); if ($sp44edeb !== self::ACTION_CONTINUE) { return $sp44edeb; } $sp85e034 = User::where('id', $sp4cc7a0->user_id)->lockForUpdate()->firstOrFail(); $sp85e034->m_all += $sp4cc7a0->income; $sp85e034->saveOrFail(); $sp1dc3f4 = new FundRecord(); $sp1dc3f4->user_id = $sp4cc7a0->user_id; $sp1dc3f4->type = FundRecord::TYPE_IN; $sp1dc3f4->amount = $sp4cc7a0->income; $sp1dc3f4->all = $sp85e034->m_all; $sp1dc3f4->frozen = $sp85e034->m_frozen; $sp1dc3f4->paid = $sp85e034->m_paid; $sp1dc3f4->balance = $sp85e034->m_balance; $sp1dc3f4->remark = '订单#' . $sp4cc7a0->order_no; $sp1dc3f4->order_id = $sp4cc7a0->id; $sp1dc3f4->saveOrFail(); return true; }); } catch (\Throwable $spcdd557) { $sp74697c = 'FundHelper.orderSuccess error, order_id:' . $sp290576; if ($sp4cc7a0) { $sp74697c .= ', user_id:' . $sp4cc7a0->user_id . ',income:' . $sp4cc7a0->income . ',order_no:' . $sp4cc7a0->order_no; } Log::error($sp74697c . ' with exception:', array('Exception' => $spcdd557)); return false; } } public static function orderFreeze($sp290576, $sp8ea04c) { $sp4cc7a0 = null; try { return DB::transaction(function () use($sp290576, &$sp4cc7a0, $sp8ea04c) { $sp4cc7a0 = \App\Order::where('id', $sp290576)->lockForUpdate()->firstOrFail(); if ($sp4cc7a0->status === Order::STATUS_REFUND) { return false; } if ($sp4cc7a0->status === Order::STATUS_FROZEN) { return true; } $spdf0970 = $sp4cc7a0->status; if ($spdf0970 === \App\Order::STATUS_SUCCESS) { $spb6402e = '已发货'; } elseif ($spdf0970 === \App\Order::STATUS_UNPAY) { $spb6402e = '未付款'; } elseif ($spdf0970 === \App\Order::STATUS_PAID) { $spb6402e = '未发货'; } else { throw new \Exception('unknown'); } $sp85e034 = User::where('id', $sp4cc7a0->user_id)->lockForUpdate()->firstOrFail(); $sp1dc3f4 = new FundRecord(); $sp1dc3f4->user_id = $sp4cc7a0->user_id; $sp1dc3f4->type = FundRecord::TYPE_OUT; $sp1dc3f4->order_id = $sp4cc7a0->id; $sp1dc3f4->remark = $sp4cc7a0 === $sp4cc7a0 ? '' : '关联订单#' . $sp4cc7a0->order_no . ': '; if ($spdf0970 === \App\Order::STATUS_SUCCESS) { $sp85e034->m_frozen += $sp4cc7a0->income; $sp85e034->saveOrFail(); $sp1dc3f4->amount = -$sp4cc7a0->income; $sp1dc3f4->remark .= $sp8ea04c . ', 冻结订单#' . $sp4cc7a0->order_no; } else { $sp1dc3f4->amount = 0; $sp1dc3f4->remark .= $sp8ea04c . ', 冻结订单(' . $spb6402e . ')#' . $sp4cc7a0->order_no; } $sp1dc3f4->all = $sp85e034->m_all; $sp1dc3f4->frozen = $sp85e034->m_frozen; $sp1dc3f4->paid = $sp85e034->m_paid; $sp1dc3f4->balance = $sp85e034->m_balance; $sp1dc3f4->saveOrFail(); $sp4cc7a0->status = \App\Order::STATUS_FROZEN; $sp4cc7a0->frozen_reason = ($sp4cc7a0 === $sp4cc7a0 ? '' : '关联订单#' . $sp4cc7a0->order_no . ': ') . $sp8ea04c; $sp4cc7a0->saveOrFail(); return true; }); } catch (\Throwable $spcdd557) { $sp74697c = 'FundHelper.orderFreeze error'; if ($sp4cc7a0) { $sp74697c .= ', order_no:' . $sp4cc7a0->order_no . ', user_id:' . $sp4cc7a0->user_id . ', amount:' . $sp4cc7a0->income; } else { $sp74697c .= ', order_no: null'; } Log::error($sp74697c . ' with exception:', array('Exception' => $spcdd557)); return false; } } public static function orderUnfreeze($sp290576, $sp9e4a80, callable $spa62afb = null, &$sp463f2b = null) { $sp4cc7a0 = null; try { return DB::transaction(function () use($sp290576, &$sp4cc7a0, $sp9e4a80, $spa62afb, &$sp463f2b) { $sp4cc7a0 = \App\Order::where('id', $sp290576)->lockForUpdate()->firstOrFail(); if ($spa62afb !== null) { $sp44edeb = $spa62afb(); if ($sp44edeb !== self::ACTION_CONTINUE) { return $sp44edeb; } } if ($sp4cc7a0->status === Order::STATUS_REFUND) { $sp463f2b = $sp4cc7a0->status; return false; } if ($sp4cc7a0->status !== Order::STATUS_FROZEN) { $sp463f2b = $sp4cc7a0->status; return true; } $sp0a0e08 = $sp4cc7a0->card_orders()->exists(); if ($sp0a0e08) { $sp463f2b = \App\Order::STATUS_SUCCESS; $spb6402e = '已发货'; } else { if ($sp4cc7a0->paid_at === NULL) { $sp463f2b = \App\Order::STATUS_UNPAY; $spb6402e = '未付款'; } else { $sp463f2b = \App\Order::STATUS_PAID; $spb6402e = '未发货'; } } $sp85e034 = User::where('id', $sp4cc7a0->user_id)->lockForUpdate()->firstOrFail(); $sp1dc3f4 = new FundRecord(); $sp1dc3f4->user_id = $sp4cc7a0->user_id; $sp1dc3f4->type = FundRecord::TYPE_IN; $sp1dc3f4->remark = $sp4cc7a0 === $sp4cc7a0 ? '' : '关联订单#' . $sp4cc7a0->order_no . ': '; $sp1dc3f4->order_id = $sp4cc7a0->id; if ($sp0a0e08) { $sp85e034->m_frozen -= $sp4cc7a0->income; $sp85e034->saveOrFail(); $sp1dc3f4->amount = $sp4cc7a0->income; $sp1dc3f4->remark .= $sp9e4a80 . ', 解冻订单#' . $sp4cc7a0->order_no; } else { $sp1dc3f4->amount = 0; $sp1dc3f4->remark .= $sp9e4a80 . ', 解冻订单(' . $spb6402e . ')#' . $sp4cc7a0->order_no; } $sp1dc3f4->all = $sp85e034->m_all; $sp1dc3f4->frozen = $sp85e034->m_frozen; $sp1dc3f4->paid = $sp85e034->m_paid; $sp1dc3f4->balance = $sp85e034->m_balance; $sp1dc3f4->saveOrFail(); $sp4cc7a0->status = $sp463f2b; $sp4cc7a0->saveOrFail(); return true; }); } catch (\Throwable $spcdd557) { $sp74697c = 'FundHelper.orderUnfreeze error'; if ($sp4cc7a0) { $sp74697c .= ', order_no:' . $sp4cc7a0->order_no . ', user_id:' . $sp4cc7a0->user_id . ',amount:' . $sp4cc7a0->income; } else { $sp74697c .= ', order_no: null'; } Log::error($sp74697c . ' with exception:', array('Exception' => $spcdd557)); return false; } } }