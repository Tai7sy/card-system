<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp2622d2, $sp2f0fb4) { $this->captcha_id = $sp2622d2; $this->private_key = $sp2f0fb4; } public function pre_process($sp699450 = null) { $sp69c1d6 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp699450 != null and is_string($sp699450)) { $sp69c1d6 = $sp69c1d6 . '&user_id=' . $sp699450; } $sp262cc6 = $this->send_request($sp69c1d6); if (strlen($sp262cc6) != 32) { $this->failback_process(); return 0; } $this->success_process($sp262cc6); return 1; } private function success_process($sp262cc6) { $sp262cc6 = md5($sp262cc6 . $this->private_key); $spdf3304 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp262cc6); $this->response = $spdf3304; } private function failback_process() { $sp704f22 = md5(rand(0, 100)); $sp53e037 = md5(rand(0, 100)); $sp262cc6 = $sp704f22 . substr($sp53e037, 0, 2); $spdf3304 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp262cc6); $this->response = $spdf3304; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp262cc6, $spf0eb76, $sp27b120, $sp699450 = null) { if (!$this->check_validate($sp262cc6, $spf0eb76)) { return 0; } $spac70ab = array('seccode' => $sp27b120, 'sdk' => self::GT_SDK_VERSION); if ($sp699450 != null and is_string($sp699450)) { $spac70ab['user_id'] = $sp699450; } $sp69c1d6 = 'http://api.geetest.com/validate.php'; $sp5739b0 = $this->post_request($sp69c1d6, $spac70ab); if ($sp5739b0 == md5($sp27b120)) { return 1; } else { if ($sp5739b0 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp262cc6, $spf0eb76, $sp27b120) { if ($spf0eb76) { $sp1e3ccc = explode('_', $spf0eb76); try { $spb115b4 = $this->decode_response($sp262cc6, $sp1e3ccc['0']); $sp36a35b = $this->decode_response($sp262cc6, $sp1e3ccc['1']); $sp36c6f2 = $this->decode_response($sp262cc6, $sp1e3ccc['2']); $sp18c615 = $this->get_failback_pic_ans($sp36a35b, $sp36c6f2); $sp66e739 = abs($spb115b4 - $sp18c615); } catch (\Exception $sp7900a2) { return 1; } if ($sp66e739 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp262cc6, $spf0eb76) { if (strlen($spf0eb76) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp262cc6) != $spf0eb76) { return false; } return true; } private function send_request($sp69c1d6) { if (function_exists('curl_exec')) { $spba6201 = curl_init(); curl_setopt($spba6201, CURLOPT_URL, $sp69c1d6); curl_setopt($spba6201, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spba6201, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spba6201, CURLOPT_RETURNTRANSFER, 1); $spac70ab = curl_exec($spba6201); if (curl_errno($spba6201)) { $sp1eb2d0 = sprintf('curl[%s] error[%s]', $sp69c1d6, curl_errno($spba6201) . ':' . curl_error($spba6201)); $this->triggerError($sp1eb2d0); } curl_close($spba6201); } else { $spe226b4 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spf94d68 = stream_context_create($spe226b4); $spac70ab = file_get_contents($sp69c1d6, false, $spf94d68); } return $spac70ab; } private function post_request($sp69c1d6, $sp8cca5c = '') { if (!$sp8cca5c) { return false; } $spac70ab = http_build_query($sp8cca5c); if (function_exists('curl_exec')) { $spba6201 = curl_init(); curl_setopt($spba6201, CURLOPT_URL, $sp69c1d6); curl_setopt($spba6201, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spba6201, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spba6201, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp8cca5c) { curl_setopt($spba6201, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spba6201, CURLOPT_POST, 1); curl_setopt($spba6201, CURLOPT_POSTFIELDS, $spac70ab); } $spac70ab = curl_exec($spba6201); if (curl_errno($spba6201)) { $sp1eb2d0 = sprintf('curl[%s] error[%s]', $sp69c1d6, curl_errno($spba6201) . ':' . curl_error($spba6201)); $this->triggerError($sp1eb2d0); } curl_close($spba6201); } else { if ($sp8cca5c) { $spe226b4 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spac70ab) . '
', 'content' => $spac70ab, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spf94d68 = stream_context_create($spe226b4); $spac70ab = file_get_contents($sp69c1d6, false, $spf94d68); } } return $spac70ab; } private function decode_response($sp262cc6, $sp55e792) { if (strlen($sp55e792) > 100) { return 0; } $sp696922 = array(); $spcc45fa = array(); $spf8d152 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spe95220 = 0; $spd29158 = 0; $sp1d8932 = str_split($sp262cc6); $sp45a5b2 = str_split($sp55e792); for ($sp8f2283 = 0; $sp8f2283 < strlen($sp262cc6); $sp8f2283++) { $sp9c771b = $sp1d8932[$sp8f2283]; if (in_array($sp9c771b, $spcc45fa)) { continue; } else { $sp1e3ccc = $spf8d152[$spe95220 % 5]; array_push($spcc45fa, $sp9c771b); $spe95220++; $sp696922[$sp9c771b] = $sp1e3ccc; } } for ($spd82e4b = 0; $spd82e4b < strlen($sp55e792); $spd82e4b++) { $spd29158 += $sp696922[$sp45a5b2[$spd82e4b]]; } $spd29158 = $spd29158 - $this->decodeRandBase($sp262cc6); return $spd29158; } private function get_x_pos_from_str($sp5fd68b) { if (strlen($sp5fd68b) != 5) { return 0; } $sp367ccd = 0; $sp8634c4 = 200; $sp367ccd = base_convert($sp5fd68b, 16, 10); $spdf3304 = $sp367ccd % $sp8634c4; $spdf3304 = $spdf3304 < 40 ? 40 : $spdf3304; return $spdf3304; } private function get_failback_pic_ans($sp4d0a1c, $spf49982) { $sp28f945 = substr(md5($sp4d0a1c), 0, 9); $sp194a5f = substr(md5($spf49982), 10, 9); $spa30b71 = ''; for ($sp8f2283 = 0; $sp8f2283 < 9; $sp8f2283++) { if ($sp8f2283 % 2 == 0) { $spa30b71 = $spa30b71 . $sp28f945[$sp8f2283]; } elseif ($sp8f2283 % 2 == 1) { $spa30b71 = $spa30b71 . $sp194a5f[$sp8f2283]; } } $sp09a06c = substr($spa30b71, 4, 5); $sp18c615 = $this->get_x_pos_from_str($sp09a06c); return $sp18c615; } private function decodeRandBase($sp262cc6) { $spddab33 = substr($sp262cc6, 32, 2); $sp461f67 = array(); for ($sp8f2283 = 0; $sp8f2283 < strlen($spddab33); $sp8f2283++) { $sp7ed212 = ord($spddab33[$sp8f2283]); $spdf3304 = $sp7ed212 > 57 ? $sp7ed212 - 87 : $sp7ed212 - 48; array_push($sp461f67, $spdf3304); } $sp4d50c0 = $sp461f67['0'] * 36 + $sp461f67['1']; return $sp4d50c0; } private function triggerError($sp1eb2d0) { } }