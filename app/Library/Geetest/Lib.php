<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spf6c037, $sp0798a1) { $this->captcha_id = $spf6c037; $this->private_key = $sp0798a1; } public function pre_process($sp279789 = null) { $spf47337 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp279789 != null and is_string($sp279789)) { $spf47337 = $spf47337 . '&user_id=' . $sp279789; } $sp05e951 = $this->send_request($spf47337); if (strlen($sp05e951) != 32) { $this->failback_process(); return 0; } $this->success_process($sp05e951); return 1; } private function success_process($sp05e951) { $sp05e951 = md5($sp05e951 . $this->private_key); $sp9a8387 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp05e951); $this->response = $sp9a8387; } private function failback_process() { $sp0777b4 = md5(rand(0, 100)); $sp20be17 = md5(rand(0, 100)); $sp05e951 = $sp0777b4 . substr($sp20be17, 0, 2); $sp9a8387 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp05e951); $this->response = $sp9a8387; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp05e951, $spa4a934, $sp0eca14, $sp279789 = null) { if (!$this->check_validate($sp05e951, $spa4a934)) { return 0; } $spf187d6 = array('seccode' => $sp0eca14, 'sdk' => self::GT_SDK_VERSION); if ($sp279789 != null and is_string($sp279789)) { $spf187d6['user_id'] = $sp279789; } $spf47337 = 'http://api.geetest.com/validate.php'; $sp9d1b22 = $this->post_request($spf47337, $spf187d6); if ($sp9d1b22 == md5($sp0eca14)) { return 1; } else { if ($sp9d1b22 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp05e951, $spa4a934, $sp0eca14) { if ($spa4a934) { $sp260633 = explode('_', $spa4a934); try { $sp88d823 = $this->decode_response($sp05e951, $sp260633['0']); $spea5582 = $this->decode_response($sp05e951, $sp260633['1']); $spcf9087 = $this->decode_response($sp05e951, $sp260633['2']); $spf649f6 = $this->get_failback_pic_ans($spea5582, $spcf9087); $sp58ae84 = abs($sp88d823 - $spf649f6); } catch (\Exception $spd54c56) { return 1; } if ($sp58ae84 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp05e951, $spa4a934) { if (strlen($spa4a934) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp05e951) != $spa4a934) { return false; } return true; } private function send_request($spf47337) { if (function_exists('curl_exec')) { $sp8bd541 = curl_init(); curl_setopt($sp8bd541, CURLOPT_URL, $spf47337); curl_setopt($sp8bd541, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp8bd541, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp8bd541, CURLOPT_RETURNTRANSFER, 1); $spf187d6 = curl_exec($sp8bd541); if (curl_errno($sp8bd541)) { $sp2841d3 = sprintf('curl[%s] error[%s]', $spf47337, curl_errno($sp8bd541) . ':' . curl_error($sp8bd541)); $this->triggerError($sp2841d3); } curl_close($sp8bd541); } else { $sp8d7b83 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spa23d8c = stream_context_create($sp8d7b83); $spf187d6 = file_get_contents($spf47337, false, $spa23d8c); } return $spf187d6; } private function post_request($spf47337, $sp0ff6b1 = '') { if (!$sp0ff6b1) { return false; } $spf187d6 = http_build_query($sp0ff6b1); if (function_exists('curl_exec')) { $sp8bd541 = curl_init(); curl_setopt($sp8bd541, CURLOPT_URL, $spf47337); curl_setopt($sp8bd541, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp8bd541, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp8bd541, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp0ff6b1) { curl_setopt($sp8bd541, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp8bd541, CURLOPT_POST, 1); curl_setopt($sp8bd541, CURLOPT_POSTFIELDS, $spf187d6); } $spf187d6 = curl_exec($sp8bd541); if (curl_errno($sp8bd541)) { $sp2841d3 = sprintf('curl[%s] error[%s]', $spf47337, curl_errno($sp8bd541) . ':' . curl_error($sp8bd541)); $this->triggerError($sp2841d3); } curl_close($sp8bd541); } else { if ($sp0ff6b1) { $sp8d7b83 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spf187d6) . '
', 'content' => $spf187d6, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spa23d8c = stream_context_create($sp8d7b83); $spf187d6 = file_get_contents($spf47337, false, $spa23d8c); } } return $spf187d6; } private function decode_response($sp05e951, $sp95fbeb) { if (strlen($sp95fbeb) > 100) { return 0; } $sp0f4337 = array(); $sp94e296 = array(); $sp8b8c53 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spf26c0c = 0; $sp722ffb = 0; $sp2dc498 = str_split($sp05e951); $sp379c10 = str_split($sp95fbeb); for ($spf3a567 = 0; $spf3a567 < strlen($sp05e951); $spf3a567++) { $spe4455f = $sp2dc498[$spf3a567]; if (in_array($spe4455f, $sp94e296)) { continue; } else { $sp260633 = $sp8b8c53[$spf26c0c % 5]; array_push($sp94e296, $spe4455f); $spf26c0c++; $sp0f4337[$spe4455f] = $sp260633; } } for ($sp2aa2fa = 0; $sp2aa2fa < strlen($sp95fbeb); $sp2aa2fa++) { $sp722ffb += $sp0f4337[$sp379c10[$sp2aa2fa]]; } $sp722ffb = $sp722ffb - $this->decodeRandBase($sp05e951); return $sp722ffb; } private function get_x_pos_from_str($sp60fce8) { if (strlen($sp60fce8) != 5) { return 0; } $sp72f467 = 0; $spe2bd79 = 200; $sp72f467 = base_convert($sp60fce8, 16, 10); $sp9a8387 = $sp72f467 % $spe2bd79; $sp9a8387 = $sp9a8387 < 40 ? 40 : $sp9a8387; return $sp9a8387; } private function get_failback_pic_ans($sp140676, $sp398793) { $sp7e1c93 = substr(md5($sp140676), 0, 9); $spa02b05 = substr(md5($sp398793), 10, 9); $sp1bf388 = ''; for ($spf3a567 = 0; $spf3a567 < 9; $spf3a567++) { if ($spf3a567 % 2 == 0) { $sp1bf388 = $sp1bf388 . $sp7e1c93[$spf3a567]; } elseif ($spf3a567 % 2 == 1) { $sp1bf388 = $sp1bf388 . $spa02b05[$spf3a567]; } } $sped9020 = substr($sp1bf388, 4, 5); $spf649f6 = $this->get_x_pos_from_str($sped9020); return $spf649f6; } private function decodeRandBase($sp05e951) { $sp10708d = substr($sp05e951, 32, 2); $sp794382 = array(); for ($spf3a567 = 0; $spf3a567 < strlen($sp10708d); $spf3a567++) { $sp873ca7 = ord($sp10708d[$spf3a567]); $sp9a8387 = $sp873ca7 > 57 ? $sp873ca7 - 87 : $sp873ca7 - 48; array_push($sp794382, $sp9a8387); } $spd5b6dc = $sp794382['0'] * 36 + $sp794382['1']; return $spd5b6dc; } private function triggerError($sp2841d3) { } }