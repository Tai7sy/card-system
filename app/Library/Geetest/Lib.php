<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spd8b8a5, $spc350fd) { $this->captcha_id = $spd8b8a5; $this->private_key = $spc350fd; } public function pre_process($spf93fb1 = null) { $spe1037b = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spf93fb1 != null and is_string($spf93fb1)) { $spe1037b = $spe1037b . '&user_id=' . $spf93fb1; } $spc7aec2 = $this->send_request($spe1037b); if (strlen($spc7aec2) != 32) { $this->failback_process(); return 0; } $this->success_process($spc7aec2); return 1; } private function success_process($spc7aec2) { $spc7aec2 = md5($spc7aec2 . $this->private_key); $spb6456a = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spc7aec2); $this->response = $spb6456a; } private function failback_process() { $sp030e25 = md5(rand(0, 100)); $spe708af = md5(rand(0, 100)); $spc7aec2 = $sp030e25 . substr($spe708af, 0, 2); $spb6456a = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spc7aec2); $this->response = $spb6456a; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spc7aec2, $sp3340b2, $spf04894, $spf93fb1 = null) { if (!$this->check_validate($spc7aec2, $sp3340b2)) { return 0; } $sp28f462 = array('seccode' => $spf04894, 'sdk' => self::GT_SDK_VERSION); if ($spf93fb1 != null and is_string($spf93fb1)) { $sp28f462['user_id'] = $spf93fb1; } $spe1037b = 'http://api.geetest.com/validate.php'; $sp18f6d7 = $this->post_request($spe1037b, $sp28f462); if ($sp18f6d7 == md5($spf04894)) { return 1; } else { if ($sp18f6d7 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spc7aec2, $sp3340b2, $spf04894) { if ($sp3340b2) { $sp4bfa1d = explode('_', $sp3340b2); try { $spc3a50e = $this->decode_response($spc7aec2, $sp4bfa1d['0']); $sp9cbb8d = $this->decode_response($spc7aec2, $sp4bfa1d['1']); $sp51d55e = $this->decode_response($spc7aec2, $sp4bfa1d['2']); $spc4ea56 = $this->get_failback_pic_ans($sp9cbb8d, $sp51d55e); $spc38b6d = abs($spc3a50e - $spc4ea56); } catch (\Exception $sp54a0c6) { return 1; } if ($spc38b6d < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spc7aec2, $sp3340b2) { if (strlen($sp3340b2) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spc7aec2) != $sp3340b2) { return false; } return true; } private function send_request($spe1037b) { if (function_exists('curl_exec')) { $sp79ef57 = curl_init(); curl_setopt($sp79ef57, CURLOPT_URL, $spe1037b); curl_setopt($sp79ef57, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp79ef57, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp79ef57, CURLOPT_RETURNTRANSFER, 1); $sp28f462 = curl_exec($sp79ef57); if (curl_errno($sp79ef57)) { $sp6f9e69 = sprintf('curl[%s] error[%s]', $spe1037b, curl_errno($sp79ef57) . ':' . curl_error($sp79ef57)); $this->triggerError($sp6f9e69); } curl_close($sp79ef57); } else { $sp3273f1 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp698693 = stream_context_create($sp3273f1); $sp28f462 = file_get_contents($spe1037b, false, $sp698693); } return $sp28f462; } private function post_request($spe1037b, $sp71f60d = '') { if (!$sp71f60d) { return false; } $sp28f462 = http_build_query($sp71f60d); if (function_exists('curl_exec')) { $sp79ef57 = curl_init(); curl_setopt($sp79ef57, CURLOPT_URL, $spe1037b); curl_setopt($sp79ef57, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp79ef57, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp79ef57, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp71f60d) { curl_setopt($sp79ef57, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp79ef57, CURLOPT_POST, 1); curl_setopt($sp79ef57, CURLOPT_POSTFIELDS, $sp28f462); } $sp28f462 = curl_exec($sp79ef57); if (curl_errno($sp79ef57)) { $sp6f9e69 = sprintf('curl[%s] error[%s]', $spe1037b, curl_errno($sp79ef57) . ':' . curl_error($sp79ef57)); $this->triggerError($sp6f9e69); } curl_close($sp79ef57); } else { if ($sp71f60d) { $sp3273f1 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp28f462) . '
', 'content' => $sp28f462, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp698693 = stream_context_create($sp3273f1); $sp28f462 = file_get_contents($spe1037b, false, $sp698693); } } return $sp28f462; } private function decode_response($spc7aec2, $spbc8b9e) { if (strlen($spbc8b9e) > 100) { return 0; } $spc8acd6 = array(); $sp5ceb91 = array(); $spb522ac = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp051e12 = 0; $sp8aad58 = 0; $sp48b0dc = str_split($spc7aec2); $spbe2daa = str_split($spbc8b9e); for ($spc25c52 = 0; $spc25c52 < strlen($spc7aec2); $spc25c52++) { $sp442f8b = $sp48b0dc[$spc25c52]; if (in_array($sp442f8b, $sp5ceb91)) { continue; } else { $sp4bfa1d = $spb522ac[$sp051e12 % 5]; array_push($sp5ceb91, $sp442f8b); $sp051e12++; $spc8acd6[$sp442f8b] = $sp4bfa1d; } } for ($sp333f47 = 0; $sp333f47 < strlen($spbc8b9e); $sp333f47++) { $sp8aad58 += $spc8acd6[$spbe2daa[$sp333f47]]; } $sp8aad58 = $sp8aad58 - $this->decodeRandBase($spc7aec2); return $sp8aad58; } private function get_x_pos_from_str($sp4cac62) { if (strlen($sp4cac62) != 5) { return 0; } $sp8c39bd = 0; $sp005fe1 = 200; $sp8c39bd = base_convert($sp4cac62, 16, 10); $spb6456a = $sp8c39bd % $sp005fe1; $spb6456a = $spb6456a < 40 ? 40 : $spb6456a; return $spb6456a; } private function get_failback_pic_ans($sp8bd883, $sp4ce2ac) { $spe15492 = substr(md5($sp8bd883), 0, 9); $sp3cdb8f = substr(md5($sp4ce2ac), 10, 9); $sp726b21 = ''; for ($spc25c52 = 0; $spc25c52 < 9; $spc25c52++) { if ($spc25c52 % 2 == 0) { $sp726b21 = $sp726b21 . $spe15492[$spc25c52]; } elseif ($spc25c52 % 2 == 1) { $sp726b21 = $sp726b21 . $sp3cdb8f[$spc25c52]; } } $spc45d2a = substr($sp726b21, 4, 5); $spc4ea56 = $this->get_x_pos_from_str($spc45d2a); return $spc4ea56; } private function decodeRandBase($spc7aec2) { $spc741e0 = substr($spc7aec2, 32, 2); $spb0e916 = array(); for ($spc25c52 = 0; $spc25c52 < strlen($spc741e0); $spc25c52++) { $sp241370 = ord($spc741e0[$spc25c52]); $spb6456a = $sp241370 > 57 ? $sp241370 - 87 : $sp241370 - 48; array_push($spb0e916, $spb6456a); } $sp188106 = $spb0e916['0'] * 36 + $spb0e916['1']; return $sp188106; } private function triggerError($sp6f9e69) { } }