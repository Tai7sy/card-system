<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp72e5d4, $sp6fb977) { $this->captcha_id = $sp72e5d4; $this->private_key = $sp6fb977; } public function pre_process($sp3546ff = null) { $sp4daeba = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp3546ff != null and is_string($sp3546ff)) { $sp4daeba = $sp4daeba . '&user_id=' . $sp3546ff; } $sp4c83b0 = $this->send_request($sp4daeba); if (strlen($sp4c83b0) != 32) { $this->failback_process(); return 0; } $this->success_process($sp4c83b0); return 1; } private function success_process($sp4c83b0) { $sp4c83b0 = md5($sp4c83b0 . $this->private_key); $sp33dd24 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp4c83b0); $this->response = $sp33dd24; } private function failback_process() { $sp8aabf6 = md5(rand(0, 100)); $spacfcd1 = md5(rand(0, 100)); $sp4c83b0 = $sp8aabf6 . substr($spacfcd1, 0, 2); $sp33dd24 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp4c83b0); $this->response = $sp33dd24; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp4c83b0, $spa82d20, $sp9437d4, $sp3546ff = null) { if (!$this->check_validate($sp4c83b0, $spa82d20)) { return 0; } $sp3a86ba = array('seccode' => $sp9437d4, 'sdk' => self::GT_SDK_VERSION); if ($sp3546ff != null and is_string($sp3546ff)) { $sp3a86ba['user_id'] = $sp3546ff; } $sp4daeba = 'http://api.geetest.com/validate.php'; $spb2363d = $this->post_request($sp4daeba, $sp3a86ba); if ($spb2363d == md5($sp9437d4)) { return 1; } else { if ($spb2363d == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp4c83b0, $spa82d20, $sp9437d4) { if ($spa82d20) { $sp849ede = explode('_', $spa82d20); try { $sp53fdb2 = $this->decode_response($sp4c83b0, $sp849ede['0']); $spa1e3d3 = $this->decode_response($sp4c83b0, $sp849ede['1']); $spddf77b = $this->decode_response($sp4c83b0, $sp849ede['2']); $sp9795c2 = $this->get_failback_pic_ans($spa1e3d3, $spddf77b); $sp2dd557 = abs($sp53fdb2 - $sp9795c2); } catch (\Exception $spd3b3eb) { return 1; } if ($sp2dd557 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp4c83b0, $spa82d20) { if (strlen($spa82d20) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp4c83b0) != $spa82d20) { return false; } return true; } private function send_request($sp4daeba) { if (function_exists('curl_exec')) { $spf40adf = curl_init(); curl_setopt($spf40adf, CURLOPT_URL, $sp4daeba); curl_setopt($spf40adf, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spf40adf, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spf40adf, CURLOPT_RETURNTRANSFER, 1); $sp3a86ba = curl_exec($spf40adf); if (curl_errno($spf40adf)) { $spbb1b45 = sprintf('curl[%s] error[%s]', $sp4daeba, curl_errno($spf40adf) . ':' . curl_error($spf40adf)); $this->triggerError($spbb1b45); } curl_close($spf40adf); } else { $sp54089c = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spcba2bc = stream_context_create($sp54089c); $sp3a86ba = file_get_contents($sp4daeba, false, $spcba2bc); } return $sp3a86ba; } private function post_request($sp4daeba, $sp3951a9 = '') { if (!$sp3951a9) { return false; } $sp3a86ba = http_build_query($sp3951a9); if (function_exists('curl_exec')) { $spf40adf = curl_init(); curl_setopt($spf40adf, CURLOPT_URL, $sp4daeba); curl_setopt($spf40adf, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spf40adf, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spf40adf, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp3951a9) { curl_setopt($spf40adf, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spf40adf, CURLOPT_POST, 1); curl_setopt($spf40adf, CURLOPT_POSTFIELDS, $sp3a86ba); } $sp3a86ba = curl_exec($spf40adf); if (curl_errno($spf40adf)) { $spbb1b45 = sprintf('curl[%s] error[%s]', $sp4daeba, curl_errno($spf40adf) . ':' . curl_error($spf40adf)); $this->triggerError($spbb1b45); } curl_close($spf40adf); } else { if ($sp3951a9) { $sp54089c = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp3a86ba) . '
', 'content' => $sp3a86ba, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spcba2bc = stream_context_create($sp54089c); $sp3a86ba = file_get_contents($sp4daeba, false, $spcba2bc); } } return $sp3a86ba; } private function decode_response($sp4c83b0, $sp31e5a2) { if (strlen($sp31e5a2) > 100) { return 0; } $sp2121a2 = array(); $sp050d49 = array(); $spc9a954 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spad28c0 = 0; $spa47d78 = 0; $sp89ce4a = str_split($sp4c83b0); $spbf0d0a = str_split($sp31e5a2); for ($sp59ca22 = 0; $sp59ca22 < strlen($sp4c83b0); $sp59ca22++) { $sp185233 = $sp89ce4a[$sp59ca22]; if (in_array($sp185233, $sp050d49)) { continue; } else { $sp849ede = $spc9a954[$spad28c0 % 5]; array_push($sp050d49, $sp185233); $spad28c0++; $sp2121a2[$sp185233] = $sp849ede; } } for ($spac0f00 = 0; $spac0f00 < strlen($sp31e5a2); $spac0f00++) { $spa47d78 += $sp2121a2[$spbf0d0a[$spac0f00]]; } $spa47d78 = $spa47d78 - $this->decodeRandBase($sp4c83b0); return $spa47d78; } private function get_x_pos_from_str($sp47fd5a) { if (strlen($sp47fd5a) != 5) { return 0; } $sp4c2bae = 0; $sp76bb9d = 200; $sp4c2bae = base_convert($sp47fd5a, 16, 10); $sp33dd24 = $sp4c2bae % $sp76bb9d; $sp33dd24 = $sp33dd24 < 40 ? 40 : $sp33dd24; return $sp33dd24; } private function get_failback_pic_ans($sp00bd4c, $sp8ed818) { $sp8be3be = substr(md5($sp00bd4c), 0, 9); $sp9b325f = substr(md5($sp8ed818), 10, 9); $sp3551ec = ''; for ($sp59ca22 = 0; $sp59ca22 < 9; $sp59ca22++) { if ($sp59ca22 % 2 == 0) { $sp3551ec = $sp3551ec . $sp8be3be[$sp59ca22]; } elseif ($sp59ca22 % 2 == 1) { $sp3551ec = $sp3551ec . $sp9b325f[$sp59ca22]; } } $spb8722c = substr($sp3551ec, 4, 5); $sp9795c2 = $this->get_x_pos_from_str($spb8722c); return $sp9795c2; } private function decodeRandBase($sp4c83b0) { $sp2a1c72 = substr($sp4c83b0, 32, 2); $spfa1642 = array(); for ($sp59ca22 = 0; $sp59ca22 < strlen($sp2a1c72); $sp59ca22++) { $sp2c2ea4 = ord($sp2a1c72[$sp59ca22]); $sp33dd24 = $sp2c2ea4 > 57 ? $sp2c2ea4 - 87 : $sp2c2ea4 - 48; array_push($spfa1642, $sp33dd24); } $spd1f587 = $spfa1642['0'] * 36 + $spfa1642['1']; return $spd1f587; } private function triggerError($spbb1b45) { } }