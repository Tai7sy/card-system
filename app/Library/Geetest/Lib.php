<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spf5f358, $sp65332d) { $this->captcha_id = $spf5f358; $this->private_key = $sp65332d; } public function pre_process($spe58da5 = null) { $sp09d604 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spe58da5 != null and is_string($spe58da5)) { $sp09d604 = $sp09d604 . '&user_id=' . $spe58da5; } $sp8df870 = $this->send_request($sp09d604); if (strlen($sp8df870) != 32) { $this->failback_process(); return 0; } $this->success_process($sp8df870); return 1; } private function success_process($sp8df870) { $sp8df870 = md5($sp8df870 . $this->private_key); $sp5c45d8 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp8df870); $this->response = $sp5c45d8; } private function failback_process() { $spffcd01 = md5(rand(0, 100)); $sp486af0 = md5(rand(0, 100)); $sp8df870 = $spffcd01 . substr($sp486af0, 0, 2); $sp5c45d8 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp8df870); $this->response = $sp5c45d8; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp8df870, $sp7f80a7, $spfc1a22, $spe58da5 = null) { if (!$this->check_validate($sp8df870, $sp7f80a7)) { return 0; } $sp931fd0 = array('seccode' => $spfc1a22, 'sdk' => self::GT_SDK_VERSION); if ($spe58da5 != null and is_string($spe58da5)) { $sp931fd0['user_id'] = $spe58da5; } $sp09d604 = 'http://api.geetest.com/validate.php'; $spa88008 = $this->post_request($sp09d604, $sp931fd0); if ($spa88008 == md5($spfc1a22)) { return 1; } else { if ($spa88008 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp8df870, $sp7f80a7, $spfc1a22) { if ($sp7f80a7) { $sp08e351 = explode('_', $sp7f80a7); try { $sp026141 = $this->decode_response($sp8df870, $sp08e351['0']); $sp21b18c = $this->decode_response($sp8df870, $sp08e351['1']); $sp9b31ea = $this->decode_response($sp8df870, $sp08e351['2']); $spdada19 = $this->get_failback_pic_ans($sp21b18c, $sp9b31ea); $sp9a8bb5 = abs($sp026141 - $spdada19); } catch (\Exception $spdfbc42) { return 1; } if ($sp9a8bb5 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp8df870, $sp7f80a7) { if (strlen($sp7f80a7) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp8df870) != $sp7f80a7) { return false; } return true; } private function send_request($sp09d604) { if (function_exists('curl_exec')) { $spbaddc2 = curl_init(); curl_setopt($spbaddc2, CURLOPT_URL, $sp09d604); curl_setopt($spbaddc2, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spbaddc2, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spbaddc2, CURLOPT_RETURNTRANSFER, 1); $sp931fd0 = curl_exec($spbaddc2); if (curl_errno($spbaddc2)) { $sp89bf05 = sprintf('curl[%s] error[%s]', $sp09d604, curl_errno($spbaddc2) . ':' . curl_error($spbaddc2)); $this->triggerError($sp89bf05); } curl_close($spbaddc2); } else { $sp987b39 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spfd4497 = stream_context_create($sp987b39); $sp931fd0 = file_get_contents($sp09d604, false, $spfd4497); } return $sp931fd0; } private function post_request($sp09d604, $spe5686d = '') { if (!$spe5686d) { return false; } $sp931fd0 = http_build_query($spe5686d); if (function_exists('curl_exec')) { $spbaddc2 = curl_init(); curl_setopt($spbaddc2, CURLOPT_URL, $sp09d604); curl_setopt($spbaddc2, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spbaddc2, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spbaddc2, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spe5686d) { curl_setopt($spbaddc2, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spbaddc2, CURLOPT_POST, 1); curl_setopt($spbaddc2, CURLOPT_POSTFIELDS, $sp931fd0); } $sp931fd0 = curl_exec($spbaddc2); if (curl_errno($spbaddc2)) { $sp89bf05 = sprintf('curl[%s] error[%s]', $sp09d604, curl_errno($spbaddc2) . ':' . curl_error($spbaddc2)); $this->triggerError($sp89bf05); } curl_close($spbaddc2); } else { if ($spe5686d) { $sp987b39 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp931fd0) . '
', 'content' => $sp931fd0, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spfd4497 = stream_context_create($sp987b39); $sp931fd0 = file_get_contents($sp09d604, false, $spfd4497); } } return $sp931fd0; } private function decode_response($sp8df870, $sp3f03dd) { if (strlen($sp3f03dd) > 100) { return 0; } $sp10da54 = array(); $sp19c071 = array(); $spca1f0a = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spc2ebcd = 0; $sp230d13 = 0; $spe92528 = str_split($sp8df870); $sp22fba6 = str_split($sp3f03dd); for ($spa4cc2a = 0; $spa4cc2a < strlen($sp8df870); $spa4cc2a++) { $sp222058 = $spe92528[$spa4cc2a]; if (in_array($sp222058, $sp19c071)) { continue; } else { $sp08e351 = $spca1f0a[$spc2ebcd % 5]; array_push($sp19c071, $sp222058); $spc2ebcd++; $sp10da54[$sp222058] = $sp08e351; } } for ($sp3de5c6 = 0; $sp3de5c6 < strlen($sp3f03dd); $sp3de5c6++) { $sp230d13 += $sp10da54[$sp22fba6[$sp3de5c6]]; } $sp230d13 = $sp230d13 - $this->decodeRandBase($sp8df870); return $sp230d13; } private function get_x_pos_from_str($spb1887c) { if (strlen($spb1887c) != 5) { return 0; } $spd0d1b2 = 0; $sp68faf7 = 200; $spd0d1b2 = base_convert($spb1887c, 16, 10); $sp5c45d8 = $spd0d1b2 % $sp68faf7; $sp5c45d8 = $sp5c45d8 < 40 ? 40 : $sp5c45d8; return $sp5c45d8; } private function get_failback_pic_ans($spc07559, $spdb3727) { $spf24fea = substr(md5($spc07559), 0, 9); $sp291ae0 = substr(md5($spdb3727), 10, 9); $sp5a9ad4 = ''; for ($spa4cc2a = 0; $spa4cc2a < 9; $spa4cc2a++) { if ($spa4cc2a % 2 == 0) { $sp5a9ad4 = $sp5a9ad4 . $spf24fea[$spa4cc2a]; } elseif ($spa4cc2a % 2 == 1) { $sp5a9ad4 = $sp5a9ad4 . $sp291ae0[$spa4cc2a]; } } $sp5ebaf1 = substr($sp5a9ad4, 4, 5); $spdada19 = $this->get_x_pos_from_str($sp5ebaf1); return $spdada19; } private function decodeRandBase($sp8df870) { $spbafb9f = substr($sp8df870, 32, 2); $sp9b7f14 = array(); for ($spa4cc2a = 0; $spa4cc2a < strlen($spbafb9f); $spa4cc2a++) { $spe841f5 = ord($spbafb9f[$spa4cc2a]); $sp5c45d8 = $spe841f5 > 57 ? $spe841f5 - 87 : $spe841f5 - 48; array_push($sp9b7f14, $sp5c45d8); } $sp88575a = $sp9b7f14['0'] * 36 + $sp9b7f14['1']; return $sp88575a; } private function triggerError($sp89bf05) { } }