<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spb40eab, $spe57db5) { $this->captcha_id = $spb40eab; $this->private_key = $spe57db5; } public function pre_process($spfa021e = null) { $sp3db1b2 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spfa021e != null and is_string($spfa021e)) { $sp3db1b2 = $sp3db1b2 . '&user_id=' . $spfa021e; } $spc94e0a = $this->send_request($sp3db1b2); if (strlen($spc94e0a) != 32) { $this->failback_process(); return 0; } $this->success_process($spc94e0a); return 1; } private function success_process($spc94e0a) { $spc94e0a = md5($spc94e0a . $this->private_key); $spbbda25 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spc94e0a); $this->response = $spbbda25; } private function failback_process() { $spd8f9a7 = md5(rand(0, 100)); $sp42225e = md5(rand(0, 100)); $spc94e0a = $spd8f9a7 . substr($sp42225e, 0, 2); $spbbda25 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spc94e0a); $this->response = $spbbda25; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spc94e0a, $spca2c04, $sp6b2070, $spfa021e = null) { if (!$this->check_validate($spc94e0a, $spca2c04)) { return 0; } $sp5aa598 = array('seccode' => $sp6b2070, 'sdk' => self::GT_SDK_VERSION); if ($spfa021e != null and is_string($spfa021e)) { $sp5aa598['user_id'] = $spfa021e; } $sp3db1b2 = 'http://api.geetest.com/validate.php'; $spb9d297 = $this->post_request($sp3db1b2, $sp5aa598); if ($spb9d297 == md5($sp6b2070)) { return 1; } else { if ($spb9d297 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spc94e0a, $spca2c04, $sp6b2070) { if ($spca2c04) { $spb914e6 = explode('_', $spca2c04); try { $sp9f5c31 = $this->decode_response($spc94e0a, $spb914e6['0']); $spf1db98 = $this->decode_response($spc94e0a, $spb914e6['1']); $spba55ad = $this->decode_response($spc94e0a, $spb914e6['2']); $sped666b = $this->get_failback_pic_ans($spf1db98, $spba55ad); $sp777a44 = abs($sp9f5c31 - $sped666b); } catch (\Exception $sp81eee8) { return 1; } if ($sp777a44 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spc94e0a, $spca2c04) { if (strlen($spca2c04) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spc94e0a) != $spca2c04) { return false; } return true; } private function send_request($sp3db1b2) { if (function_exists('curl_exec')) { $sp9b0943 = curl_init(); curl_setopt($sp9b0943, CURLOPT_URL, $sp3db1b2); curl_setopt($sp9b0943, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp9b0943, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp9b0943, CURLOPT_RETURNTRANSFER, 1); $sp5aa598 = curl_exec($sp9b0943); if (curl_errno($sp9b0943)) { $spae8f1a = sprintf('curl[%s] error[%s]', $sp3db1b2, curl_errno($sp9b0943) . ':' . curl_error($sp9b0943)); $this->triggerError($spae8f1a); } curl_close($sp9b0943); } else { $spcef4b3 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp1a1db3 = stream_context_create($spcef4b3); $sp5aa598 = file_get_contents($sp3db1b2, false, $sp1a1db3); } return $sp5aa598; } private function post_request($sp3db1b2, $sp50d070 = '') { if (!$sp50d070) { return false; } $sp5aa598 = http_build_query($sp50d070); if (function_exists('curl_exec')) { $sp9b0943 = curl_init(); curl_setopt($sp9b0943, CURLOPT_URL, $sp3db1b2); curl_setopt($sp9b0943, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp9b0943, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp9b0943, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp50d070) { curl_setopt($sp9b0943, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp9b0943, CURLOPT_POST, 1); curl_setopt($sp9b0943, CURLOPT_POSTFIELDS, $sp5aa598); } $sp5aa598 = curl_exec($sp9b0943); if (curl_errno($sp9b0943)) { $spae8f1a = sprintf('curl[%s] error[%s]', $sp3db1b2, curl_errno($sp9b0943) . ':' . curl_error($sp9b0943)); $this->triggerError($spae8f1a); } curl_close($sp9b0943); } else { if ($sp50d070) { $spcef4b3 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp5aa598) . '
', 'content' => $sp5aa598, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp1a1db3 = stream_context_create($spcef4b3); $sp5aa598 = file_get_contents($sp3db1b2, false, $sp1a1db3); } } return $sp5aa598; } private function decode_response($spc94e0a, $sp9ad127) { if (strlen($sp9ad127) > 100) { return 0; } $sp1ed429 = array(); $spcbc8da = array(); $sp8f6ac5 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spfdb02a = 0; $sp32d1c7 = 0; $sp7d0c7d = str_split($spc94e0a); $spbac1e7 = str_split($sp9ad127); for ($spea591f = 0; $spea591f < strlen($spc94e0a); $spea591f++) { $sp4a9ec3 = $sp7d0c7d[$spea591f]; if (in_array($sp4a9ec3, $spcbc8da)) { continue; } else { $spb914e6 = $sp8f6ac5[$spfdb02a % 5]; array_push($spcbc8da, $sp4a9ec3); $spfdb02a++; $sp1ed429[$sp4a9ec3] = $spb914e6; } } for ($spabe616 = 0; $spabe616 < strlen($sp9ad127); $spabe616++) { $sp32d1c7 += $sp1ed429[$spbac1e7[$spabe616]]; } $sp32d1c7 = $sp32d1c7 - $this->decodeRandBase($spc94e0a); return $sp32d1c7; } private function get_x_pos_from_str($spdcdf3c) { if (strlen($spdcdf3c) != 5) { return 0; } $sp13c4c5 = 0; $spf6de2c = 200; $sp13c4c5 = base_convert($spdcdf3c, 16, 10); $spbbda25 = $sp13c4c5 % $spf6de2c; $spbbda25 = $spbbda25 < 40 ? 40 : $spbbda25; return $spbbda25; } private function get_failback_pic_ans($sp0aacbd, $spc3821d) { $spf4f898 = substr(md5($sp0aacbd), 0, 9); $spb62152 = substr(md5($spc3821d), 10, 9); $spfe2428 = ''; for ($spea591f = 0; $spea591f < 9; $spea591f++) { if ($spea591f % 2 == 0) { $spfe2428 = $spfe2428 . $spf4f898[$spea591f]; } elseif ($spea591f % 2 == 1) { $spfe2428 = $spfe2428 . $spb62152[$spea591f]; } } $sp08851d = substr($spfe2428, 4, 5); $sped666b = $this->get_x_pos_from_str($sp08851d); return $sped666b; } private function decodeRandBase($spc94e0a) { $sp457d29 = substr($spc94e0a, 32, 2); $sp2ad775 = array(); for ($spea591f = 0; $spea591f < strlen($sp457d29); $spea591f++) { $spd053a4 = ord($sp457d29[$spea591f]); $spbbda25 = $spd053a4 > 57 ? $spd053a4 - 87 : $spd053a4 - 48; array_push($sp2ad775, $spbbda25); } $sp3a31d7 = $sp2ad775['0'] * 36 + $sp2ad775['1']; return $sp3a31d7; } private function triggerError($spae8f1a) { } }