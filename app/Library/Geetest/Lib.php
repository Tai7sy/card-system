<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp479a46, $spcbc983) { $this->captcha_id = $sp479a46; $this->private_key = $spcbc983; } public function pre_process($spfaef2f = null) { $sp3ae187 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spfaef2f != null and is_string($spfaef2f)) { $sp3ae187 = $sp3ae187 . '&user_id=' . $spfaef2f; } $sp238fb6 = $this->send_request($sp3ae187); if (strlen($sp238fb6) != 32) { $this->failback_process(); return 0; } $this->success_process($sp238fb6); return 1; } private function success_process($sp238fb6) { $sp238fb6 = md5($sp238fb6 . $this->private_key); $spb34b01 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp238fb6); $this->response = $spb34b01; } private function failback_process() { $spfc92e7 = md5(rand(0, 100)); $spd78bac = md5(rand(0, 100)); $sp238fb6 = $spfc92e7 . substr($spd78bac, 0, 2); $spb34b01 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp238fb6); $this->response = $spb34b01; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp238fb6, $spf88ac7, $sp102a68, $spfaef2f = null) { if (!$this->check_validate($sp238fb6, $spf88ac7)) { return 0; } $spcb019a = array('seccode' => $sp102a68, 'sdk' => self::GT_SDK_VERSION); if ($spfaef2f != null and is_string($spfaef2f)) { $spcb019a['user_id'] = $spfaef2f; } $sp3ae187 = 'http://api.geetest.com/validate.php'; $spc63e87 = $this->post_request($sp3ae187, $spcb019a); if ($spc63e87 == md5($sp102a68)) { return 1; } else { if ($spc63e87 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp238fb6, $spf88ac7, $sp102a68) { if ($spf88ac7) { $spc82d84 = explode('_', $spf88ac7); try { $sp35017f = $this->decode_response($sp238fb6, $spc82d84['0']); $sp3d5639 = $this->decode_response($sp238fb6, $spc82d84['1']); $sp359a63 = $this->decode_response($sp238fb6, $spc82d84['2']); $sp291be5 = $this->get_failback_pic_ans($sp3d5639, $sp359a63); $sp7e8ab7 = abs($sp35017f - $sp291be5); } catch (\Exception $spece20f) { return 1; } if ($sp7e8ab7 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp238fb6, $spf88ac7) { if (strlen($spf88ac7) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp238fb6) != $spf88ac7) { return false; } return true; } private function send_request($sp3ae187) { if (function_exists('curl_exec')) { $sp4e752c = curl_init(); curl_setopt($sp4e752c, CURLOPT_URL, $sp3ae187); curl_setopt($sp4e752c, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp4e752c, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp4e752c, CURLOPT_RETURNTRANSFER, 1); $spcb019a = curl_exec($sp4e752c); if (curl_errno($sp4e752c)) { $sp858775 = sprintf('curl[%s] error[%s]', $sp3ae187, curl_errno($sp4e752c) . ':' . curl_error($sp4e752c)); $this->triggerError($sp858775); } curl_close($sp4e752c); } else { $sp4fabd4 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp78d529 = stream_context_create($sp4fabd4); $spcb019a = file_get_contents($sp3ae187, false, $sp78d529); } return $spcb019a; } private function post_request($sp3ae187, $spd45814 = '') { if (!$spd45814) { return false; } $spcb019a = http_build_query($spd45814); if (function_exists('curl_exec')) { $sp4e752c = curl_init(); curl_setopt($sp4e752c, CURLOPT_URL, $sp3ae187); curl_setopt($sp4e752c, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp4e752c, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp4e752c, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spd45814) { curl_setopt($sp4e752c, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp4e752c, CURLOPT_POST, 1); curl_setopt($sp4e752c, CURLOPT_POSTFIELDS, $spcb019a); } $spcb019a = curl_exec($sp4e752c); if (curl_errno($sp4e752c)) { $sp858775 = sprintf('curl[%s] error[%s]', $sp3ae187, curl_errno($sp4e752c) . ':' . curl_error($sp4e752c)); $this->triggerError($sp858775); } curl_close($sp4e752c); } else { if ($spd45814) { $sp4fabd4 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spcb019a) . '
', 'content' => $spcb019a, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp78d529 = stream_context_create($sp4fabd4); $spcb019a = file_get_contents($sp3ae187, false, $sp78d529); } } return $spcb019a; } private function decode_response($sp238fb6, $spd6e61f) { if (strlen($spd6e61f) > 100) { return 0; } $sp7b7024 = array(); $sp2e0177 = array(); $speae58d = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp058528 = 0; $sp7098d5 = 0; $sp27a17c = str_split($sp238fb6); $spdfa8c2 = str_split($spd6e61f); for ($spb75665 = 0; $spb75665 < strlen($sp238fb6); $spb75665++) { $sp338f71 = $sp27a17c[$spb75665]; if (in_array($sp338f71, $sp2e0177)) { continue; } else { $spc82d84 = $speae58d[$sp058528 % 5]; array_push($sp2e0177, $sp338f71); $sp058528++; $sp7b7024[$sp338f71] = $spc82d84; } } for ($spd0447e = 0; $spd0447e < strlen($spd6e61f); $spd0447e++) { $sp7098d5 += $sp7b7024[$spdfa8c2[$spd0447e]]; } $sp7098d5 = $sp7098d5 - $this->decodeRandBase($sp238fb6); return $sp7098d5; } private function get_x_pos_from_str($sp8673f9) { if (strlen($sp8673f9) != 5) { return 0; } $sp006f75 = 0; $sp342805 = 200; $sp006f75 = base_convert($sp8673f9, 16, 10); $spb34b01 = $sp006f75 % $sp342805; $spb34b01 = $spb34b01 < 40 ? 40 : $spb34b01; return $spb34b01; } private function get_failback_pic_ans($spe90e03, $sp1dd2c5) { $sp585f92 = substr(md5($spe90e03), 0, 9); $sp5f7496 = substr(md5($sp1dd2c5), 10, 9); $spcc5db9 = ''; for ($spb75665 = 0; $spb75665 < 9; $spb75665++) { if ($spb75665 % 2 == 0) { $spcc5db9 = $spcc5db9 . $sp585f92[$spb75665]; } elseif ($spb75665 % 2 == 1) { $spcc5db9 = $spcc5db9 . $sp5f7496[$spb75665]; } } $sp7ec1a7 = substr($spcc5db9, 4, 5); $sp291be5 = $this->get_x_pos_from_str($sp7ec1a7); return $sp291be5; } private function decodeRandBase($sp238fb6) { $spcf59df = substr($sp238fb6, 32, 2); $sp2b33f6 = array(); for ($spb75665 = 0; $spb75665 < strlen($spcf59df); $spb75665++) { $space750 = ord($spcf59df[$spb75665]); $spb34b01 = $space750 > 57 ? $space750 - 87 : $space750 - 48; array_push($sp2b33f6, $spb34b01); } $spfa8087 = $sp2b33f6['0'] * 36 + $sp2b33f6['1']; return $spfa8087; } private function triggerError($sp858775) { } }