<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp51d48d, $spdb68db) { $this->captcha_id = $sp51d48d; $this->private_key = $spdb68db; } public function pre_process($sp15a746 = null) { $spd2457c = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp15a746 != null and is_string($sp15a746)) { $spd2457c = $spd2457c . '&user_id=' . $sp15a746; } $spd2db0d = $this->send_request($spd2457c); if (strlen($spd2db0d) != 32) { $this->failback_process(); return 0; } $this->success_process($spd2db0d); return 1; } private function success_process($spd2db0d) { $spd2db0d = md5($spd2db0d . $this->private_key); $spb72f32 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spd2db0d); $this->response = $spb72f32; } private function failback_process() { $sp0eb557 = md5(rand(0, 100)); $spf7d3c1 = md5(rand(0, 100)); $spd2db0d = $sp0eb557 . substr($spf7d3c1, 0, 2); $spb72f32 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spd2db0d); $this->response = $spb72f32; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spd2db0d, $sp58e4bb, $sp8160b3, $sp15a746 = null) { if (!$this->check_validate($spd2db0d, $sp58e4bb)) { return 0; } $sp6fd648 = array('seccode' => $sp8160b3, 'sdk' => self::GT_SDK_VERSION); if ($sp15a746 != null and is_string($sp15a746)) { $sp6fd648['user_id'] = $sp15a746; } $spd2457c = 'http://api.geetest.com/validate.php'; $spd40723 = $this->post_request($spd2457c, $sp6fd648); if ($spd40723 == md5($sp8160b3)) { return 1; } else { if ($spd40723 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spd2db0d, $sp58e4bb, $sp8160b3) { if ($sp58e4bb) { $sp8b9401 = explode('_', $sp58e4bb); try { $sp41cfc8 = $this->decode_response($spd2db0d, $sp8b9401['0']); $sp2224cd = $this->decode_response($spd2db0d, $sp8b9401['1']); $sp7a9fb4 = $this->decode_response($spd2db0d, $sp8b9401['2']); $sp4f577f = $this->get_failback_pic_ans($sp2224cd, $sp7a9fb4); $sp5eeb86 = abs($sp41cfc8 - $sp4f577f); } catch (\Exception $sp3f4aab) { return 1; } if ($sp5eeb86 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spd2db0d, $sp58e4bb) { if (strlen($sp58e4bb) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spd2db0d) != $sp58e4bb) { return false; } return true; } private function send_request($spd2457c) { if (function_exists('curl_exec')) { $sp9f83d6 = curl_init(); curl_setopt($sp9f83d6, CURLOPT_URL, $spd2457c); curl_setopt($sp9f83d6, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp9f83d6, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp9f83d6, CURLOPT_RETURNTRANSFER, 1); $sp6fd648 = curl_exec($sp9f83d6); if (curl_errno($sp9f83d6)) { $sp6b9990 = sprintf('curl[%s] error[%s]', $spd2457c, curl_errno($sp9f83d6) . ':' . curl_error($sp9f83d6)); $this->triggerError($sp6b9990); } curl_close($sp9f83d6); } else { $spe3a26a = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp3d7e0d = stream_context_create($spe3a26a); $sp6fd648 = file_get_contents($spd2457c, false, $sp3d7e0d); } return $sp6fd648; } private function post_request($spd2457c, $spe4b65a = '') { if (!$spe4b65a) { return false; } $sp6fd648 = http_build_query($spe4b65a); if (function_exists('curl_exec')) { $sp9f83d6 = curl_init(); curl_setopt($sp9f83d6, CURLOPT_URL, $spd2457c); curl_setopt($sp9f83d6, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp9f83d6, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp9f83d6, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spe4b65a) { curl_setopt($sp9f83d6, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp9f83d6, CURLOPT_POST, 1); curl_setopt($sp9f83d6, CURLOPT_POSTFIELDS, $sp6fd648); } $sp6fd648 = curl_exec($sp9f83d6); if (curl_errno($sp9f83d6)) { $sp6b9990 = sprintf('curl[%s] error[%s]', $spd2457c, curl_errno($sp9f83d6) . ':' . curl_error($sp9f83d6)); $this->triggerError($sp6b9990); } curl_close($sp9f83d6); } else { if ($spe4b65a) { $spe3a26a = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp6fd648) . '
', 'content' => $sp6fd648, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp3d7e0d = stream_context_create($spe3a26a); $sp6fd648 = file_get_contents($spd2457c, false, $sp3d7e0d); } } return $sp6fd648; } private function decode_response($spd2db0d, $sp29fcf1) { if (strlen($sp29fcf1) > 100) { return 0; } $spf1241f = array(); $sp9a3274 = array(); $sp6057d5 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spdd51cd = 0; $spab3a3a = 0; $sp8978e5 = str_split($spd2db0d); $spe3f6b1 = str_split($sp29fcf1); for ($sp6b283c = 0; $sp6b283c < strlen($spd2db0d); $sp6b283c++) { $sp10eb73 = $sp8978e5[$sp6b283c]; if (in_array($sp10eb73, $sp9a3274)) { continue; } else { $sp8b9401 = $sp6057d5[$spdd51cd % 5]; array_push($sp9a3274, $sp10eb73); $spdd51cd++; $spf1241f[$sp10eb73] = $sp8b9401; } } for ($spc12a13 = 0; $spc12a13 < strlen($sp29fcf1); $spc12a13++) { $spab3a3a += $spf1241f[$spe3f6b1[$spc12a13]]; } $spab3a3a = $spab3a3a - $this->decodeRandBase($spd2db0d); return $spab3a3a; } private function get_x_pos_from_str($sp7b07dd) { if (strlen($sp7b07dd) != 5) { return 0; } $sp5707e7 = 0; $sp469ed5 = 200; $sp5707e7 = base_convert($sp7b07dd, 16, 10); $spb72f32 = $sp5707e7 % $sp469ed5; $spb72f32 = $spb72f32 < 40 ? 40 : $spb72f32; return $spb72f32; } private function get_failback_pic_ans($sp2435cc, $spdfae7a) { $sp9772e3 = substr(md5($sp2435cc), 0, 9); $spd42798 = substr(md5($spdfae7a), 10, 9); $sp4762b8 = ''; for ($sp6b283c = 0; $sp6b283c < 9; $sp6b283c++) { if ($sp6b283c % 2 == 0) { $sp4762b8 = $sp4762b8 . $sp9772e3[$sp6b283c]; } elseif ($sp6b283c % 2 == 1) { $sp4762b8 = $sp4762b8 . $spd42798[$sp6b283c]; } } $sp83ed8d = substr($sp4762b8, 4, 5); $sp4f577f = $this->get_x_pos_from_str($sp83ed8d); return $sp4f577f; } private function decodeRandBase($spd2db0d) { $sp469fe5 = substr($spd2db0d, 32, 2); $spcb07a3 = array(); for ($sp6b283c = 0; $sp6b283c < strlen($sp469fe5); $sp6b283c++) { $sp7c4609 = ord($sp469fe5[$sp6b283c]); $spb72f32 = $sp7c4609 > 57 ? $sp7c4609 - 87 : $sp7c4609 - 48; array_push($spcb07a3, $spb72f32); } $spbe38a6 = $spcb07a3['0'] * 36 + $spcb07a3['1']; return $spbe38a6; } private function triggerError($sp6b9990) { } }