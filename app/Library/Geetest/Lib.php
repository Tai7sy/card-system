<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp165532, $sp1fc0a1) { $this->captcha_id = $sp165532; $this->private_key = $sp1fc0a1; } public function pre_process($spe0b9a0 = null) { $spfaab7a = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spe0b9a0 != null and is_string($spe0b9a0)) { $spfaab7a = $spfaab7a . '&user_id=' . $spe0b9a0; } $sp1d470d = $this->send_request($spfaab7a); if (strlen($sp1d470d) != 32) { $this->failback_process(); return 0; } $this->success_process($sp1d470d); return 1; } private function success_process($sp1d470d) { $sp1d470d = md5($sp1d470d . $this->private_key); $spae8ac8 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp1d470d); $this->response = $spae8ac8; } private function failback_process() { $sp39798b = md5(rand(0, 100)); $sp8c8b08 = md5(rand(0, 100)); $sp1d470d = $sp39798b . substr($sp8c8b08, 0, 2); $spae8ac8 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp1d470d); $this->response = $spae8ac8; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp1d470d, $sp360a39, $sp02bd85, $spe0b9a0 = null) { if (!$this->check_validate($sp1d470d, $sp360a39)) { return 0; } $spfe8869 = array('seccode' => $sp02bd85, 'sdk' => self::GT_SDK_VERSION); if ($spe0b9a0 != null and is_string($spe0b9a0)) { $spfe8869['user_id'] = $spe0b9a0; } $spfaab7a = 'http://api.geetest.com/validate.php'; $spcd6d96 = $this->post_request($spfaab7a, $spfe8869); if ($spcd6d96 == md5($sp02bd85)) { return 1; } else { if ($spcd6d96 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp1d470d, $sp360a39, $sp02bd85) { if ($sp360a39) { $spa60c0f = explode('_', $sp360a39); try { $sp9c8dd3 = $this->decode_response($sp1d470d, $spa60c0f['0']); $spe87382 = $this->decode_response($sp1d470d, $spa60c0f['1']); $sp66d9b9 = $this->decode_response($sp1d470d, $spa60c0f['2']); $sp22b090 = $this->get_failback_pic_ans($spe87382, $sp66d9b9); $sp4a2512 = abs($sp9c8dd3 - $sp22b090); } catch (\Exception $spc22b6c) { return 1; } if ($sp4a2512 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp1d470d, $sp360a39) { if (strlen($sp360a39) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp1d470d) != $sp360a39) { return false; } return true; } private function send_request($spfaab7a) { if (function_exists('curl_exec')) { $sp6e82aa = curl_init(); curl_setopt($sp6e82aa, CURLOPT_URL, $spfaab7a); curl_setopt($sp6e82aa, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp6e82aa, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp6e82aa, CURLOPT_RETURNTRANSFER, 1); $spfe8869 = curl_exec($sp6e82aa); if (curl_errno($sp6e82aa)) { $sp617c49 = sprintf('curl[%s] error[%s]', $spfaab7a, curl_errno($sp6e82aa) . ':' . curl_error($sp6e82aa)); $this->triggerError($sp617c49); } curl_close($sp6e82aa); } else { $sp00c4b1 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp2a2524 = stream_context_create($sp00c4b1); $spfe8869 = file_get_contents($spfaab7a, false, $sp2a2524); } return $spfe8869; } private function post_request($spfaab7a, $sp4f28fb = '') { if (!$sp4f28fb) { return false; } $spfe8869 = http_build_query($sp4f28fb); if (function_exists('curl_exec')) { $sp6e82aa = curl_init(); curl_setopt($sp6e82aa, CURLOPT_URL, $spfaab7a); curl_setopt($sp6e82aa, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp6e82aa, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp6e82aa, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp4f28fb) { curl_setopt($sp6e82aa, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp6e82aa, CURLOPT_POST, 1); curl_setopt($sp6e82aa, CURLOPT_POSTFIELDS, $spfe8869); } $spfe8869 = curl_exec($sp6e82aa); if (curl_errno($sp6e82aa)) { $sp617c49 = sprintf('curl[%s] error[%s]', $spfaab7a, curl_errno($sp6e82aa) . ':' . curl_error($sp6e82aa)); $this->triggerError($sp617c49); } curl_close($sp6e82aa); } else { if ($sp4f28fb) { $sp00c4b1 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spfe8869) . '
', 'content' => $spfe8869, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp2a2524 = stream_context_create($sp00c4b1); $spfe8869 = file_get_contents($spfaab7a, false, $sp2a2524); } } return $spfe8869; } private function decode_response($sp1d470d, $sp105708) { if (strlen($sp105708) > 100) { return 0; } $sp308327 = array(); $spb1713e = array(); $spb4234f = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp951cdc = 0; $sp6584c8 = 0; $sp1c2ac4 = str_split($sp1d470d); $spf08039 = str_split($sp105708); for ($sp558f52 = 0; $sp558f52 < strlen($sp1d470d); $sp558f52++) { $spf1bfa9 = $sp1c2ac4[$sp558f52]; if (in_array($spf1bfa9, $spb1713e)) { continue; } else { $spa60c0f = $spb4234f[$sp951cdc % 5]; array_push($spb1713e, $spf1bfa9); $sp951cdc++; $sp308327[$spf1bfa9] = $spa60c0f; } } for ($sp0d2359 = 0; $sp0d2359 < strlen($sp105708); $sp0d2359++) { $sp6584c8 += $sp308327[$spf08039[$sp0d2359]]; } $sp6584c8 = $sp6584c8 - $this->decodeRandBase($sp1d470d); return $sp6584c8; } private function get_x_pos_from_str($spd379ca) { if (strlen($spd379ca) != 5) { return 0; } $spb02672 = 0; $spb71a92 = 200; $spb02672 = base_convert($spd379ca, 16, 10); $spae8ac8 = $spb02672 % $spb71a92; $spae8ac8 = $spae8ac8 < 40 ? 40 : $spae8ac8; return $spae8ac8; } private function get_failback_pic_ans($spf0d4ec, $spca2a52) { $sp342b38 = substr(md5($spf0d4ec), 0, 9); $sp1c48bf = substr(md5($spca2a52), 10, 9); $sp96097a = ''; for ($sp558f52 = 0; $sp558f52 < 9; $sp558f52++) { if ($sp558f52 % 2 == 0) { $sp96097a = $sp96097a . $sp342b38[$sp558f52]; } elseif ($sp558f52 % 2 == 1) { $sp96097a = $sp96097a . $sp1c48bf[$sp558f52]; } } $sp713ce6 = substr($sp96097a, 4, 5); $sp22b090 = $this->get_x_pos_from_str($sp713ce6); return $sp22b090; } private function decodeRandBase($sp1d470d) { $sp2a5b17 = substr($sp1d470d, 32, 2); $sp70f42f = array(); for ($sp558f52 = 0; $sp558f52 < strlen($sp2a5b17); $sp558f52++) { $spec4152 = ord($sp2a5b17[$sp558f52]); $spae8ac8 = $spec4152 > 57 ? $spec4152 - 87 : $spec4152 - 48; array_push($sp70f42f, $spae8ac8); } $spe6f0ff = $sp70f42f['0'] * 36 + $sp70f42f['1']; return $spe6f0ff; } private function triggerError($sp617c49) { } }