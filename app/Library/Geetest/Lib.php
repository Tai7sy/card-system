<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp7e8257, $spa7e139) { $this->captcha_id = $sp7e8257; $this->private_key = $spa7e139; } public function pre_process($sp45cf7f = null) { $spc2ee22 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp45cf7f != null and is_string($sp45cf7f)) { $spc2ee22 = $spc2ee22 . '&user_id=' . $sp45cf7f; } $sp51b626 = $this->send_request($spc2ee22); if (strlen($sp51b626) != 32) { $this->failback_process(); return 0; } $this->success_process($sp51b626); return 1; } private function success_process($sp51b626) { $sp51b626 = md5($sp51b626 . $this->private_key); $spa99c85 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp51b626); $this->response = $spa99c85; } private function failback_process() { $spe933bf = md5(rand(0, 100)); $spff5b50 = md5(rand(0, 100)); $sp51b626 = $spe933bf . substr($spff5b50, 0, 2); $spa99c85 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp51b626); $this->response = $spa99c85; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp51b626, $sp160ad5, $sp3631ad, $sp45cf7f = null) { if (!$this->check_validate($sp51b626, $sp160ad5)) { return 0; } $spdcb2c5 = array('seccode' => $sp3631ad, 'sdk' => self::GT_SDK_VERSION); if ($sp45cf7f != null and is_string($sp45cf7f)) { $spdcb2c5['user_id'] = $sp45cf7f; } $spc2ee22 = 'http://api.geetest.com/validate.php'; $sp117f23 = $this->post_request($spc2ee22, $spdcb2c5); if ($sp117f23 == md5($sp3631ad)) { return 1; } else { if ($sp117f23 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp51b626, $sp160ad5, $sp3631ad) { if ($sp160ad5) { $spd6f3d8 = explode('_', $sp160ad5); try { $sp0cc3f5 = $this->decode_response($sp51b626, $spd6f3d8['0']); $sp739eb3 = $this->decode_response($sp51b626, $spd6f3d8['1']); $sp1a9519 = $this->decode_response($sp51b626, $spd6f3d8['2']); $spd8cd3b = $this->get_failback_pic_ans($sp739eb3, $sp1a9519); $sp02a517 = abs($sp0cc3f5 - $spd8cd3b); } catch (\Exception $sp696863) { return 1; } if ($sp02a517 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp51b626, $sp160ad5) { if (strlen($sp160ad5) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp51b626) != $sp160ad5) { return false; } return true; } private function send_request($spc2ee22) { if (function_exists('curl_exec')) { $spc2dc02 = curl_init(); curl_setopt($spc2dc02, CURLOPT_URL, $spc2ee22); curl_setopt($spc2dc02, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spc2dc02, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spc2dc02, CURLOPT_RETURNTRANSFER, 1); $spdcb2c5 = curl_exec($spc2dc02); if (curl_errno($spc2dc02)) { $sp7aeb1c = sprintf('curl[%s] error[%s]', $spc2ee22, curl_errno($spc2dc02) . ':' . curl_error($spc2dc02)); $this->triggerError($sp7aeb1c); } curl_close($spc2dc02); } else { $sp73c35b = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp3466c1 = stream_context_create($sp73c35b); $spdcb2c5 = file_get_contents($spc2ee22, false, $sp3466c1); } return $spdcb2c5; } private function post_request($spc2ee22, $spf9523a = '') { if (!$spf9523a) { return false; } $spdcb2c5 = http_build_query($spf9523a); if (function_exists('curl_exec')) { $spc2dc02 = curl_init(); curl_setopt($spc2dc02, CURLOPT_URL, $spc2ee22); curl_setopt($spc2dc02, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spc2dc02, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spc2dc02, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spf9523a) { curl_setopt($spc2dc02, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spc2dc02, CURLOPT_POST, 1); curl_setopt($spc2dc02, CURLOPT_POSTFIELDS, $spdcb2c5); } $spdcb2c5 = curl_exec($spc2dc02); if (curl_errno($spc2dc02)) { $sp7aeb1c = sprintf('curl[%s] error[%s]', $spc2ee22, curl_errno($spc2dc02) . ':' . curl_error($spc2dc02)); $this->triggerError($sp7aeb1c); } curl_close($spc2dc02); } else { if ($spf9523a) { $sp73c35b = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spdcb2c5) . '
', 'content' => $spdcb2c5, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp3466c1 = stream_context_create($sp73c35b); $spdcb2c5 = file_get_contents($spc2ee22, false, $sp3466c1); } } return $spdcb2c5; } private function decode_response($sp51b626, $sp0df1f1) { if (strlen($sp0df1f1) > 100) { return 0; } $spc0a0e7 = array(); $sp495215 = array(); $spe25c1e = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spe71595 = 0; $spe54310 = 0; $spddc920 = str_split($sp51b626); $spe45e49 = str_split($sp0df1f1); for ($sp626673 = 0; $sp626673 < strlen($sp51b626); $sp626673++) { $spdb8903 = $spddc920[$sp626673]; if (in_array($spdb8903, $sp495215)) { continue; } else { $spd6f3d8 = $spe25c1e[$spe71595 % 5]; array_push($sp495215, $spdb8903); $spe71595++; $spc0a0e7[$spdb8903] = $spd6f3d8; } } for ($sp73802a = 0; $sp73802a < strlen($sp0df1f1); $sp73802a++) { $spe54310 += $spc0a0e7[$spe45e49[$sp73802a]]; } $spe54310 = $spe54310 - $this->decodeRandBase($sp51b626); return $spe54310; } private function get_x_pos_from_str($sp0221f9) { if (strlen($sp0221f9) != 5) { return 0; } $sp34be93 = 0; $sp9ecf8b = 200; $sp34be93 = base_convert($sp0221f9, 16, 10); $spa99c85 = $sp34be93 % $sp9ecf8b; $spa99c85 = $spa99c85 < 40 ? 40 : $spa99c85; return $spa99c85; } private function get_failback_pic_ans($sp9af4dd, $spf5c971) { $sp9a9d3e = substr(md5($sp9af4dd), 0, 9); $sp48b782 = substr(md5($spf5c971), 10, 9); $spd88841 = ''; for ($sp626673 = 0; $sp626673 < 9; $sp626673++) { if ($sp626673 % 2 == 0) { $spd88841 = $spd88841 . $sp9a9d3e[$sp626673]; } elseif ($sp626673 % 2 == 1) { $spd88841 = $spd88841 . $sp48b782[$sp626673]; } } $sp6574c4 = substr($spd88841, 4, 5); $spd8cd3b = $this->get_x_pos_from_str($sp6574c4); return $spd8cd3b; } private function decodeRandBase($sp51b626) { $sp24b46d = substr($sp51b626, 32, 2); $sp636c27 = array(); for ($sp626673 = 0; $sp626673 < strlen($sp24b46d); $sp626673++) { $spa0819a = ord($sp24b46d[$sp626673]); $spa99c85 = $spa0819a > 57 ? $spa0819a - 87 : $spa0819a - 48; array_push($sp636c27, $spa99c85); } $spd069c8 = $sp636c27['0'] * 36 + $sp636c27['1']; return $spd069c8; } private function triggerError($sp7aeb1c) { } }