<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp546f7f, $sp9ea888) { $this->captcha_id = $sp546f7f; $this->private_key = $sp9ea888; } public function pre_process($spc2f05b = null) { $sp935125 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spc2f05b != null and is_string($spc2f05b)) { $sp935125 = $sp935125 . '&user_id=' . $spc2f05b; } $spbd6912 = $this->send_request($sp935125); if (strlen($spbd6912) != 32) { $this->failback_process(); return 0; } $this->success_process($spbd6912); return 1; } private function success_process($spbd6912) { $spbd6912 = md5($spbd6912 . $this->private_key); $spc4e359 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spbd6912); $this->response = $spc4e359; } private function failback_process() { $sp1cbcbd = md5(rand(0, 100)); $spedb802 = md5(rand(0, 100)); $spbd6912 = $sp1cbcbd . substr($spedb802, 0, 2); $spc4e359 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spbd6912); $this->response = $spc4e359; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spbd6912, $spc294d9, $spa6e26f, $spc2f05b = null) { if (!$this->check_validate($spbd6912, $spc294d9)) { return 0; } $spd8b2e9 = array('seccode' => $spa6e26f, 'sdk' => self::GT_SDK_VERSION); if ($spc2f05b != null and is_string($spc2f05b)) { $spd8b2e9['user_id'] = $spc2f05b; } $sp935125 = 'http://api.geetest.com/validate.php'; $sp244ee9 = $this->post_request($sp935125, $spd8b2e9); if ($sp244ee9 == md5($spa6e26f)) { return 1; } else { if ($sp244ee9 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spbd6912, $spc294d9, $spa6e26f) { if ($spc294d9) { $spba869e = explode('_', $spc294d9); try { $sp9c9df7 = $this->decode_response($spbd6912, $spba869e['0']); $sp5831f0 = $this->decode_response($spbd6912, $spba869e['1']); $sp92adeb = $this->decode_response($spbd6912, $spba869e['2']); $sp22a072 = $this->get_failback_pic_ans($sp5831f0, $sp92adeb); $spa48b60 = abs($sp9c9df7 - $sp22a072); } catch (\Exception $spf95c2c) { return 1; } if ($spa48b60 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spbd6912, $spc294d9) { if (strlen($spc294d9) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spbd6912) != $spc294d9) { return false; } return true; } private function send_request($sp935125) { if (function_exists('curl_exec')) { $spc4850c = curl_init(); curl_setopt($spc4850c, CURLOPT_URL, $sp935125); curl_setopt($spc4850c, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spc4850c, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spc4850c, CURLOPT_RETURNTRANSFER, 1); $spd8b2e9 = curl_exec($spc4850c); if (curl_errno($spc4850c)) { $spb25d6f = sprintf('curl[%s] error[%s]', $sp935125, curl_errno($spc4850c) . ':' . curl_error($spc4850c)); $this->triggerError($spb25d6f); } curl_close($spc4850c); } else { $sp8129df = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp8b6bbd = stream_context_create($sp8129df); $spd8b2e9 = file_get_contents($sp935125, false, $sp8b6bbd); } return $spd8b2e9; } private function post_request($sp935125, $sp2843a2 = '') { if (!$sp2843a2) { return false; } $spd8b2e9 = http_build_query($sp2843a2); if (function_exists('curl_exec')) { $spc4850c = curl_init(); curl_setopt($spc4850c, CURLOPT_URL, $sp935125); curl_setopt($spc4850c, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spc4850c, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spc4850c, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp2843a2) { curl_setopt($spc4850c, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spc4850c, CURLOPT_POST, 1); curl_setopt($spc4850c, CURLOPT_POSTFIELDS, $spd8b2e9); } $spd8b2e9 = curl_exec($spc4850c); if (curl_errno($spc4850c)) { $spb25d6f = sprintf('curl[%s] error[%s]', $sp935125, curl_errno($spc4850c) . ':' . curl_error($spc4850c)); $this->triggerError($spb25d6f); } curl_close($spc4850c); } else { if ($sp2843a2) { $sp8129df = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spd8b2e9) . '
', 'content' => $spd8b2e9, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp8b6bbd = stream_context_create($sp8129df); $spd8b2e9 = file_get_contents($sp935125, false, $sp8b6bbd); } } return $spd8b2e9; } private function decode_response($spbd6912, $spcf4a2b) { if (strlen($spcf4a2b) > 100) { return 0; } $spbccf24 = array(); $spe91dcc = array(); $sp947822 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spbefb16 = 0; $sp1a1701 = 0; $spddb977 = str_split($spbd6912); $spaaaa3c = str_split($spcf4a2b); for ($sp9d4bce = 0; $sp9d4bce < strlen($spbd6912); $sp9d4bce++) { $spb8bcdd = $spddb977[$sp9d4bce]; if (in_array($spb8bcdd, $spe91dcc)) { continue; } else { $spba869e = $sp947822[$spbefb16 % 5]; array_push($spe91dcc, $spb8bcdd); $spbefb16++; $spbccf24[$spb8bcdd] = $spba869e; } } for ($spc81e09 = 0; $spc81e09 < strlen($spcf4a2b); $spc81e09++) { $sp1a1701 += $spbccf24[$spaaaa3c[$spc81e09]]; } $sp1a1701 = $sp1a1701 - $this->decodeRandBase($spbd6912); return $sp1a1701; } private function get_x_pos_from_str($sp79f28a) { if (strlen($sp79f28a) != 5) { return 0; } $spe72da3 = 0; $sp8ad15b = 200; $spe72da3 = base_convert($sp79f28a, 16, 10); $spc4e359 = $spe72da3 % $sp8ad15b; $spc4e359 = $spc4e359 < 40 ? 40 : $spc4e359; return $spc4e359; } private function get_failback_pic_ans($sp8d8d63, $sp95428a) { $sp94355c = substr(md5($sp8d8d63), 0, 9); $sp7ee939 = substr(md5($sp95428a), 10, 9); $spf10cc8 = ''; for ($sp9d4bce = 0; $sp9d4bce < 9; $sp9d4bce++) { if ($sp9d4bce % 2 == 0) { $spf10cc8 = $spf10cc8 . $sp94355c[$sp9d4bce]; } elseif ($sp9d4bce % 2 == 1) { $spf10cc8 = $spf10cc8 . $sp7ee939[$sp9d4bce]; } } $sp606125 = substr($spf10cc8, 4, 5); $sp22a072 = $this->get_x_pos_from_str($sp606125); return $sp22a072; } private function decodeRandBase($spbd6912) { $spca31ef = substr($spbd6912, 32, 2); $sp5b198c = array(); for ($sp9d4bce = 0; $sp9d4bce < strlen($spca31ef); $sp9d4bce++) { $spaf21e2 = ord($spca31ef[$sp9d4bce]); $spc4e359 = $spaf21e2 > 57 ? $spaf21e2 - 87 : $spaf21e2 - 48; array_push($sp5b198c, $spc4e359); } $spdb4636 = $sp5b198c['0'] * 36 + $sp5b198c['1']; return $spdb4636; } private function triggerError($spb25d6f) { } }