<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spbb9581, $sp36bd22) { $this->captcha_id = $spbb9581; $this->private_key = $sp36bd22; } public function pre_process($sp7aa9af = null) { $sp81d92a = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp7aa9af != null and is_string($sp7aa9af)) { $sp81d92a = $sp81d92a . '&user_id=' . $sp7aa9af; } $sp603fd3 = $this->send_request($sp81d92a); if (strlen($sp603fd3) != 32) { $this->failback_process(); return 0; } $this->success_process($sp603fd3); return 1; } private function success_process($sp603fd3) { $sp603fd3 = md5($sp603fd3 . $this->private_key); $spf36da4 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp603fd3); $this->response = $spf36da4; } private function failback_process() { $sp2286bd = md5(rand(0, 100)); $spa15aa3 = md5(rand(0, 100)); $sp603fd3 = $sp2286bd . substr($spa15aa3, 0, 2); $spf36da4 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp603fd3); $this->response = $spf36da4; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp603fd3, $sp097a52, $sp7b19ee, $sp7aa9af = null) { if (!$this->check_validate($sp603fd3, $sp097a52)) { return 0; } $spfda58c = array('seccode' => $sp7b19ee, 'sdk' => self::GT_SDK_VERSION); if ($sp7aa9af != null and is_string($sp7aa9af)) { $spfda58c['user_id'] = $sp7aa9af; } $sp81d92a = 'http://api.geetest.com/validate.php'; $sp0634f2 = $this->post_request($sp81d92a, $spfda58c); if ($sp0634f2 == md5($sp7b19ee)) { return 1; } else { if ($sp0634f2 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp603fd3, $sp097a52, $sp7b19ee) { if ($sp097a52) { $spb17cea = explode('_', $sp097a52); try { $spfbb3e3 = $this->decode_response($sp603fd3, $spb17cea['0']); $sp325206 = $this->decode_response($sp603fd3, $spb17cea['1']); $sp0b4826 = $this->decode_response($sp603fd3, $spb17cea['2']); $sp285f72 = $this->get_failback_pic_ans($sp325206, $sp0b4826); $sp7ccf1f = abs($spfbb3e3 - $sp285f72); } catch (\Exception $spd118f7) { return 1; } if ($sp7ccf1f < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp603fd3, $sp097a52) { if (strlen($sp097a52) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp603fd3) != $sp097a52) { return false; } return true; } private function send_request($sp81d92a) { if (function_exists('curl_exec')) { $sp0c7650 = curl_init(); curl_setopt($sp0c7650, CURLOPT_URL, $sp81d92a); curl_setopt($sp0c7650, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp0c7650, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp0c7650, CURLOPT_RETURNTRANSFER, 1); $spfda58c = curl_exec($sp0c7650); if (curl_errno($sp0c7650)) { $sp8b7a85 = sprintf('curl[%s] error[%s]', $sp81d92a, curl_errno($sp0c7650) . ':' . curl_error($sp0c7650)); $this->triggerError($sp8b7a85); } curl_close($sp0c7650); } else { $spe82d38 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spd61729 = stream_context_create($spe82d38); $spfda58c = file_get_contents($sp81d92a, false, $spd61729); } return $spfda58c; } private function post_request($sp81d92a, $sp5516d8 = '') { if (!$sp5516d8) { return false; } $spfda58c = http_build_query($sp5516d8); if (function_exists('curl_exec')) { $sp0c7650 = curl_init(); curl_setopt($sp0c7650, CURLOPT_URL, $sp81d92a); curl_setopt($sp0c7650, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp0c7650, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp0c7650, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp5516d8) { curl_setopt($sp0c7650, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp0c7650, CURLOPT_POST, 1); curl_setopt($sp0c7650, CURLOPT_POSTFIELDS, $spfda58c); } $spfda58c = curl_exec($sp0c7650); if (curl_errno($sp0c7650)) { $sp8b7a85 = sprintf('curl[%s] error[%s]', $sp81d92a, curl_errno($sp0c7650) . ':' . curl_error($sp0c7650)); $this->triggerError($sp8b7a85); } curl_close($sp0c7650); } else { if ($sp5516d8) { $spe82d38 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spfda58c) . '
', 'content' => $spfda58c, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spd61729 = stream_context_create($spe82d38); $spfda58c = file_get_contents($sp81d92a, false, $spd61729); } } return $spfda58c; } private function decode_response($sp603fd3, $sp864073) { if (strlen($sp864073) > 100) { return 0; } $sp50e909 = array(); $sp45ffd7 = array(); $spcc75b7 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp9154dd = 0; $sp5f9a9a = 0; $sp5d03f1 = str_split($sp603fd3); $sp4c7172 = str_split($sp864073); for ($sp03f985 = 0; $sp03f985 < strlen($sp603fd3); $sp03f985++) { $sp415442 = $sp5d03f1[$sp03f985]; if (in_array($sp415442, $sp45ffd7)) { continue; } else { $spb17cea = $spcc75b7[$sp9154dd % 5]; array_push($sp45ffd7, $sp415442); $sp9154dd++; $sp50e909[$sp415442] = $spb17cea; } } for ($sp6f7f9d = 0; $sp6f7f9d < strlen($sp864073); $sp6f7f9d++) { $sp5f9a9a += $sp50e909[$sp4c7172[$sp6f7f9d]]; } $sp5f9a9a = $sp5f9a9a - $this->decodeRandBase($sp603fd3); return $sp5f9a9a; } private function get_x_pos_from_str($sp8a9288) { if (strlen($sp8a9288) != 5) { return 0; } $sp5eee2a = 0; $sp6bd967 = 200; $sp5eee2a = base_convert($sp8a9288, 16, 10); $spf36da4 = $sp5eee2a % $sp6bd967; $spf36da4 = $spf36da4 < 40 ? 40 : $spf36da4; return $spf36da4; } private function get_failback_pic_ans($spc0ece3, $spa6b814) { $spe710ae = substr(md5($spc0ece3), 0, 9); $sp1f326a = substr(md5($spa6b814), 10, 9); $sp5e0344 = ''; for ($sp03f985 = 0; $sp03f985 < 9; $sp03f985++) { if ($sp03f985 % 2 == 0) { $sp5e0344 = $sp5e0344 . $spe710ae[$sp03f985]; } elseif ($sp03f985 % 2 == 1) { $sp5e0344 = $sp5e0344 . $sp1f326a[$sp03f985]; } } $spe8afb8 = substr($sp5e0344, 4, 5); $sp285f72 = $this->get_x_pos_from_str($spe8afb8); return $sp285f72; } private function decodeRandBase($sp603fd3) { $sp4e234d = substr($sp603fd3, 32, 2); $spfacbf8 = array(); for ($sp03f985 = 0; $sp03f985 < strlen($sp4e234d); $sp03f985++) { $sp4cb2dc = ord($sp4e234d[$sp03f985]); $spf36da4 = $sp4cb2dc > 57 ? $sp4cb2dc - 87 : $sp4cb2dc - 48; array_push($spfacbf8, $spf36da4); } $spfc20fc = $spfacbf8['0'] * 36 + $spfacbf8['1']; return $spfc20fc; } private function triggerError($sp8b7a85) { } }