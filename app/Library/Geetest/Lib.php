<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp78221a, $spc88672) { $this->captcha_id = $sp78221a; $this->private_key = $spc88672; } public function pre_process($sp71c904 = null) { $spcd8f2b = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp71c904 != null and is_string($sp71c904)) { $spcd8f2b = $spcd8f2b . '&user_id=' . $sp71c904; } $sp3adea3 = $this->send_request($spcd8f2b); if (strlen($sp3adea3) != 32) { $this->failback_process(); return 0; } $this->success_process($sp3adea3); return 1; } private function success_process($sp3adea3) { $sp3adea3 = md5($sp3adea3 . $this->private_key); $sp097648 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp3adea3); $this->response = $sp097648; } private function failback_process() { $sp7823d6 = md5(rand(0, 100)); $sp1a6671 = md5(rand(0, 100)); $sp3adea3 = $sp7823d6 . substr($sp1a6671, 0, 2); $sp097648 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp3adea3); $this->response = $sp097648; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp3adea3, $spd88ff3, $sp4d2df6, $sp71c904 = null) { if (!$this->check_validate($sp3adea3, $spd88ff3)) { return 0; } $spa480b6 = array('seccode' => $sp4d2df6, 'sdk' => self::GT_SDK_VERSION); if ($sp71c904 != null and is_string($sp71c904)) { $spa480b6['user_id'] = $sp71c904; } $spcd8f2b = 'http://api.geetest.com/validate.php'; $sp92ef6f = $this->post_request($spcd8f2b, $spa480b6); if ($sp92ef6f == md5($sp4d2df6)) { return 1; } else { if ($sp92ef6f == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp3adea3, $spd88ff3, $sp4d2df6) { if ($spd88ff3) { $sp770658 = explode('_', $spd88ff3); try { $sp1e07b0 = $this->decode_response($sp3adea3, $sp770658['0']); $spa02628 = $this->decode_response($sp3adea3, $sp770658['1']); $spdc93e5 = $this->decode_response($sp3adea3, $sp770658['2']); $sp848b1b = $this->get_failback_pic_ans($spa02628, $spdc93e5); $spd58a5b = abs($sp1e07b0 - $sp848b1b); } catch (\Exception $sp2251d3) { return 1; } if ($spd58a5b < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp3adea3, $spd88ff3) { if (strlen($spd88ff3) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp3adea3) != $spd88ff3) { return false; } return true; } private function send_request($spcd8f2b) { if (function_exists('curl_exec')) { $spe61199 = curl_init(); curl_setopt($spe61199, CURLOPT_URL, $spcd8f2b); curl_setopt($spe61199, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spe61199, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spe61199, CURLOPT_RETURNTRANSFER, 1); $spa480b6 = curl_exec($spe61199); if (curl_errno($spe61199)) { $sp9b3e77 = sprintf('curl[%s] error[%s]', $spcd8f2b, curl_errno($spe61199) . ':' . curl_error($spe61199)); $this->triggerError($sp9b3e77); } curl_close($spe61199); } else { $sp3d52e4 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp9033eb = stream_context_create($sp3d52e4); $spa480b6 = file_get_contents($spcd8f2b, false, $sp9033eb); } return $spa480b6; } private function post_request($spcd8f2b, $spf49434 = '') { if (!$spf49434) { return false; } $spa480b6 = http_build_query($spf49434); if (function_exists('curl_exec')) { $spe61199 = curl_init(); curl_setopt($spe61199, CURLOPT_URL, $spcd8f2b); curl_setopt($spe61199, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spe61199, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spe61199, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spf49434) { curl_setopt($spe61199, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spe61199, CURLOPT_POST, 1); curl_setopt($spe61199, CURLOPT_POSTFIELDS, $spa480b6); } $spa480b6 = curl_exec($spe61199); if (curl_errno($spe61199)) { $sp9b3e77 = sprintf('curl[%s] error[%s]', $spcd8f2b, curl_errno($spe61199) . ':' . curl_error($spe61199)); $this->triggerError($sp9b3e77); } curl_close($spe61199); } else { if ($spf49434) { $sp3d52e4 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spa480b6) . '
', 'content' => $spa480b6, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp9033eb = stream_context_create($sp3d52e4); $spa480b6 = file_get_contents($spcd8f2b, false, $sp9033eb); } } return $spa480b6; } private function decode_response($sp3adea3, $sp10022b) { if (strlen($sp10022b) > 100) { return 0; } $spb19d6e = array(); $sp736ea0 = array(); $spf738a5 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spf525ee = 0; $sp8d46e3 = 0; $sp977c26 = str_split($sp3adea3); $sp28baba = str_split($sp10022b); for ($spb11c4c = 0; $spb11c4c < strlen($sp3adea3); $spb11c4c++) { $sp29b243 = $sp977c26[$spb11c4c]; if (in_array($sp29b243, $sp736ea0)) { continue; } else { $sp770658 = $spf738a5[$spf525ee % 5]; array_push($sp736ea0, $sp29b243); $spf525ee++; $spb19d6e[$sp29b243] = $sp770658; } } for ($sp6ce683 = 0; $sp6ce683 < strlen($sp10022b); $sp6ce683++) { $sp8d46e3 += $spb19d6e[$sp28baba[$sp6ce683]]; } $sp8d46e3 = $sp8d46e3 - $this->decodeRandBase($sp3adea3); return $sp8d46e3; } private function get_x_pos_from_str($spf5724d) { if (strlen($spf5724d) != 5) { return 0; } $sp5afac3 = 0; $sp60c264 = 200; $sp5afac3 = base_convert($spf5724d, 16, 10); $sp097648 = $sp5afac3 % $sp60c264; $sp097648 = $sp097648 < 40 ? 40 : $sp097648; return $sp097648; } private function get_failback_pic_ans($spd17aa2, $sp0f7285) { $sp928020 = substr(md5($spd17aa2), 0, 9); $sp748f7a = substr(md5($sp0f7285), 10, 9); $sp6237f7 = ''; for ($spb11c4c = 0; $spb11c4c < 9; $spb11c4c++) { if ($spb11c4c % 2 == 0) { $sp6237f7 = $sp6237f7 . $sp928020[$spb11c4c]; } elseif ($spb11c4c % 2 == 1) { $sp6237f7 = $sp6237f7 . $sp748f7a[$spb11c4c]; } } $sp2149f5 = substr($sp6237f7, 4, 5); $sp848b1b = $this->get_x_pos_from_str($sp2149f5); return $sp848b1b; } private function decodeRandBase($sp3adea3) { $sp8c12a0 = substr($sp3adea3, 32, 2); $sp60c0bc = array(); for ($spb11c4c = 0; $spb11c4c < strlen($sp8c12a0); $spb11c4c++) { $spa8c403 = ord($sp8c12a0[$spb11c4c]); $sp097648 = $spa8c403 > 57 ? $spa8c403 - 87 : $spa8c403 - 48; array_push($sp60c0bc, $sp097648); } $sp48509a = $sp60c0bc['0'] * 36 + $sp60c0bc['1']; return $sp48509a; } private function triggerError($sp9b3e77) { } }