<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp32982b, $sp5b6e1e) { $this->captcha_id = $sp32982b; $this->private_key = $sp5b6e1e; } public function pre_process($sp95525e = null) { $speb2c05 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp95525e != null and is_string($sp95525e)) { $speb2c05 = $speb2c05 . '&user_id=' . $sp95525e; } $spf5743e = $this->send_request($speb2c05); if (strlen($spf5743e) != 32) { $this->failback_process(); return 0; } $this->success_process($spf5743e); return 1; } private function success_process($spf5743e) { $spf5743e = md5($spf5743e . $this->private_key); $sp66d196 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spf5743e); $this->response = $sp66d196; } private function failback_process() { $sp85f823 = md5(rand(0, 100)); $spd3fabc = md5(rand(0, 100)); $spf5743e = $sp85f823 . substr($spd3fabc, 0, 2); $sp66d196 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spf5743e); $this->response = $sp66d196; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spf5743e, $sp8c652b, $spafcad6, $sp95525e = null) { if (!$this->check_validate($spf5743e, $sp8c652b)) { return 0; } $spf042d9 = array('seccode' => $spafcad6, 'sdk' => self::GT_SDK_VERSION); if ($sp95525e != null and is_string($sp95525e)) { $spf042d9['user_id'] = $sp95525e; } $speb2c05 = 'http://api.geetest.com/validate.php'; $spdbf331 = $this->post_request($speb2c05, $spf042d9); if ($spdbf331 == md5($spafcad6)) { return 1; } else { if ($spdbf331 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spf5743e, $sp8c652b, $spafcad6) { if ($sp8c652b) { $sp5751de = explode('_', $sp8c652b); try { $sp55593c = $this->decode_response($spf5743e, $sp5751de['0']); $spbb88be = $this->decode_response($spf5743e, $sp5751de['1']); $sp498d64 = $this->decode_response($spf5743e, $sp5751de['2']); $spf88c4b = $this->get_failback_pic_ans($spbb88be, $sp498d64); $sp9f8b3c = abs($sp55593c - $spf88c4b); } catch (\Exception $spcdd557) { return 1; } if ($sp9f8b3c < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spf5743e, $sp8c652b) { if (strlen($sp8c652b) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spf5743e) != $sp8c652b) { return false; } return true; } private function send_request($speb2c05) { if (function_exists('curl_exec')) { $sp5c5a22 = curl_init(); curl_setopt($sp5c5a22, CURLOPT_URL, $speb2c05); curl_setopt($sp5c5a22, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp5c5a22, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp5c5a22, CURLOPT_RETURNTRANSFER, 1); $spf042d9 = curl_exec($sp5c5a22); if (curl_errno($sp5c5a22)) { $sp6b8e4e = sprintf('curl[%s] error[%s]', $speb2c05, curl_errno($sp5c5a22) . ':' . curl_error($sp5c5a22)); $this->triggerError($sp6b8e4e); } curl_close($sp5c5a22); } else { $sp173e1d = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp7b0d68 = stream_context_create($sp173e1d); $spf042d9 = file_get_contents($speb2c05, false, $sp7b0d68); } return $spf042d9; } private function post_request($speb2c05, $sp5e4eb1 = '') { if (!$sp5e4eb1) { return false; } $spf042d9 = http_build_query($sp5e4eb1); if (function_exists('curl_exec')) { $sp5c5a22 = curl_init(); curl_setopt($sp5c5a22, CURLOPT_URL, $speb2c05); curl_setopt($sp5c5a22, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp5c5a22, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp5c5a22, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp5e4eb1) { curl_setopt($sp5c5a22, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp5c5a22, CURLOPT_POST, 1); curl_setopt($sp5c5a22, CURLOPT_POSTFIELDS, $spf042d9); } $spf042d9 = curl_exec($sp5c5a22); if (curl_errno($sp5c5a22)) { $sp6b8e4e = sprintf('curl[%s] error[%s]', $speb2c05, curl_errno($sp5c5a22) . ':' . curl_error($sp5c5a22)); $this->triggerError($sp6b8e4e); } curl_close($sp5c5a22); } else { if ($sp5e4eb1) { $sp173e1d = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spf042d9) . '
', 'content' => $spf042d9, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp7b0d68 = stream_context_create($sp173e1d); $spf042d9 = file_get_contents($speb2c05, false, $sp7b0d68); } } return $spf042d9; } private function decode_response($spf5743e, $sp3089c4) { if (strlen($sp3089c4) > 100) { return 0; } $sp16f27e = array(); $sp8df4ee = array(); $sp7820e9 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp4b47da = 0; $spea30e1 = 0; $sp78535f = str_split($spf5743e); $sp0bc251 = str_split($sp3089c4); for ($sp677ef3 = 0; $sp677ef3 < strlen($spf5743e); $sp677ef3++) { $sp52b00a = $sp78535f[$sp677ef3]; if (in_array($sp52b00a, $sp8df4ee)) { continue; } else { $sp5751de = $sp7820e9[$sp4b47da % 5]; array_push($sp8df4ee, $sp52b00a); $sp4b47da++; $sp16f27e[$sp52b00a] = $sp5751de; } } for ($sp9cb107 = 0; $sp9cb107 < strlen($sp3089c4); $sp9cb107++) { $spea30e1 += $sp16f27e[$sp0bc251[$sp9cb107]]; } $spea30e1 = $spea30e1 - $this->decodeRandBase($spf5743e); return $spea30e1; } private function get_x_pos_from_str($sp46e9e4) { if (strlen($sp46e9e4) != 5) { return 0; } $spf503de = 0; $spd13029 = 200; $spf503de = base_convert($sp46e9e4, 16, 10); $sp66d196 = $spf503de % $spd13029; $sp66d196 = $sp66d196 < 40 ? 40 : $sp66d196; return $sp66d196; } private function get_failback_pic_ans($sp848b1b, $sp6ac4f0) { $spb9ab56 = substr(md5($sp848b1b), 0, 9); $sp3bf6b2 = substr(md5($sp6ac4f0), 10, 9); $sp8bdf03 = ''; for ($sp677ef3 = 0; $sp677ef3 < 9; $sp677ef3++) { if ($sp677ef3 % 2 == 0) { $sp8bdf03 = $sp8bdf03 . $spb9ab56[$sp677ef3]; } elseif ($sp677ef3 % 2 == 1) { $sp8bdf03 = $sp8bdf03 . $sp3bf6b2[$sp677ef3]; } } $spc7c03d = substr($sp8bdf03, 4, 5); $spf88c4b = $this->get_x_pos_from_str($spc7c03d); return $spf88c4b; } private function decodeRandBase($spf5743e) { $sp519d42 = substr($spf5743e, 32, 2); $spd1ae66 = array(); for ($sp677ef3 = 0; $sp677ef3 < strlen($sp519d42); $sp677ef3++) { $sp7f9a4d = ord($sp519d42[$sp677ef3]); $sp66d196 = $sp7f9a4d > 57 ? $sp7f9a4d - 87 : $sp7f9a4d - 48; array_push($spd1ae66, $sp66d196); } $sp6b7985 = $spd1ae66['0'] * 36 + $spd1ae66['1']; return $sp6b7985; } private function triggerError($sp6b8e4e) { } }