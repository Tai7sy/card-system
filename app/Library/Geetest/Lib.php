<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp812dd2, $sp09e553) { $this->captcha_id = $sp812dd2; $this->private_key = $sp09e553; } public function pre_process($spdad372 = null) { $sp40b98a = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spdad372 != null and is_string($spdad372)) { $sp40b98a = $sp40b98a . '&user_id=' . $spdad372; } $spfba865 = $this->send_request($sp40b98a); if (strlen($spfba865) != 32) { $this->failback_process(); return 0; } $this->success_process($spfba865); return 1; } private function success_process($spfba865) { $spfba865 = md5($spfba865 . $this->private_key); $spf77edc = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spfba865); $this->response = $spf77edc; } private function failback_process() { $spcbff25 = md5(rand(0, 100)); $spa0c30f = md5(rand(0, 100)); $spfba865 = $spcbff25 . substr($spa0c30f, 0, 2); $spf77edc = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spfba865); $this->response = $spf77edc; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spfba865, $sp3d7030, $spabb1fb, $spdad372 = null) { if (!$this->check_validate($spfba865, $sp3d7030)) { return 0; } $sp86a999 = array('seccode' => $spabb1fb, 'sdk' => self::GT_SDK_VERSION); if ($spdad372 != null and is_string($spdad372)) { $sp86a999['user_id'] = $spdad372; } $sp40b98a = 'http://api.geetest.com/validate.php'; $sp183234 = $this->post_request($sp40b98a, $sp86a999); if ($sp183234 == md5($spabb1fb)) { return 1; } else { if ($sp183234 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spfba865, $sp3d7030, $spabb1fb) { if ($sp3d7030) { $spae23f7 = explode('_', $sp3d7030); try { $sp3de5a0 = $this->decode_response($spfba865, $spae23f7['0']); $sp35ea94 = $this->decode_response($spfba865, $spae23f7['1']); $spd31810 = $this->decode_response($spfba865, $spae23f7['2']); $sp3a0747 = $this->get_failback_pic_ans($sp35ea94, $spd31810); $spa51178 = abs($sp3de5a0 - $sp3a0747); } catch (\Exception $sp96dd17) { return 1; } if ($spa51178 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spfba865, $sp3d7030) { if (strlen($sp3d7030) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spfba865) != $sp3d7030) { return false; } return true; } private function send_request($sp40b98a) { if (function_exists('curl_exec')) { $sp1942b5 = curl_init(); curl_setopt($sp1942b5, CURLOPT_URL, $sp40b98a); curl_setopt($sp1942b5, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp1942b5, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp1942b5, CURLOPT_RETURNTRANSFER, 1); $sp86a999 = curl_exec($sp1942b5); if (curl_errno($sp1942b5)) { $spf0770c = sprintf('curl[%s] error[%s]', $sp40b98a, curl_errno($sp1942b5) . ':' . curl_error($sp1942b5)); $this->triggerError($spf0770c); } curl_close($sp1942b5); } else { $sp60bd72 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp6aba69 = stream_context_create($sp60bd72); $sp86a999 = file_get_contents($sp40b98a, false, $sp6aba69); } return $sp86a999; } private function post_request($sp40b98a, $sp6c3a25 = '') { if (!$sp6c3a25) { return false; } $sp86a999 = http_build_query($sp6c3a25); if (function_exists('curl_exec')) { $sp1942b5 = curl_init(); curl_setopt($sp1942b5, CURLOPT_URL, $sp40b98a); curl_setopt($sp1942b5, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp1942b5, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp1942b5, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp6c3a25) { curl_setopt($sp1942b5, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp1942b5, CURLOPT_POST, 1); curl_setopt($sp1942b5, CURLOPT_POSTFIELDS, $sp86a999); } $sp86a999 = curl_exec($sp1942b5); if (curl_errno($sp1942b5)) { $spf0770c = sprintf('curl[%s] error[%s]', $sp40b98a, curl_errno($sp1942b5) . ':' . curl_error($sp1942b5)); $this->triggerError($spf0770c); } curl_close($sp1942b5); } else { if ($sp6c3a25) { $sp60bd72 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp86a999) . '
', 'content' => $sp86a999, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp6aba69 = stream_context_create($sp60bd72); $sp86a999 = file_get_contents($sp40b98a, false, $sp6aba69); } } return $sp86a999; } private function decode_response($spfba865, $sp9bd5ca) { if (strlen($sp9bd5ca) > 100) { return 0; } $spe57121 = array(); $sp716a05 = array(); $spa963ae = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spdba6bb = 0; $sp204119 = 0; $spa307a2 = str_split($spfba865); $sp1eec32 = str_split($sp9bd5ca); for ($spe89d11 = 0; $spe89d11 < strlen($spfba865); $spe89d11++) { $sp807bd0 = $spa307a2[$spe89d11]; if (in_array($sp807bd0, $sp716a05)) { continue; } else { $spae23f7 = $spa963ae[$spdba6bb % 5]; array_push($sp716a05, $sp807bd0); $spdba6bb++; $spe57121[$sp807bd0] = $spae23f7; } } for ($spdd959c = 0; $spdd959c < strlen($sp9bd5ca); $spdd959c++) { $sp204119 += $spe57121[$sp1eec32[$spdd959c]]; } $sp204119 = $sp204119 - $this->decodeRandBase($spfba865); return $sp204119; } private function get_x_pos_from_str($sp43e668) { if (strlen($sp43e668) != 5) { return 0; } $sp9d9897 = 0; $spe7bf51 = 200; $sp9d9897 = base_convert($sp43e668, 16, 10); $spf77edc = $sp9d9897 % $spe7bf51; $spf77edc = $spf77edc < 40 ? 40 : $spf77edc; return $spf77edc; } private function get_failback_pic_ans($spac7bd5, $sp69231a) { $sp304e8a = substr(md5($spac7bd5), 0, 9); $sp9e5709 = substr(md5($sp69231a), 10, 9); $spb8df5e = ''; for ($spe89d11 = 0; $spe89d11 < 9; $spe89d11++) { if ($spe89d11 % 2 == 0) { $spb8df5e = $spb8df5e . $sp304e8a[$spe89d11]; } elseif ($spe89d11 % 2 == 1) { $spb8df5e = $spb8df5e . $sp9e5709[$spe89d11]; } } $sp63cd38 = substr($spb8df5e, 4, 5); $sp3a0747 = $this->get_x_pos_from_str($sp63cd38); return $sp3a0747; } private function decodeRandBase($spfba865) { $spa97a2a = substr($spfba865, 32, 2); $sped92bd = array(); for ($spe89d11 = 0; $spe89d11 < strlen($spa97a2a); $spe89d11++) { $sp09f4b7 = ord($spa97a2a[$spe89d11]); $spf77edc = $sp09f4b7 > 57 ? $sp09f4b7 - 87 : $sp09f4b7 - 48; array_push($sped92bd, $spf77edc); } $spea3acd = $sped92bd['0'] * 36 + $sped92bd['1']; return $spea3acd; } private function triggerError($spf0770c) { } }