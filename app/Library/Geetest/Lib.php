<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp1d890d, $sp32e0c7) { $this->captcha_id = $sp1d890d; $this->private_key = $sp32e0c7; } public function pre_process($sp47762c = null) { $sp8d7716 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp47762c != null and is_string($sp47762c)) { $sp8d7716 = $sp8d7716 . '&user_id=' . $sp47762c; } $sp96fb44 = $this->send_request($sp8d7716); if (strlen($sp96fb44) != 32) { $this->failback_process(); return 0; } $this->success_process($sp96fb44); return 1; } private function success_process($sp96fb44) { $sp96fb44 = md5($sp96fb44 . $this->private_key); $sp7cc108 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp96fb44); $this->response = $sp7cc108; } private function failback_process() { $sp0aeaa2 = md5(rand(0, 100)); $sp06d795 = md5(rand(0, 100)); $sp96fb44 = $sp0aeaa2 . substr($sp06d795, 0, 2); $sp7cc108 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp96fb44); $this->response = $sp7cc108; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp96fb44, $spdce8e3, $sp837169, $sp47762c = null) { if (!$this->check_validate($sp96fb44, $spdce8e3)) { return 0; } $spdd9ae9 = array('seccode' => $sp837169, 'sdk' => self::GT_SDK_VERSION); if ($sp47762c != null and is_string($sp47762c)) { $spdd9ae9['user_id'] = $sp47762c; } $sp8d7716 = 'http://api.geetest.com/validate.php'; $spec6928 = $this->post_request($sp8d7716, $spdd9ae9); if ($spec6928 == md5($sp837169)) { return 1; } else { if ($spec6928 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp96fb44, $spdce8e3, $sp837169) { if ($spdce8e3) { $spf53d99 = explode('_', $spdce8e3); try { $sp20b7a5 = $this->decode_response($sp96fb44, $spf53d99['0']); $spee0150 = $this->decode_response($sp96fb44, $spf53d99['1']); $sp37fa41 = $this->decode_response($sp96fb44, $spf53d99['2']); $sp3abf18 = $this->get_failback_pic_ans($spee0150, $sp37fa41); $sp08f470 = abs($sp20b7a5 - $sp3abf18); } catch (\Exception $sp8e3e91) { return 1; } if ($sp08f470 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp96fb44, $spdce8e3) { if (strlen($spdce8e3) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp96fb44) != $spdce8e3) { return false; } return true; } private function send_request($sp8d7716) { if (function_exists('curl_exec')) { $sp6b3fc7 = curl_init(); curl_setopt($sp6b3fc7, CURLOPT_URL, $sp8d7716); curl_setopt($sp6b3fc7, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp6b3fc7, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp6b3fc7, CURLOPT_RETURNTRANSFER, 1); $spdd9ae9 = curl_exec($sp6b3fc7); if (curl_errno($sp6b3fc7)) { $spac6598 = sprintf('curl[%s] error[%s]', $sp8d7716, curl_errno($sp6b3fc7) . ':' . curl_error($sp6b3fc7)); $this->triggerError($spac6598); } curl_close($sp6b3fc7); } else { $sp69427b = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp2952d3 = stream_context_create($sp69427b); $spdd9ae9 = file_get_contents($sp8d7716, false, $sp2952d3); } return $spdd9ae9; } private function post_request($sp8d7716, $spae3910 = '') { if (!$spae3910) { return false; } $spdd9ae9 = http_build_query($spae3910); if (function_exists('curl_exec')) { $sp6b3fc7 = curl_init(); curl_setopt($sp6b3fc7, CURLOPT_URL, $sp8d7716); curl_setopt($sp6b3fc7, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp6b3fc7, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp6b3fc7, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spae3910) { curl_setopt($sp6b3fc7, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp6b3fc7, CURLOPT_POST, 1); curl_setopt($sp6b3fc7, CURLOPT_POSTFIELDS, $spdd9ae9); } $spdd9ae9 = curl_exec($sp6b3fc7); if (curl_errno($sp6b3fc7)) { $spac6598 = sprintf('curl[%s] error[%s]', $sp8d7716, curl_errno($sp6b3fc7) . ':' . curl_error($sp6b3fc7)); $this->triggerError($spac6598); } curl_close($sp6b3fc7); } else { if ($spae3910) { $sp69427b = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spdd9ae9) . '
', 'content' => $spdd9ae9, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp2952d3 = stream_context_create($sp69427b); $spdd9ae9 = file_get_contents($sp8d7716, false, $sp2952d3); } } return $spdd9ae9; } private function decode_response($sp96fb44, $sp0d5db5) { if (strlen($sp0d5db5) > 100) { return 0; } $spf8287d = array(); $sp049213 = array(); $sp5320f8 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp5df9fd = 0; $spdc5c4e = 0; $sp3008f3 = str_split($sp96fb44); $sp6d64ee = str_split($sp0d5db5); for ($spbc3a4f = 0; $spbc3a4f < strlen($sp96fb44); $spbc3a4f++) { $sp13bc98 = $sp3008f3[$spbc3a4f]; if (in_array($sp13bc98, $sp049213)) { continue; } else { $spf53d99 = $sp5320f8[$sp5df9fd % 5]; array_push($sp049213, $sp13bc98); $sp5df9fd++; $spf8287d[$sp13bc98] = $spf53d99; } } for ($sp0af495 = 0; $sp0af495 < strlen($sp0d5db5); $sp0af495++) { $spdc5c4e += $spf8287d[$sp6d64ee[$sp0af495]]; } $spdc5c4e = $spdc5c4e - $this->decodeRandBase($sp96fb44); return $spdc5c4e; } private function get_x_pos_from_str($spc2ac52) { if (strlen($spc2ac52) != 5) { return 0; } $sp5f5ebb = 0; $sp1e9f28 = 200; $sp5f5ebb = base_convert($spc2ac52, 16, 10); $sp7cc108 = $sp5f5ebb % $sp1e9f28; $sp7cc108 = $sp7cc108 < 40 ? 40 : $sp7cc108; return $sp7cc108; } private function get_failback_pic_ans($sp8cae82, $sp57e2a1) { $spab8fa4 = substr(md5($sp8cae82), 0, 9); $spb6b355 = substr(md5($sp57e2a1), 10, 9); $sp9f8790 = ''; for ($spbc3a4f = 0; $spbc3a4f < 9; $spbc3a4f++) { if ($spbc3a4f % 2 == 0) { $sp9f8790 = $sp9f8790 . $spab8fa4[$spbc3a4f]; } elseif ($spbc3a4f % 2 == 1) { $sp9f8790 = $sp9f8790 . $spb6b355[$spbc3a4f]; } } $spf4be64 = substr($sp9f8790, 4, 5); $sp3abf18 = $this->get_x_pos_from_str($spf4be64); return $sp3abf18; } private function decodeRandBase($sp96fb44) { $sp6a0afb = substr($sp96fb44, 32, 2); $spb946c7 = array(); for ($spbc3a4f = 0; $spbc3a4f < strlen($sp6a0afb); $spbc3a4f++) { $spcd81e2 = ord($sp6a0afb[$spbc3a4f]); $sp7cc108 = $spcd81e2 > 57 ? $spcd81e2 - 87 : $spcd81e2 - 48; array_push($spb946c7, $sp7cc108); } $sp391c25 = $spb946c7['0'] * 36 + $spb946c7['1']; return $sp391c25; } private function triggerError($spac6598) { } }