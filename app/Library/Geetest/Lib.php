<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp467b7f, $sp673b97) { $this->captcha_id = $sp467b7f; $this->private_key = $sp673b97; } public function pre_process($sp258cf6 = null) { $spddf3f5 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp258cf6 != null and is_string($sp258cf6)) { $spddf3f5 = $spddf3f5 . '&user_id=' . $sp258cf6; } $sp7e57f7 = $this->send_request($spddf3f5); if (strlen($sp7e57f7) != 32) { $this->failback_process(); return 0; } $this->success_process($sp7e57f7); return 1; } private function success_process($sp7e57f7) { $sp7e57f7 = md5($sp7e57f7 . $this->private_key); $sp0cbff8 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp7e57f7); $this->response = $sp0cbff8; } private function failback_process() { $sp74588e = md5(rand(0, 100)); $sp03ef85 = md5(rand(0, 100)); $sp7e57f7 = $sp74588e . substr($sp03ef85, 0, 2); $sp0cbff8 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp7e57f7); $this->response = $sp0cbff8; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp7e57f7, $sp84a849, $sp73c3fd, $sp258cf6 = null) { if (!$this->check_validate($sp7e57f7, $sp84a849)) { return 0; } $spe036ec = array('seccode' => $sp73c3fd, 'sdk' => self::GT_SDK_VERSION); if ($sp258cf6 != null and is_string($sp258cf6)) { $spe036ec['user_id'] = $sp258cf6; } $spddf3f5 = 'http://api.geetest.com/validate.php'; $spe4212a = $this->post_request($spddf3f5, $spe036ec); if ($spe4212a == md5($sp73c3fd)) { return 1; } else { if ($spe4212a == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp7e57f7, $sp84a849, $sp73c3fd) { if ($sp84a849) { $sp1b5dd9 = explode('_', $sp84a849); try { $spa22ffa = $this->decode_response($sp7e57f7, $sp1b5dd9['0']); $sp05174e = $this->decode_response($sp7e57f7, $sp1b5dd9['1']); $sp80e0c9 = $this->decode_response($sp7e57f7, $sp1b5dd9['2']); $sp116c29 = $this->get_failback_pic_ans($sp05174e, $sp80e0c9); $sp91a927 = abs($spa22ffa - $sp116c29); } catch (\Exception $sp45f5f1) { return 1; } if ($sp91a927 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp7e57f7, $sp84a849) { if (strlen($sp84a849) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp7e57f7) != $sp84a849) { return false; } return true; } private function send_request($spddf3f5) { if (function_exists('curl_exec')) { $spa9fd67 = curl_init(); curl_setopt($spa9fd67, CURLOPT_URL, $spddf3f5); curl_setopt($spa9fd67, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spa9fd67, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spa9fd67, CURLOPT_RETURNTRANSFER, 1); $spe036ec = curl_exec($spa9fd67); if (curl_errno($spa9fd67)) { $sp4bde26 = sprintf('curl[%s] error[%s]', $spddf3f5, curl_errno($spa9fd67) . ':' . curl_error($spa9fd67)); $this->triggerError($sp4bde26); } curl_close($spa9fd67); } else { $sp9b16cd = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp84c4ea = stream_context_create($sp9b16cd); $spe036ec = file_get_contents($spddf3f5, false, $sp84c4ea); } return $spe036ec; } private function post_request($spddf3f5, $spd2e949 = '') { if (!$spd2e949) { return false; } $spe036ec = http_build_query($spd2e949); if (function_exists('curl_exec')) { $spa9fd67 = curl_init(); curl_setopt($spa9fd67, CURLOPT_URL, $spddf3f5); curl_setopt($spa9fd67, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spa9fd67, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spa9fd67, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spd2e949) { curl_setopt($spa9fd67, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spa9fd67, CURLOPT_POST, 1); curl_setopt($spa9fd67, CURLOPT_POSTFIELDS, $spe036ec); } $spe036ec = curl_exec($spa9fd67); if (curl_errno($spa9fd67)) { $sp4bde26 = sprintf('curl[%s] error[%s]', $spddf3f5, curl_errno($spa9fd67) . ':' . curl_error($spa9fd67)); $this->triggerError($sp4bde26); } curl_close($spa9fd67); } else { if ($spd2e949) { $sp9b16cd = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spe036ec) . '
', 'content' => $spe036ec, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp84c4ea = stream_context_create($sp9b16cd); $spe036ec = file_get_contents($spddf3f5, false, $sp84c4ea); } } return $spe036ec; } private function decode_response($sp7e57f7, $sp8ed49d) { if (strlen($sp8ed49d) > 100) { return 0; } $sp0d678a = array(); $spb3be9f = array(); $sp26243a = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spdf4a99 = 0; $sp815cba = 0; $sp83f0f7 = str_split($sp7e57f7); $sp538caf = str_split($sp8ed49d); for ($spe20094 = 0; $spe20094 < strlen($sp7e57f7); $spe20094++) { $spc6f905 = $sp83f0f7[$spe20094]; if (in_array($spc6f905, $spb3be9f)) { continue; } else { $sp1b5dd9 = $sp26243a[$spdf4a99 % 5]; array_push($spb3be9f, $spc6f905); $spdf4a99++; $sp0d678a[$spc6f905] = $sp1b5dd9; } } for ($sp3e8837 = 0; $sp3e8837 < strlen($sp8ed49d); $sp3e8837++) { $sp815cba += $sp0d678a[$sp538caf[$sp3e8837]]; } $sp815cba = $sp815cba - $this->decodeRandBase($sp7e57f7); return $sp815cba; } private function get_x_pos_from_str($spa70c2b) { if (strlen($spa70c2b) != 5) { return 0; } $sp79a188 = 0; $sp5ef48f = 200; $sp79a188 = base_convert($spa70c2b, 16, 10); $sp0cbff8 = $sp79a188 % $sp5ef48f; $sp0cbff8 = $sp0cbff8 < 40 ? 40 : $sp0cbff8; return $sp0cbff8; } private function get_failback_pic_ans($sp890149, $spda6f0f) { $sp56870e = substr(md5($sp890149), 0, 9); $spe11c95 = substr(md5($spda6f0f), 10, 9); $spd94244 = ''; for ($spe20094 = 0; $spe20094 < 9; $spe20094++) { if ($spe20094 % 2 == 0) { $spd94244 = $spd94244 . $sp56870e[$spe20094]; } elseif ($spe20094 % 2 == 1) { $spd94244 = $spd94244 . $spe11c95[$spe20094]; } } $spa13a69 = substr($spd94244, 4, 5); $sp116c29 = $this->get_x_pos_from_str($spa13a69); return $sp116c29; } private function decodeRandBase($sp7e57f7) { $sp8af5db = substr($sp7e57f7, 32, 2); $sp52253e = array(); for ($spe20094 = 0; $spe20094 < strlen($sp8af5db); $spe20094++) { $spa587bb = ord($sp8af5db[$spe20094]); $sp0cbff8 = $spa587bb > 57 ? $spa587bb - 87 : $spa587bb - 48; array_push($sp52253e, $sp0cbff8); } $sp1986e9 = $sp52253e['0'] * 36 + $sp52253e['1']; return $sp1986e9; } private function triggerError($sp4bde26) { } }