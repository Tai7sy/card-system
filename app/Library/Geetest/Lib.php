<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp083113, $spb6e857) { $this->captcha_id = $sp083113; $this->private_key = $spb6e857; } public function pre_process($sp6fe8b9 = null) { $sp18a6d4 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp6fe8b9 != null and is_string($sp6fe8b9)) { $sp18a6d4 = $sp18a6d4 . '&user_id=' . $sp6fe8b9; } $spebbcae = $this->send_request($sp18a6d4); if (strlen($spebbcae) != 32) { $this->failback_process(); return 0; } $this->success_process($spebbcae); return 1; } private function success_process($spebbcae) { $spebbcae = md5($spebbcae . $this->private_key); $sp660b66 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spebbcae); $this->response = $sp660b66; } private function failback_process() { $sp268bfe = md5(rand(0, 100)); $sp3520e5 = md5(rand(0, 100)); $spebbcae = $sp268bfe . substr($sp3520e5, 0, 2); $sp660b66 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spebbcae); $this->response = $sp660b66; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spebbcae, $sp2f078f, $spec2231, $sp6fe8b9 = null) { if (!$this->check_validate($spebbcae, $sp2f078f)) { return 0; } $sp5cd131 = array('seccode' => $spec2231, 'sdk' => self::GT_SDK_VERSION); if ($sp6fe8b9 != null and is_string($sp6fe8b9)) { $sp5cd131['user_id'] = $sp6fe8b9; } $sp18a6d4 = 'http://api.geetest.com/validate.php'; $sp106f77 = $this->post_request($sp18a6d4, $sp5cd131); if ($sp106f77 == md5($spec2231)) { return 1; } else { if ($sp106f77 == 'false') { return 0; } else { return 0; } } } public function fail_validate($spebbcae, $sp2f078f, $spec2231) { if ($sp2f078f) { $spc0b76d = explode('_', $sp2f078f); try { $sp8e81d3 = $this->decode_response($spebbcae, $spc0b76d['0']); $spb58bbb = $this->decode_response($spebbcae, $spc0b76d['1']); $sp18f8ac = $this->decode_response($spebbcae, $spc0b76d['2']); $spbcfc71 = $this->get_failback_pic_ans($spb58bbb, $sp18f8ac); $spfffcbb = abs($sp8e81d3 - $spbcfc71); } catch (\Exception $sp16b835) { return 1; } if ($spfffcbb < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spebbcae, $sp2f078f) { if (strlen($sp2f078f) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spebbcae) != $sp2f078f) { return false; } return true; } private function send_request($sp18a6d4) { if (function_exists('curl_exec')) { $sp29ffe2 = curl_init(); curl_setopt($sp29ffe2, CURLOPT_URL, $sp18a6d4); curl_setopt($sp29ffe2, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp29ffe2, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp29ffe2, CURLOPT_RETURNTRANSFER, 1); $sp5cd131 = curl_exec($sp29ffe2); if (curl_errno($sp29ffe2)) { $sp5dc66d = sprintf('curl[%s] error[%s]', $sp18a6d4, curl_errno($sp29ffe2) . ':' . curl_error($sp29ffe2)); $this->triggerError($sp5dc66d); } curl_close($sp29ffe2); } else { $spdfc8e6 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp97c5ca = stream_context_create($spdfc8e6); $sp5cd131 = file_get_contents($sp18a6d4, false, $sp97c5ca); } return $sp5cd131; } private function post_request($sp18a6d4, $sp07a543 = '') { if (!$sp07a543) { return false; } $sp5cd131 = http_build_query($sp07a543); if (function_exists('curl_exec')) { $sp29ffe2 = curl_init(); curl_setopt($sp29ffe2, CURLOPT_URL, $sp18a6d4); curl_setopt($sp29ffe2, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp29ffe2, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp29ffe2, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp07a543) { curl_setopt($sp29ffe2, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp29ffe2, CURLOPT_POST, 1); curl_setopt($sp29ffe2, CURLOPT_POSTFIELDS, $sp5cd131); } $sp5cd131 = curl_exec($sp29ffe2); if (curl_errno($sp29ffe2)) { $sp5dc66d = sprintf('curl[%s] error[%s]', $sp18a6d4, curl_errno($sp29ffe2) . ':' . curl_error($sp29ffe2)); $this->triggerError($sp5dc66d); } curl_close($sp29ffe2); } else { if ($sp07a543) { $spdfc8e6 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp5cd131) . '
', 'content' => $sp5cd131, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp97c5ca = stream_context_create($spdfc8e6); $sp5cd131 = file_get_contents($sp18a6d4, false, $sp97c5ca); } } return $sp5cd131; } private function decode_response($spebbcae, $spb38c24) { if (strlen($spb38c24) > 100) { return 0; } $sp9dffac = array(); $sp986129 = array(); $sp906124 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spb5d933 = 0; $sp79f27b = 0; $spa8e5fd = str_split($spebbcae); $spab2a12 = str_split($spb38c24); for ($spec1f96 = 0; $spec1f96 < strlen($spebbcae); $spec1f96++) { $spc90bf2 = $spa8e5fd[$spec1f96]; if (in_array($spc90bf2, $sp986129)) { continue; } else { $spc0b76d = $sp906124[$spb5d933 % 5]; array_push($sp986129, $spc90bf2); $spb5d933++; $sp9dffac[$spc90bf2] = $spc0b76d; } } for ($spa584ac = 0; $spa584ac < strlen($spb38c24); $spa584ac++) { $sp79f27b += $sp9dffac[$spab2a12[$spa584ac]]; } $sp79f27b = $sp79f27b - $this->decodeRandBase($spebbcae); return $sp79f27b; } private function get_x_pos_from_str($sp893d26) { if (strlen($sp893d26) != 5) { return 0; } $spa62b05 = 0; $sp8a7159 = 200; $spa62b05 = base_convert($sp893d26, 16, 10); $sp660b66 = $spa62b05 % $sp8a7159; $sp660b66 = $sp660b66 < 40 ? 40 : $sp660b66; return $sp660b66; } private function get_failback_pic_ans($spe3d37b, $sp4558a1) { $sp31382d = substr(md5($spe3d37b), 0, 9); $spa76f23 = substr(md5($sp4558a1), 10, 9); $sp954d33 = ''; for ($spec1f96 = 0; $spec1f96 < 9; $spec1f96++) { if ($spec1f96 % 2 == 0) { $sp954d33 = $sp954d33 . $sp31382d[$spec1f96]; } elseif ($spec1f96 % 2 == 1) { $sp954d33 = $sp954d33 . $spa76f23[$spec1f96]; } } $sp701465 = substr($sp954d33, 4, 5); $spbcfc71 = $this->get_x_pos_from_str($sp701465); return $spbcfc71; } private function decodeRandBase($spebbcae) { $sp63187e = substr($spebbcae, 32, 2); $sp2fcd3c = array(); for ($spec1f96 = 0; $spec1f96 < strlen($sp63187e); $spec1f96++) { $spb99ef6 = ord($sp63187e[$spec1f96]); $sp660b66 = $spb99ef6 > 57 ? $spb99ef6 - 87 : $spb99ef6 - 48; array_push($sp2fcd3c, $sp660b66); } $sp53f3d5 = $sp2fcd3c['0'] * 36 + $sp2fcd3c['1']; return $sp53f3d5; } private function triggerError($sp5dc66d) { } }