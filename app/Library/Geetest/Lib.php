<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spb98430, $spdbd3e0) { $this->captcha_id = $spb98430; $this->private_key = $spdbd3e0; } public function pre_process($spaa7e02 = null) { $sp2b97a5 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spaa7e02 != null and is_string($spaa7e02)) { $sp2b97a5 = $sp2b97a5 . '&user_id=' . $spaa7e02; } $sp83b9d9 = $this->send_request($sp2b97a5); if (strlen($sp83b9d9) != 32) { $this->failback_process(); return 0; } $this->success_process($sp83b9d9); return 1; } private function success_process($sp83b9d9) { $sp83b9d9 = md5($sp83b9d9 . $this->private_key); $sp590507 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp83b9d9); $this->response = $sp590507; } private function failback_process() { $sp9a7691 = md5(rand(0, 100)); $sp015d45 = md5(rand(0, 100)); $sp83b9d9 = $sp9a7691 . substr($sp015d45, 0, 2); $sp590507 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp83b9d9); $this->response = $sp590507; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp83b9d9, $spe0f862, $spae8027, $spaa7e02 = null) { if (!$this->check_validate($sp83b9d9, $spe0f862)) { return 0; } $spc9710b = array('seccode' => $spae8027, 'sdk' => self::GT_SDK_VERSION); if ($spaa7e02 != null and is_string($spaa7e02)) { $spc9710b['user_id'] = $spaa7e02; } $sp2b97a5 = 'http://api.geetest.com/validate.php'; $sp15754c = $this->post_request($sp2b97a5, $spc9710b); if ($sp15754c == md5($spae8027)) { return 1; } else { if ($sp15754c == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp83b9d9, $spe0f862, $spae8027) { if ($spe0f862) { $spec49f8 = explode('_', $spe0f862); try { $sp30e5a7 = $this->decode_response($sp83b9d9, $spec49f8['0']); $sp11285b = $this->decode_response($sp83b9d9, $spec49f8['1']); $sp95894b = $this->decode_response($sp83b9d9, $spec49f8['2']); $sp5fea7d = $this->get_failback_pic_ans($sp11285b, $sp95894b); $sp99fa4d = abs($sp30e5a7 - $sp5fea7d); } catch (\Exception $sp803aea) { return 1; } if ($sp99fa4d < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp83b9d9, $spe0f862) { if (strlen($spe0f862) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp83b9d9) != $spe0f862) { return false; } return true; } private function send_request($sp2b97a5) { if (function_exists('curl_exec')) { $sp10b8b7 = curl_init(); curl_setopt($sp10b8b7, CURLOPT_URL, $sp2b97a5); curl_setopt($sp10b8b7, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp10b8b7, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp10b8b7, CURLOPT_RETURNTRANSFER, 1); $spc9710b = curl_exec($sp10b8b7); if (curl_errno($sp10b8b7)) { $sp8c645f = sprintf('curl[%s] error[%s]', $sp2b97a5, curl_errno($sp10b8b7) . ':' . curl_error($sp10b8b7)); $this->triggerError($sp8c645f); } curl_close($sp10b8b7); } else { $sp142666 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp575362 = stream_context_create($sp142666); $spc9710b = file_get_contents($sp2b97a5, false, $sp575362); } return $spc9710b; } private function post_request($sp2b97a5, $sp6aa59c = '') { if (!$sp6aa59c) { return false; } $spc9710b = http_build_query($sp6aa59c); if (function_exists('curl_exec')) { $sp10b8b7 = curl_init(); curl_setopt($sp10b8b7, CURLOPT_URL, $sp2b97a5); curl_setopt($sp10b8b7, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp10b8b7, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp10b8b7, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp6aa59c) { curl_setopt($sp10b8b7, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp10b8b7, CURLOPT_POST, 1); curl_setopt($sp10b8b7, CURLOPT_POSTFIELDS, $spc9710b); } $spc9710b = curl_exec($sp10b8b7); if (curl_errno($sp10b8b7)) { $sp8c645f = sprintf('curl[%s] error[%s]', $sp2b97a5, curl_errno($sp10b8b7) . ':' . curl_error($sp10b8b7)); $this->triggerError($sp8c645f); } curl_close($sp10b8b7); } else { if ($sp6aa59c) { $sp142666 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spc9710b) . '
', 'content' => $spc9710b, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp575362 = stream_context_create($sp142666); $spc9710b = file_get_contents($sp2b97a5, false, $sp575362); } } return $spc9710b; } private function decode_response($sp83b9d9, $spb39aa8) { if (strlen($spb39aa8) > 100) { return 0; } $sp854cb4 = array(); $spc0a1ae = array(); $sp74430a = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp0fccd1 = 0; $sp79553b = 0; $sp79d85b = str_split($sp83b9d9); $sp9534ab = str_split($spb39aa8); for ($spc24184 = 0; $spc24184 < strlen($sp83b9d9); $spc24184++) { $spf6fea6 = $sp79d85b[$spc24184]; if (in_array($spf6fea6, $spc0a1ae)) { continue; } else { $spec49f8 = $sp74430a[$sp0fccd1 % 5]; array_push($spc0a1ae, $spf6fea6); $sp0fccd1++; $sp854cb4[$spf6fea6] = $spec49f8; } } for ($sp3318d6 = 0; $sp3318d6 < strlen($spb39aa8); $sp3318d6++) { $sp79553b += $sp854cb4[$sp9534ab[$sp3318d6]]; } $sp79553b = $sp79553b - $this->decodeRandBase($sp83b9d9); return $sp79553b; } private function get_x_pos_from_str($sp7c44b5) { if (strlen($sp7c44b5) != 5) { return 0; } $sp6a8a1e = 0; $sp952d8b = 200; $sp6a8a1e = base_convert($sp7c44b5, 16, 10); $sp590507 = $sp6a8a1e % $sp952d8b; $sp590507 = $sp590507 < 40 ? 40 : $sp590507; return $sp590507; } private function get_failback_pic_ans($sp209e1f, $sp252f6b) { $spb1500d = substr(md5($sp209e1f), 0, 9); $spd94ef0 = substr(md5($sp252f6b), 10, 9); $spc3790d = ''; for ($spc24184 = 0; $spc24184 < 9; $spc24184++) { if ($spc24184 % 2 == 0) { $spc3790d = $spc3790d . $spb1500d[$spc24184]; } elseif ($spc24184 % 2 == 1) { $spc3790d = $spc3790d . $spd94ef0[$spc24184]; } } $sp142298 = substr($spc3790d, 4, 5); $sp5fea7d = $this->get_x_pos_from_str($sp142298); return $sp5fea7d; } private function decodeRandBase($sp83b9d9) { $sp318a23 = substr($sp83b9d9, 32, 2); $sp51a2b8 = array(); for ($spc24184 = 0; $spc24184 < strlen($sp318a23); $spc24184++) { $sp93609a = ord($sp318a23[$spc24184]); $sp590507 = $sp93609a > 57 ? $sp93609a - 87 : $sp93609a - 48; array_push($sp51a2b8, $sp590507); } $spc26cb8 = $sp51a2b8['0'] * 36 + $sp51a2b8['1']; return $spc26cb8; } private function triggerError($sp8c645f) { } }