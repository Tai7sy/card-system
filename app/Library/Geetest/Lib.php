<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp676817, $sp2a9423) { $this->captcha_id = $sp676817; $this->private_key = $sp2a9423; } public function pre_process($sp9935c9 = null) { $sped560b = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp9935c9 != null and is_string($sp9935c9)) { $sped560b = $sped560b . '&user_id=' . $sp9935c9; } $sp6774a6 = $this->send_request($sped560b); if (strlen($sp6774a6) != 32) { $this->failback_process(); return 0; } $this->success_process($sp6774a6); return 1; } private function success_process($sp6774a6) { $sp6774a6 = md5($sp6774a6 . $this->private_key); $sp005b78 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp6774a6); $this->response = $sp005b78; } private function failback_process() { $sp23defb = md5(rand(0, 100)); $sp73f306 = md5(rand(0, 100)); $sp6774a6 = $sp23defb . substr($sp73f306, 0, 2); $sp005b78 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp6774a6); $this->response = $sp005b78; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp6774a6, $sp76fb5c, $spa9dc16, $sp9935c9 = null) { if (!$this->check_validate($sp6774a6, $sp76fb5c)) { return 0; } $spa2d7c5 = array('seccode' => $spa9dc16, 'sdk' => self::GT_SDK_VERSION); if ($sp9935c9 != null and is_string($sp9935c9)) { $spa2d7c5['user_id'] = $sp9935c9; } $sped560b = 'http://api.geetest.com/validate.php'; $sp343882 = $this->post_request($sped560b, $spa2d7c5); if ($sp343882 == md5($spa9dc16)) { return 1; } else { if ($sp343882 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp6774a6, $sp76fb5c, $spa9dc16) { if ($sp76fb5c) { $spa4e7b2 = explode('_', $sp76fb5c); try { $sp21d1c4 = $this->decode_response($sp6774a6, $spa4e7b2['0']); $sp96c45c = $this->decode_response($sp6774a6, $spa4e7b2['1']); $sp3225a2 = $this->decode_response($sp6774a6, $spa4e7b2['2']); $specb98a = $this->get_failback_pic_ans($sp96c45c, $sp3225a2); $sp629c74 = abs($sp21d1c4 - $specb98a); } catch (\Exception $spb62437) { return 1; } if ($sp629c74 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp6774a6, $sp76fb5c) { if (strlen($sp76fb5c) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp6774a6) != $sp76fb5c) { return false; } return true; } private function send_request($sped560b) { if (function_exists('curl_exec')) { $sp669493 = curl_init(); curl_setopt($sp669493, CURLOPT_URL, $sped560b); curl_setopt($sp669493, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp669493, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp669493, CURLOPT_RETURNTRANSFER, 1); $spa2d7c5 = curl_exec($sp669493); if (curl_errno($sp669493)) { $sp8c4f4b = sprintf('curl[%s] error[%s]', $sped560b, curl_errno($sp669493) . ':' . curl_error($sp669493)); $this->triggerError($sp8c4f4b); } curl_close($sp669493); } else { $sp00df0e = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spfac574 = stream_context_create($sp00df0e); $spa2d7c5 = file_get_contents($sped560b, false, $spfac574); } return $spa2d7c5; } private function post_request($sped560b, $sp6857a6 = '') { if (!$sp6857a6) { return false; } $spa2d7c5 = http_build_query($sp6857a6); if (function_exists('curl_exec')) { $sp669493 = curl_init(); curl_setopt($sp669493, CURLOPT_URL, $sped560b); curl_setopt($sp669493, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp669493, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp669493, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp6857a6) { curl_setopt($sp669493, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp669493, CURLOPT_POST, 1); curl_setopt($sp669493, CURLOPT_POSTFIELDS, $spa2d7c5); } $spa2d7c5 = curl_exec($sp669493); if (curl_errno($sp669493)) { $sp8c4f4b = sprintf('curl[%s] error[%s]', $sped560b, curl_errno($sp669493) . ':' . curl_error($sp669493)); $this->triggerError($sp8c4f4b); } curl_close($sp669493); } else { if ($sp6857a6) { $sp00df0e = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spa2d7c5) . '
', 'content' => $spa2d7c5, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spfac574 = stream_context_create($sp00df0e); $spa2d7c5 = file_get_contents($sped560b, false, $spfac574); } } return $spa2d7c5; } private function decode_response($sp6774a6, $sp9afadd) { if (strlen($sp9afadd) > 100) { return 0; } $spb2019f = array(); $spffed5c = array(); $sp98b082 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp3bfbd2 = 0; $sp55b2c5 = 0; $sp27a764 = str_split($sp6774a6); $sp323033 = str_split($sp9afadd); for ($spda68a1 = 0; $spda68a1 < strlen($sp6774a6); $spda68a1++) { $sp1a74be = $sp27a764[$spda68a1]; if (in_array($sp1a74be, $spffed5c)) { continue; } else { $spa4e7b2 = $sp98b082[$sp3bfbd2 % 5]; array_push($spffed5c, $sp1a74be); $sp3bfbd2++; $spb2019f[$sp1a74be] = $spa4e7b2; } } for ($sp855863 = 0; $sp855863 < strlen($sp9afadd); $sp855863++) { $sp55b2c5 += $spb2019f[$sp323033[$sp855863]]; } $sp55b2c5 = $sp55b2c5 - $this->decodeRandBase($sp6774a6); return $sp55b2c5; } private function get_x_pos_from_str($sp25ccc9) { if (strlen($sp25ccc9) != 5) { return 0; } $sp1c1787 = 0; $sp59e71d = 200; $sp1c1787 = base_convert($sp25ccc9, 16, 10); $sp005b78 = $sp1c1787 % $sp59e71d; $sp005b78 = $sp005b78 < 40 ? 40 : $sp005b78; return $sp005b78; } private function get_failback_pic_ans($sp182e7d, $sp7a3c4d) { $spe941a6 = substr(md5($sp182e7d), 0, 9); $sp2b8b55 = substr(md5($sp7a3c4d), 10, 9); $sp93848c = ''; for ($spda68a1 = 0; $spda68a1 < 9; $spda68a1++) { if ($spda68a1 % 2 == 0) { $sp93848c = $sp93848c . $spe941a6[$spda68a1]; } elseif ($spda68a1 % 2 == 1) { $sp93848c = $sp93848c . $sp2b8b55[$spda68a1]; } } $sp6663b8 = substr($sp93848c, 4, 5); $specb98a = $this->get_x_pos_from_str($sp6663b8); return $specb98a; } private function decodeRandBase($sp6774a6) { $sp466e9b = substr($sp6774a6, 32, 2); $spe52e6a = array(); for ($spda68a1 = 0; $spda68a1 < strlen($sp466e9b); $spda68a1++) { $spfe02cd = ord($sp466e9b[$spda68a1]); $sp005b78 = $spfe02cd > 57 ? $spfe02cd - 87 : $spfe02cd - 48; array_push($spe52e6a, $sp005b78); } $sp7c992c = $spe52e6a['0'] * 36 + $spe52e6a['1']; return $sp7c992c; } private function triggerError($sp8c4f4b) { } }