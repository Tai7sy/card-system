<?php
namespace App\Library; use Illuminate\Support\Facades\Log; class CurlRequest { private static function curl($spedbcde, $sp0bd63e = 0, $spb36c36 = '', $spa1a278 = array(), $sp41bfae = 5, &$sp65d768 = false) { if (!isset($spa1a278['Accept'])) { $spa1a278['Accept'] = '*/*'; } if (!isset($spa1a278['Referer'])) { $spa1a278['Referer'] = $spedbcde; } if (!isset($spa1a278['Content-Type'])) { $spa1a278['Content-Type'] = 'application/x-www-form-urlencoded'; } if (!isset($spa1a278['User-Agent'])) { $spa1a278['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'; } if ($sp65d768 !== false) { $spa1a278['Cookie'] = $sp65d768; } $sp26e5f5 = array(); foreach ($spa1a278 as $spa287af => $sp51407e) { $sp26e5f5[] = $spa287af . ': ' . $sp51407e; } $sp26e5f5[] = 'Expect:'; $spbfabb9 = curl_init(); curl_setopt($spbfabb9, CURLOPT_URL, $spedbcde); curl_setopt($spbfabb9, CURLOPT_SSL_VERIFYPEER, true); curl_setopt($spbfabb9, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($spbfabb9, CURLOPT_FOLLOWLOCATION, true); curl_setopt($spbfabb9, CURLOPT_MAXREDIRS, 3); if ($sp0bd63e == 1) { curl_setopt($spbfabb9, CURLOPT_CUSTOMREQUEST, 'POST'); curl_setopt($spbfabb9, CURLOPT_POST, 1); if ($spb36c36 !== '') { curl_setopt($spbfabb9, CURLOPT_POSTFIELDS, $spb36c36); curl_setopt($spbfabb9, CURLOPT_POSTREDIR, 3); } } if (defined('MY_PROXY')) { $spaa1ddf = MY_PROXY; $spaa9e20 = CURLPROXY_HTTP; if (strpos($spaa1ddf, 'http://') || strpos($spaa1ddf, 'https://')) { $spaa1ddf = str_replace('http://', $spaa1ddf, $spaa1ddf); $spaa1ddf = str_replace('https://', $spaa1ddf, $spaa1ddf); $spaa9e20 = CURLPROXY_HTTP; } elseif (strpos($spaa1ddf, 'socks4://')) { $spaa1ddf = str_replace('socks4://', $spaa1ddf, $spaa1ddf); $spaa9e20 = CURLPROXY_SOCKS4; } elseif (strpos($spaa1ddf, 'socks4a://')) { $spaa1ddf = str_replace('socks4a://', $spaa1ddf, $spaa1ddf); $spaa9e20 = CURLPROXY_SOCKS4A; } elseif (strpos($spaa1ddf, 'socks5://')) { $spaa1ddf = str_replace('socks5://', $spaa1ddf, $spaa1ddf); $spaa9e20 = CURLPROXY_SOCKS5_HOSTNAME; } curl_setopt($spbfabb9, CURLOPT_PROXY, $spaa1ddf); curl_setopt($spbfabb9, CURLOPT_PROXYTYPE, $spaa9e20); if (defined('MY_PROXY_PASS')) { curl_setopt($spbfabb9, CURLOPT_PROXYUSERPWD, MY_PROXY_PASS); } } curl_setopt($spbfabb9, CURLOPT_TIMEOUT, $sp41bfae); curl_setopt($spbfabb9, CURLOPT_CONNECTTIMEOUT, $sp41bfae); curl_setopt($spbfabb9, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spbfabb9, CURLOPT_HEADER, 1); curl_setopt($spbfabb9, CURLOPT_HTTPHEADER, $sp26e5f5); $sp1098f1 = curl_exec($spbfabb9); $spa13734 = curl_getinfo($spbfabb9, CURLINFO_HEADER_SIZE); $spbe6d29 = substr($sp1098f1, 0, $spa13734); $spd8d6f4 = substr($sp1098f1, $spa13734); curl_close($spbfabb9); if ($sp65d768 !== false) { $spa1a278 = explode('
', $spbe6d29); $spf3a629 = ''; foreach ($spa1a278 as $spbe6d29) { if (strpos($spbe6d29, 'Set-Cookie') !== false) { if (strpos($spbe6d29, ';') !== false) { $spf3a629 = $spf3a629 . trim(Helper::str_between($spbe6d29, 'Set-Cookie:', ';')) . ';'; } else { $spf3a629 = $spf3a629 . trim(str_replace('Set-Cookie:', '', $spbe6d29)) . ';'; } } } $sp65d768 = self::combineCookie($sp65d768, $spf3a629); } return $spd8d6f4; } public static function get($spedbcde, $spa1a278 = array(), $sp41bfae = 5, &$sp65d768 = false) { return self::curl($spedbcde, 0, '', $spa1a278, $sp41bfae, $sp65d768); } public static function post($spedbcde, $spb36c36 = '', $spa1a278 = array(), $sp41bfae = 5, &$sp65d768 = false) { return self::curl($spedbcde, 1, $spb36c36, $spa1a278, $sp41bfae, $sp65d768); } public static function combineCookie($spaf9363, $sp602072) { $spd144cd = explode(';', $spaf9363); $sp4dc88c = explode(';', $sp602072); foreach ($spd144cd as $spdd9e67) { if (self::cookieIsExists($sp4dc88c, self::cookieGetName($spdd9e67)) == false) { array_push($sp4dc88c, $spdd9e67); } } $spf2e0c8 = ''; foreach ($sp4dc88c as $spdd9e67) { if (substr($spdd9e67, -8, 8) != '=deleted' && strlen($spdd9e67) > 1) { $spf2e0c8 .= $spdd9e67 . '; '; } } return substr($spf2e0c8, 0, strlen($spf2e0c8) - 2); } public static function cookieGetName($sp010f91) { $sp320118 = strpos($sp010f91, '='); return substr($sp010f91, 0, $sp320118); } public static function cookieGetValue($sp010f91) { $sp320118 = strpos($sp010f91, '='); $spdd145b = substr($sp010f91, $sp320118 + 1, strlen($sp010f91) - $sp320118); return $spdd145b; } public static function cookieGet($sp65d768, $spf9ff9c, $spe8294e = false) { $sp65d768 = str_replace(' ', '', $sp65d768); if (substr($sp65d768, -1, 1) != ';') { $sp65d768 = ';' . $sp65d768 . ';'; } else { $sp65d768 = ';' . $sp65d768; } $sp273b97 = Helper::str_between($sp65d768, ';' . $spf9ff9c . '=', ';'); if (!$spe8294e || $sp273b97 == '') { return $sp273b97; } else { return $spf9ff9c . '=' . $sp273b97; } } private static function cookieIsExists($sp5852ae, $sp08d9a5) { foreach ($sp5852ae as $spdd9e67) { if (self::cookieGetName($spdd9e67) == $sp08d9a5) { return true; } } return false; } function test() { $spdd145b = self::combineCookie('a=1;b=2;c=3', 'c=5'); var_dump($spdd145b); } }