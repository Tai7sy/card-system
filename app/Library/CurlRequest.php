<?php
namespace App\Library; use Illuminate\Support\Facades\Log; class CurlRequest { private static function curl($spcd8f2b, $sp8ecf64 = 0, $sp8611fd = '', $sp234b3d = array(), $sp51df04 = 5, &$spf59f0a = false) { if (!isset($sp234b3d['Accept'])) { $sp234b3d['Accept'] = '*/*'; } if (!isset($sp234b3d['Referer'])) { $sp234b3d['Referer'] = $spcd8f2b; } if (!isset($sp234b3d['Content-Type'])) { $sp234b3d['Content-Type'] = 'application/x-www-form-urlencoded'; } if (!isset($sp234b3d['User-Agent'])) { $sp234b3d['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'; } if ($spf59f0a !== false) { $sp234b3d['Cookie'] = $spf59f0a; } $sp095013 = array(); foreach ($sp234b3d as $spcf7611 => $sp7c9d1e) { $sp095013[] = $spcf7611 . ': ' . $sp7c9d1e; } $sp095013[] = 'Expect:'; $spe61199 = curl_init(); curl_setopt($spe61199, CURLOPT_URL, $spcd8f2b); curl_setopt($spe61199, CURLOPT_SSL_VERIFYPEER, true); curl_setopt($spe61199, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($spe61199, CURLOPT_FOLLOWLOCATION, true); curl_setopt($spe61199, CURLOPT_MAXREDIRS, 3); if ($sp8ecf64 == 1) { curl_setopt($spe61199, CURLOPT_CUSTOMREQUEST, 'POST'); curl_setopt($spe61199, CURLOPT_POST, 1); if ($sp8611fd !== '') { curl_setopt($spe61199, CURLOPT_POSTFIELDS, $sp8611fd); curl_setopt($spe61199, CURLOPT_POSTREDIR, 3); } } if (defined('MY_PROXY')) { $spddb474 = MY_PROXY; $sp46bde2 = CURLPROXY_HTTP; if (strpos($spddb474, 'http://') || strpos($spddb474, 'https://')) { $spddb474 = str_replace('http://', $spddb474, $spddb474); $spddb474 = str_replace('https://', $spddb474, $spddb474); $sp46bde2 = CURLPROXY_HTTP; } elseif (strpos($spddb474, 'socks4://')) { $spddb474 = str_replace('socks4://', $spddb474, $spddb474); $sp46bde2 = CURLPROXY_SOCKS4; } elseif (strpos($spddb474, 'socks4a://')) { $spddb474 = str_replace('socks4a://', $spddb474, $spddb474); $sp46bde2 = CURLPROXY_SOCKS4A; } elseif (strpos($spddb474, 'socks5://')) { $spddb474 = str_replace('socks5://', $spddb474, $spddb474); $sp46bde2 = CURLPROXY_SOCKS5_HOSTNAME; } curl_setopt($spe61199, CURLOPT_PROXY, $spddb474); curl_setopt($spe61199, CURLOPT_PROXYTYPE, $sp46bde2); if (defined('MY_PROXY_PASS')) { curl_setopt($spe61199, CURLOPT_PROXYUSERPWD, MY_PROXY_PASS); } } curl_setopt($spe61199, CURLOPT_TIMEOUT, $sp51df04); curl_setopt($spe61199, CURLOPT_CONNECTTIMEOUT, $sp51df04); curl_setopt($spe61199, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spe61199, CURLOPT_HEADER, 1); curl_setopt($spe61199, CURLOPT_HTTPHEADER, $sp095013); $sp7e6440 = curl_exec($spe61199); $sp1c216c = curl_getinfo($spe61199, CURLINFO_HEADER_SIZE); $sp4c08ed = substr($sp7e6440, 0, $sp1c216c); $sped47cf = substr($sp7e6440, $sp1c216c); curl_close($spe61199); if ($spf59f0a !== false) { $sp234b3d = explode('
', $sp4c08ed); $sp4f3005 = ''; foreach ($sp234b3d as $sp4c08ed) { if (strpos($sp4c08ed, 'Set-Cookie') !== false) { if (strpos($sp4c08ed, ';') !== false) { $sp4f3005 = $sp4f3005 . trim(Helper::str_between($sp4c08ed, 'Set-Cookie:', ';')) . ';'; } else { $sp4f3005 = $sp4f3005 . trim(str_replace('Set-Cookie:', '', $sp4c08ed)) . ';'; } } } $spf59f0a = self::combineCookie($spf59f0a, $sp4f3005); } return $sped47cf; } public static function get($spcd8f2b, $sp234b3d = array(), $sp51df04 = 5, &$spf59f0a = false) { return self::curl($spcd8f2b, 0, '', $sp234b3d, $sp51df04, $spf59f0a); } public static function post($spcd8f2b, $sp8611fd = '', $sp234b3d = array(), $sp51df04 = 5, &$spf59f0a = false) { return self::curl($spcd8f2b, 1, $sp8611fd, $sp234b3d, $sp51df04, $spf59f0a); } public static function combineCookie($spb56bb5, $speb6314) { $sp690372 = explode(';', $spb56bb5); $sp4c2ec3 = explode(';', $speb6314); foreach ($sp690372 as $sp341cb4) { if (self::cookieIsExists($sp4c2ec3, self::cookieGetName($sp341cb4)) == false) { array_push($sp4c2ec3, $sp341cb4); } } $sp203f7a = ''; foreach ($sp4c2ec3 as $sp341cb4) { if (substr($sp341cb4, -8, 8) != '=deleted' && strlen($sp341cb4) > 1) { $sp203f7a .= $sp341cb4 . '; '; } } return substr($sp203f7a, 0, strlen($sp203f7a) - 2); } public static function cookieGetName($sp7c0161) { $sp4d8a3d = strpos($sp7c0161, '='); return substr($sp7c0161, 0, $sp4d8a3d); } public static function cookieGetValue($sp7c0161) { $sp4d8a3d = strpos($sp7c0161, '='); $sp566318 = substr($sp7c0161, $sp4d8a3d + 1, strlen($sp7c0161) - $sp4d8a3d); return $sp566318; } public static function cookieGet($spf59f0a, $sp4fd574, $spa812ec = false) { $spf59f0a = str_replace(' ', '', $spf59f0a); if (substr($spf59f0a, -1, 1) != ';') { $spf59f0a = ';' . $spf59f0a . ';'; } else { $spf59f0a = ';' . $spf59f0a; } $spfb1492 = Helper::str_between($spf59f0a, ';' . $sp4fd574 . '=', ';'); if (!$spa812ec || $spfb1492 == '') { return $spfb1492; } else { return $sp4fd574 . '=' . $spfb1492; } } private static function cookieIsExists($sp44e295, $spb35b98) { foreach ($sp44e295 as $sp341cb4) { if (self::cookieGetName($sp341cb4) == $spb35b98) { return true; } } return false; } function test() { $sp566318 = self::combineCookie('a=1;b=2;c=3', 'c=5'); var_dump($sp566318); } }