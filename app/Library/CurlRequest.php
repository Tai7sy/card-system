<?php
namespace App\Library; use Illuminate\Support\Facades\Log; class CurlRequest { private static function curl($sp18a6d4, $sp336ec4 = 0, $spadb9aa = '', $spa9286c = array(), $sp6cf481 = 5, &$spa21d61 = false) { if (!isset($spa9286c['Accept'])) { $spa9286c['Accept'] = '*/*'; } if (!isset($spa9286c['Referer'])) { $spa9286c['Referer'] = $sp18a6d4; } if (!isset($spa9286c['Content-Type'])) { $spa9286c['Content-Type'] = 'application/x-www-form-urlencoded'; } if (!isset($spa9286c['User-Agent'])) { $spa9286c['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'; } if ($spa21d61 !== false) { $spa9286c['Cookie'] = $spa21d61; } $sp924b3c = array(); foreach ($spa9286c as $sp32af09 => $spee2c0d) { $sp924b3c[] = $sp32af09 . ': ' . $spee2c0d; } $sp924b3c[] = 'Expect:'; $sp29ffe2 = curl_init(); curl_setopt($sp29ffe2, CURLOPT_URL, $sp18a6d4); curl_setopt($sp29ffe2, CURLOPT_SSL_VERIFYPEER, true); curl_setopt($sp29ffe2, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($sp29ffe2, CURLOPT_FOLLOWLOCATION, true); curl_setopt($sp29ffe2, CURLOPT_MAXREDIRS, 3); if ($sp336ec4 == 1) { curl_setopt($sp29ffe2, CURLOPT_CUSTOMREQUEST, 'POST'); curl_setopt($sp29ffe2, CURLOPT_POST, 1); if ($spadb9aa !== '') { curl_setopt($sp29ffe2, CURLOPT_POSTFIELDS, $spadb9aa); curl_setopt($sp29ffe2, CURLOPT_POSTREDIR, 3); } } if (defined('MY_PROXY')) { $sp2aed21 = MY_PROXY; $sp89f765 = CURLPROXY_HTTP; if (strpos($sp2aed21, 'http://') || strpos($sp2aed21, 'https://')) { $sp2aed21 = str_replace('http://', $sp2aed21, $sp2aed21); $sp2aed21 = str_replace('https://', $sp2aed21, $sp2aed21); $sp89f765 = CURLPROXY_HTTP; } elseif (strpos($sp2aed21, 'socks4://')) { $sp2aed21 = str_replace('socks4://', $sp2aed21, $sp2aed21); $sp89f765 = CURLPROXY_SOCKS4; } elseif (strpos($sp2aed21, 'socks4a://')) { $sp2aed21 = str_replace('socks4a://', $sp2aed21, $sp2aed21); $sp89f765 = CURLPROXY_SOCKS4A; } elseif (strpos($sp2aed21, 'socks5://')) { $sp2aed21 = str_replace('socks5://', $sp2aed21, $sp2aed21); $sp89f765 = CURLPROXY_SOCKS5_HOSTNAME; } curl_setopt($sp29ffe2, CURLOPT_PROXY, $sp2aed21); curl_setopt($sp29ffe2, CURLOPT_PROXYTYPE, $sp89f765); if (defined('MY_PROXY_PASS')) { curl_setopt($sp29ffe2, CURLOPT_PROXYUSERPWD, MY_PROXY_PASS); } } curl_setopt($sp29ffe2, CURLOPT_TIMEOUT, $sp6cf481); curl_setopt($sp29ffe2, CURLOPT_CONNECTTIMEOUT, $sp6cf481); curl_setopt($sp29ffe2, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp29ffe2, CURLOPT_HEADER, 1); curl_setopt($sp29ffe2, CURLOPT_HTTPHEADER, $sp924b3c); $sp945da0 = curl_exec($sp29ffe2); $sp65c03b = curl_getinfo($sp29ffe2, CURLINFO_HEADER_SIZE); $spdd6f6b = substr($sp945da0, 0, $sp65c03b); $spdd5373 = substr($sp945da0, $sp65c03b); curl_close($sp29ffe2); if ($spa21d61 !== false) { $spa9286c = explode('
', $spdd6f6b); $sp18dc00 = ''; foreach ($spa9286c as $spdd6f6b) { if (strpos($spdd6f6b, 'Set-Cookie') !== false) { if (strpos($spdd6f6b, ';') !== false) { $sp18dc00 = $sp18dc00 . trim(Helper::str_between($spdd6f6b, 'Set-Cookie:', ';')) . ';'; } else { $sp18dc00 = $sp18dc00 . trim(str_replace('Set-Cookie:', '', $spdd6f6b)) . ';'; } } } $spa21d61 = self::combineCookie($spa21d61, $sp18dc00); } return $spdd5373; } public static function get($sp18a6d4, $spa9286c = array(), $sp6cf481 = 5, &$spa21d61 = false) { return self::curl($sp18a6d4, 0, '', $spa9286c, $sp6cf481, $spa21d61); } public static function post($sp18a6d4, $spadb9aa = '', $spa9286c = array(), $sp6cf481 = 5, &$spa21d61 = false) { return self::curl($sp18a6d4, 1, $spadb9aa, $spa9286c, $sp6cf481, $spa21d61); } public static function combineCookie($sp3d6576, $spd6325e) { $sp3bc90f = explode(';', $sp3d6576); $sp4d89f8 = explode(';', $spd6325e); foreach ($sp3bc90f as $sp2a2996) { if (self::cookieIsExists($sp4d89f8, self::cookieGetName($sp2a2996)) == false) { array_push($sp4d89f8, $sp2a2996); } } $spf85817 = ''; foreach ($sp4d89f8 as $sp2a2996) { if (substr($sp2a2996, -8, 8) != '=deleted' && strlen($sp2a2996) > 1) { $spf85817 .= $sp2a2996 . '; '; } } return substr($spf85817, 0, strlen($spf85817) - 2); } public static function cookieGetName($sp29cdea) { $spffe063 = strpos($sp29cdea, '='); return substr($sp29cdea, 0, $spffe063); } public static function cookieGetValue($sp29cdea) { $spffe063 = strpos($sp29cdea, '='); $sp52ecc6 = substr($sp29cdea, $spffe063 + 1, strlen($sp29cdea) - $spffe063); return $sp52ecc6; } public static function cookieGet($spa21d61, $sp8951ca, $sp17f494 = false) { $spa21d61 = str_replace(' ', '', $spa21d61); if (substr($spa21d61, -1, 1) != ';') { $spa21d61 = ';' . $spa21d61 . ';'; } else { $spa21d61 = ';' . $spa21d61; } $sp0cc5fb = Helper::str_between($spa21d61, ';' . $sp8951ca . '=', ';'); if (!$sp17f494 || $sp0cc5fb == '') { return $sp0cc5fb; } else { return $sp8951ca . '=' . $sp0cc5fb; } } private static function cookieIsExists($sp29aaae, $speb3973) { foreach ($sp29aaae as $sp2a2996) { if (self::cookieGetName($sp2a2996) == $speb3973) { return true; } } return false; } function test() { $sp52ecc6 = self::combineCookie('a=1;b=2;c=3', 'c=5'); var_dump($sp52ecc6); } }