<?php
namespace App\Library; use Illuminate\Support\Facades\Log; class CurlRequest { private static function curl($sp8042f4, $spafe0fc = 0, $spdeb063 = '', $spdcbcbb = array(), $sp6d5528 = 5, &$sp02f623 = false) { if (!isset($spdcbcbb['Accept'])) { $spdcbcbb['Accept'] = '*/*'; } if (!isset($spdcbcbb['Referer'])) { $spdcbcbb['Referer'] = $sp8042f4; } if (!isset($spdcbcbb['Content-Type'])) { $spdcbcbb['Content-Type'] = 'application/x-www-form-urlencoded'; } if (!isset($spdcbcbb['User-Agent'])) { $spdcbcbb['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'; } if ($sp02f623 !== false) { $spdcbcbb['Cookie'] = $sp02f623; } $sp36aeb0 = array(); foreach ($spdcbcbb as $sp1f3886 => $sp202be0) { $sp36aeb0[] = $sp1f3886 . ': ' . $sp202be0; } $sp36aeb0[] = 'Expect:'; $spee7fa4 = curl_init(); curl_setopt($spee7fa4, CURLOPT_URL, $sp8042f4); curl_setopt($spee7fa4, CURLOPT_SSL_VERIFYPEER, true); curl_setopt($spee7fa4, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($spee7fa4, CURLOPT_FOLLOWLOCATION, true); curl_setopt($spee7fa4, CURLOPT_MAXREDIRS, 3); if ($spafe0fc == 1) { curl_setopt($spee7fa4, CURLOPT_CUSTOMREQUEST, 'POST'); curl_setopt($spee7fa4, CURLOPT_POST, 1); if ($spdeb063 !== '') { curl_setopt($spee7fa4, CURLOPT_POSTFIELDS, $spdeb063); curl_setopt($spee7fa4, CURLOPT_POSTREDIR, 3); } } if (defined('MY_PROXY')) { $sp2fa40b = MY_PROXY; $sp80385a = CURLPROXY_HTTP; if (strpos($sp2fa40b, 'http://') || strpos($sp2fa40b, 'https://')) { $sp2fa40b = str_replace('http://', $sp2fa40b, $sp2fa40b); $sp2fa40b = str_replace('https://', $sp2fa40b, $sp2fa40b); $sp80385a = CURLPROXY_HTTP; } elseif (strpos($sp2fa40b, 'socks4://')) { $sp2fa40b = str_replace('socks4://', $sp2fa40b, $sp2fa40b); $sp80385a = CURLPROXY_SOCKS4; } elseif (strpos($sp2fa40b, 'socks4a://')) { $sp2fa40b = str_replace('socks4a://', $sp2fa40b, $sp2fa40b); $sp80385a = CURLPROXY_SOCKS4A; } elseif (strpos($sp2fa40b, 'socks5://')) { $sp2fa40b = str_replace('socks5://', $sp2fa40b, $sp2fa40b); $sp80385a = CURLPROXY_SOCKS5_HOSTNAME; } curl_setopt($spee7fa4, CURLOPT_PROXY, $sp2fa40b); curl_setopt($spee7fa4, CURLOPT_PROXYTYPE, $sp80385a); if (defined('MY_PROXY_PASS')) { curl_setopt($spee7fa4, CURLOPT_PROXYUSERPWD, MY_PROXY_PASS); } } curl_setopt($spee7fa4, CURLOPT_TIMEOUT, $sp6d5528); curl_setopt($spee7fa4, CURLOPT_CONNECTTIMEOUT, $sp6d5528); curl_setopt($spee7fa4, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spee7fa4, CURLOPT_HEADER, 1); curl_setopt($spee7fa4, CURLOPT_HTTPHEADER, $sp36aeb0); $spfae0a4 = curl_exec($spee7fa4); $sp691465 = curl_getinfo($spee7fa4, CURLINFO_HEADER_SIZE); $spd641e0 = substr($spfae0a4, 0, $sp691465); $sp2dc081 = substr($spfae0a4, $sp691465); curl_close($spee7fa4); if ($sp02f623 !== false) { $spdcbcbb = explode('
', $spd641e0); $spba0c34 = ''; foreach ($spdcbcbb as $spd641e0) { if (strpos($spd641e0, 'Set-Cookie') !== false) { if (strpos($spd641e0, ';') !== false) { $spba0c34 = $spba0c34 . trim(Helper::str_between($spd641e0, 'Set-Cookie:', ';')) . ';'; } else { $spba0c34 = $spba0c34 . trim(str_replace('Set-Cookie:', '', $spd641e0)) . ';'; } } } $sp02f623 = self::combineCookie($sp02f623, $spba0c34); } return $sp2dc081; } public static function get($sp8042f4, $spdcbcbb = array(), $sp6d5528 = 5, &$sp02f623 = false) { return self::curl($sp8042f4, 0, '', $spdcbcbb, $sp6d5528, $sp02f623); } public static function post($sp8042f4, $spdeb063 = '', $spdcbcbb = array(), $sp6d5528 = 5, &$sp02f623 = false) { return self::curl($sp8042f4, 1, $spdeb063, $spdcbcbb, $sp6d5528, $sp02f623); } public static function combineCookie($sp628678, $sp7fb2d8) { $sp1992d3 = explode(';', $sp628678); $spa2cfdb = explode(';', $sp7fb2d8); foreach ($sp1992d3 as $spe312f4) { if (self::cookieIsExists($spa2cfdb, self::cookieGetName($spe312f4)) == false) { array_push($spa2cfdb, $spe312f4); } } $spd2dab0 = ''; foreach ($spa2cfdb as $spe312f4) { if (substr($spe312f4, -8, 8) != '=deleted' && strlen($spe312f4) > 1) { $spd2dab0 .= $spe312f4 . '; '; } } return substr($spd2dab0, 0, strlen($spd2dab0) - 2); } public static function cookieGetName($spd8cc20) { $sp07acf6 = strpos($spd8cc20, '='); return substr($spd8cc20, 0, $sp07acf6); } public static function cookieGetValue($spd8cc20) { $sp07acf6 = strpos($spd8cc20, '='); $sp968ff6 = substr($spd8cc20, $sp07acf6 + 1, strlen($spd8cc20) - $sp07acf6); return $sp968ff6; } public static function cookieGet($sp02f623, $sp664a00, $sp0ae3e7 = false) { $sp02f623 = str_replace(' ', '', $sp02f623); if (substr($sp02f623, -1, 1) != ';') { $sp02f623 = ';' . $sp02f623 . ';'; } else { $sp02f623 = ';' . $sp02f623; } $spd6bc12 = Helper::str_between($sp02f623, ';' . $sp664a00 . '=', ';'); if (!$sp0ae3e7 || $spd6bc12 == '') { return $spd6bc12; } else { return $sp664a00 . '=' . $spd6bc12; } } private static function cookieIsExists($sp4d51e3, $sp2fbe31) { foreach ($sp4d51e3 as $spe312f4) { if (self::cookieGetName($spe312f4) == $sp2fbe31) { return true; } } return false; } function test() { $sp968ff6 = self::combineCookie('a=1;b=2;c=3', 'c=5'); var_dump($sp968ff6); } }