<?php
namespace App\Library\Pay\WeChat; require_once __DIR__ . '/lib/WxPay.Api.php'; require_once __DIR__ . '/lib/WxPay.Notify.php'; require_once 'WxLog.php'; class PayNotifyCallBack extends \WxPayNotify { private $successCallback = null; public function __construct($sp04f0f8) { $this->successCallback = $sp04f0f8; } public function QueryOrder($sp8606bd) { $sp134454 = new \WxPayOrderQuery(); $sp134454->SetTransaction_id($sp8606bd); $spbbda25 = \WxPayApi::orderQuery($sp134454); \WxLog::DEBUG('query:' . json_encode($spbbda25)); if (array_key_exists('return_code', $spbbda25) && array_key_exists('result_code', $spbbda25) && $spbbda25['return_code'] == 'SUCCESS' && $spbbda25['result_code'] == 'SUCCESS') { return true; } return false; } public function NotifyProcess($sp5aa598, &$sp093e23) { \WxLog::DEBUG('call back:' . json_encode($sp5aa598)); if (!array_key_exists('transaction_id', $sp5aa598)) { $sp093e23 = '输入参数不正确'; \WxLog::DEBUG('begin process 输入参数不正确'); return false; } if (!$this->QueryOrder($sp5aa598['transaction_id'])) { $sp093e23 = '订单查询失败'; \WxLog::DEBUG('begin process 订单查询失败'); return false; } if ($this->successCallback) { call_user_func_array($this->successCallback, array($sp5aa598['out_trade_no'], $sp5aa598['total_fee'], $sp5aa598['transaction_id'])); } return true; } }