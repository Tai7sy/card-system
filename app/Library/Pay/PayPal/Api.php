<?php
namespace App\Library\Pay\PayPal; use App\Library\CurlRequest; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp53f8aa) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp53f8aa; $this->url_return = SYS_URL . '/pay/return/' . $sp53f8aa; $this->pay_id = $sp53f8aa; } function goPay($spbe80b7, $spa3e681, $sp45f07e, $sp873488, $sp5213ee) { $sp0b8280 = self::getUsd($sp5213ee); $sp429fcc = sprintf('%.2f', $sp0b8280 / 100); \App\Order::where('order_no', $spa3e681)->update(array('pay_trade_no' => $sp429fcc)); if (!isset($spbe80b7['business'])) { throw new \Exception('请填写 business (商家邮箱)'); } die('
<!doctype html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>正在转到付款页</title>
</head>
<body onload="document.pay.submit()">
<form name="pay" action="https://www.paypal.com/cgi-bin/webscr" method="post">
    <input type="hidden" name="cmd" value="_xclick">
    <input type="hidden" name="business" value="' . $spbe80b7['business'] . '">
    <input type="hidden" name="item_name" value="' . $sp45f07e . '">
    <input type="hidden" name="item_number" value="' . $spa3e681 . '">
    <input type="hidden" name="currency_code" value="USD">
    <input type="hidden" name="amount" value="' . $sp429fcc . '">
    <input type="hidden" name="tax" value="0.00">
    <input type="hidden" name="no_note" value="1">
    <input type="hidden" name="no_shipping" value="1">
    <input type="hidden" name="address_override" value="0">
    <input type="hidden" name="charset" value="utf-8">
    <input type="hidden" name="bn" value="PAY">
    <input type="hidden" name="rm" value="2">
    <input type="hidden" name="return" value="' . $this->url_return . '/' . $spa3e681 . '">
    <input type="hidden" name="cancel_return" value="' . $this->url_return . '/' . $spa3e681 . '">
    <input type="hidden" name="notify_url" value="' . $this->url_notify . '">
</form>
</body>
        '); } function verify($spbe80b7, $sp04f0f8) { $sp3bce01 = isset($spbe80b7['isNotify']) && $spbe80b7['isNotify']; if (!$sp3bce01 && @(!isset($_POST['business']))) { return false; } $sp093e69 = file_get_contents('php://input'); $spbb525b = explode('&', $sp093e69); $sp2cd174 = array(); foreach ($spbb525b as $sp687d3e) { $sp687d3e = explode('=', $sp687d3e); if (count($sp687d3e) == 2) { $sp2cd174[$sp687d3e[0]] = urldecode($sp687d3e[1]); } } $spe28521 = 'cmd=_notify-validate'; if (function_exists('get_magic_quotes_gpc')) { $spa78d55 = true; } foreach ($sp2cd174 as $sp1ed429 => $spb914e6) { if ($spa78d55 == true && get_magic_quotes_gpc() == 1) { $spb914e6 = urlencode(stripslashes($spb914e6)); } else { $spb914e6 = urlencode($spb914e6); } $spe28521 .= "&{$sp1ed429}={$spb914e6}"; } $sp9b0943 = curl_init('https://ipnpb.paypal.com/cgi-bin/webscr'); curl_setopt($sp9b0943, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1); curl_setopt($sp9b0943, CURLOPT_POST, 1); curl_setopt($sp9b0943, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp9b0943, CURLOPT_POSTFIELDS, $spe28521); curl_setopt($sp9b0943, CURLOPT_SSL_VERIFYPEER, 1); curl_setopt($sp9b0943, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($sp9b0943, CURLOPT_FORBID_REUSE, 1); curl_setopt($sp9b0943, CURLOPT_HTTPHEADER, array('Connection: Close')); if (!($sp32d1c7 = curl_exec($sp9b0943))) { Log::error('Pay.PayPal.verify notify fail, Got ' . curl_error($sp9b0943) . ' when processing IPN data'); curl_close($sp9b0943); die; } curl_close($sp9b0943); if (strcmp($sp32d1c7, 'VERIFIED') == 0) { if ($sp3bce01) { echo 'IPN OK'; } $sp7c88f3 = $_POST['item_number']; $sp4c3b05 = $_POST['payment_status']; $sp9883b6 = $_POST['mc_gross']; $sp33d34e = $_POST['mc_currency']; $spe02e4c = $_POST['txn_id']; $spae5f1c = $sp3bce01 ? $_POST['receiver_email'] : $_POST['business']; if ($sp4c3b05 !== 'Completed') { Log::debug('Pay.PayPal.verify fail, order_no:' . $sp7c88f3 . ', Payment status is not Completed, current(' . $sp4c3b05 . ')', array('$_POST' => $_POST)); return false; } if ($sp33d34e !== 'USD') { Log::error('Pay.PayPal.verify fail, order_no:' . $sp7c88f3 . ', Payment currency is not USD, current(' . $sp33d34e . ')', array('$_POST' => $_POST)); return false; } $sp4f4c0d = \App\Order::where('order_no', $sp7c88f3)->firstOrFail(); if ($sp4f4c0d->status === \App\Order::STATUS_PAID || $sp4f4c0d->status === \App\Order::STATUS_SUCCESS) { return true; } if ($sp4f4c0d->pay_trade_no !== $sp9883b6) { Log::error('Pay.PayPal.verify fail, order_no:' . $sp7c88f3 . ', Payment amount error (' . $sp4f4c0d->pay_trade_no . '), current(' . $sp9883b6 . ')', array('$_POST' => $_POST)); } if ($spae5f1c !== $spbe80b7['business']) { Log::error('Pay.PayPal.verify fail, order_no:' . $sp7c88f3 . ', payment account is not yours(' . $spbe80b7['business'] . '), current(' . $spae5f1c . ')', array('$_POST' => $_POST)); return false; } $sp04f0f8($sp7c88f3, $sp4f4c0d->paid, $spe02e4c); return true; } else { if (strcmp($sp32d1c7, 'INVALID') == 0) { if ($sp3bce01) { echo 'IPN OK'; } Log::debug('Pay.PayPal.verify notify fail, IPN INVALID', array('$res' => $sp32d1c7, '$_POST' => $_POST)); } else { Log::debug('Pay.PayPal.verify notify fail, Unknown IPN error', array('$res' => $sp32d1c7, '$_POST' => $_POST)); } } return false; } function getUsd($sp7a741d) { $sp5aa598 = @json_decode(CurlRequest::get('https://m.cmbchina.com/api/rate/getfxrate'), true); if (!isset($sp5aa598['data'])) { throw new \Exception('获取汇率失败'); } $sp324446 = 0.2; foreach ($sp5aa598['data'] as $sp4a9ec3) { if ($sp4a9ec3['ZCcyNbr'] === '美元') { $sp324446 = 100 / $sp4a9ec3['ZRtcOfr']; break; } } return $sp7a741d * $sp324446; } }