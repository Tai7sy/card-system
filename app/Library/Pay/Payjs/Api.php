<?php
namespace App\Library\Pay\Payjs; use App\Library\Pay\ApiInterface; require_once __DIR__ . '/sdk/Payjs.php'; use Xhat\Payjs\Payjs; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($sp3c46ab) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp3c46ab; $this->url_return = SYS_URL . '/pay/return/' . $sp3c46ab; } function goPay($sp9d4382, $sp2e47fc, $spd4e90d, $spd0789a, $sp076ec7) { if (!isset($sp9d4382['mchid'])) { throw new \Exception('请填写mchid'); } if (!isset($sp9d4382['key'])) { throw new \Exception('请填写key'); } $sp352639 = new Payjs($sp9d4382); $spf9ca0c = strtolower($sp9d4382['payway']); $sp6fd648 = array('total_fee' => $sp076ec7, 'out_trade_no' => $sp2e47fc, 'body' => $sp2e47fc, 'notify_url' => $this->url_notify, 'callback_url' => SYS_URL . '/pay/result/' . $sp2e47fc); if ($spf9ca0c === 'native') { $sp1da1ef = $sp352639->native($sp6fd648); if (@(int) $sp1da1ef['return_code'] !== 1) { die('<h1>支付渠道出错: ' . $sp1da1ef['msg'] . '</h1>'); } header('location: /qrcode/pay/' . $sp2e47fc . '/payjs/' . base64_encode($sp1da1ef['code_url'])); } elseif ($spf9ca0c === 'cashier') { $sp1da1ef = $sp352639->cashier($sp6fd648); header('Location: ' . $sp1da1ef); } else { die('<h1>请填写支付方式</h1>'); } echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; } function verify($sp9d4382, $sp9a4d97) { $sp7b2182 = isset($sp9d4382['isNotify']) && $sp9d4382['isNotify']; $sp352639 = new Payjs($sp9d4382); if ($sp7b2182) { $spb72f32 = $sp352639->checkSign($_POST); echo $spb72f32 ? 'success' : 'fail'; } else { $spb72f32 = false; } if ($spb72f32) { $sp2e47fc = $_REQUEST['out_trade_no']; $spc686cf = $_REQUEST['total_fee']; $spb41935 = $_REQUEST['payjs_order_id']; $sp9a4d97($sp2e47fc, $spc686cf, $spb41935); return true; } return false; } }