<?php
namespace App\Library\Pay\Payjs; use App\Library\Pay\ApiInterface; require_once __DIR__ . '/sdk/Payjs.php'; use Xhat\Payjs\Payjs; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($sp53f8aa) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp53f8aa; $this->url_return = SYS_URL . '/pay/return/' . $sp53f8aa; } function goPay($spbe80b7, $spa3e681, $sp45f07e, $sp873488, $sp5213ee) { if (!isset($spbe80b7['mchid'])) { throw new \Exception('请填写mchid'); } if (!isset($spbe80b7['key'])) { throw new \Exception('请填写key'); } $sp48c9c5 = new Payjs($spbe80b7); $spdc9a36 = strtolower($spbe80b7['payway']); $sp5aa598 = array('total_fee' => $sp5213ee, 'out_trade_no' => $spa3e681, 'body' => $spa3e681, 'notify_url' => $this->url_notify, 'callback_url' => SYS_URL . '/pay/result/' . $spa3e681); if ($spdc9a36 === 'native') { $spec03eb = $sp48c9c5->native($sp5aa598); if (@(int) $spec03eb['return_code'] !== 1) { die('<h1>支付渠道出错: ' . $spec03eb['msg'] . '</h1>'); } header('location: /qrcode/pay/' . $spa3e681 . '/payjs/' . base64_encode($spec03eb['code_url'])); } elseif ($spdc9a36 === 'cashier') { $spec03eb = $sp48c9c5->cashier($sp5aa598); header('Location: ' . $spec03eb); } else { die('<h1>请填写支付方式</h1>'); } echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; } function verify($spbe80b7, $sp04f0f8) { $sp3bce01 = isset($spbe80b7['isNotify']) && $spbe80b7['isNotify']; $sp48c9c5 = new Payjs($spbe80b7); if ($sp3bce01) { $spbbda25 = $sp48c9c5->checkSign($_POST); echo $spbbda25 ? 'success' : 'fail'; } else { $spbbda25 = false; } if ($spbbda25) { $spa3e681 = $_REQUEST['out_trade_no']; $sp9624ba = $_REQUEST['total_fee']; $spcd94ca = $_REQUEST['payjs_order_id']; $sp04f0f8($spa3e681, $sp9624ba, $spcd94ca); return true; } return false; } }