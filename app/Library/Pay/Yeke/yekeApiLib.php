<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp3e77f9 = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spb34b01 = HttpClient::quickPost(yeke_API_GATE, $sp3e77f9); return $spb34b01; } public static function getPayType() { $sp78c70b = json_decode(self::getPayGate(), true); $spcb019a = array(); if ($sp78c70b['status']) { foreach ($sp78c70b['list'] as $sp7b7024 => $spcb4459) { $spcb019a[] = array('paytype' => $spcb4459['paytype'], 'channelname' => $spcb4459['channelname']); } } return $spcb019a; } public static function getChannel($spb07ff0) { $sp78c70b = json_decode(self::getPayGate(), true); $spcb019a = array(); if ($spb07ff0 == 'card') { if ($sp78c70b['status'] && $sp78c70b['list']) { foreach ($sp78c70b['list'] as $spcb4459) { if ($spcb4459['paytype'] == $spb07ff0) { foreach ($spcb4459['datalist'] as $sp7b7024 => $spdc9e6e) { $spcb019a[] = array('channelid' => $spdc9e6e['channelid'], 'channelname' => $spdc9e6e['channelname'], 'imgurl' => $spdc9e6e['imgurl']); } } } } } else { if ($sp78c70b['status'] && $sp78c70b['list']) { foreach ($sp78c70b['list'] as $spcb4459) { if ($spcb4459['paytype'] == $spb07ff0) { foreach ($spcb4459['datalist'] as $sp7b7024 => $spdc9e6e) { $spcb019a[] = array('bankcode' => $spdc9e6e['bankcode'], 'bankname' => $spdc9e6e['bankname'], 'imgurl' => $spdc9e6e['imgurl']); } } } } } return $spcb019a; } public static function getCardValue() { $sp78c70b = json_decode(self::getPayGate(), true); $spcb019a = array(); if ($sp78c70b['status'] && $sp78c70b['list']) { foreach ($sp78c70b['list'] as $spcb4459) { if ($spcb4459['paytype'] == 'card') { foreach ($spcb4459['datalist'] as $sp7b7024 => $spcb4459) { $spcb019a[] = array('channelid' => $spcb4459['channelid'], 'channelname' => $spcb4459['channelname'], 'cardvalue' => $spcb4459['cardvalue'], 'cardlength' => $spcb4459['cardlength']); } } } } return $spcb019a; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp3e77f9) { $sp3e77f9 = array_merge(array('P_userid' => yeke_USER_ID), $sp3e77f9); $sp75e4cc = $this->makeSign($sp3e77f9); $sp3e77f9 = array_merge($sp3e77f9, array('P_sign' => $sp75e4cc, 'action' => 'payGate')); switch ($sp3e77f9['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp3e77f9); break; case 'card': return $this->payGateCard($sp3e77f9); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp3e77f9) { $sp3868ff = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $sp3868ff .= '<body onload="document.pay.submit()">'; $sp3868ff .= '请稍候，正在跳转...'; $sp3868ff .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp3e77f9 as $sp7b7024 => $spcb4459) { $sp3868ff .= '<input type="hidden" name="' . $sp7b7024 . '" value="' . $spcb4459 . '">'; } $sp3868ff .= '</body></html>'; return $sp3868ff; } public function payGateCard($sp3e77f9) { if ($sp3e77f9['P_cardnum'] == '' || $sp3e77f9['P_cardpwd'] == '' || $sp3e77f9['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spb34b01 = HttpClient::quickPost(yeke_API_GATE, $sp3e77f9); return $spb34b01; } public function makeSign($sp3e77f9) { $sp3868ff = ''; foreach ($sp3e77f9 as $sp7b7024 => $spcb4459) { $sp3868ff .= $sp3868ff ? '&' : ''; $sp3868ff .= $sp7b7024 . '=' . $spcb4459; } $sp75e4cc = md5($sp3868ff . yeke_USER_KEY); return $sp75e4cc; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $sp7b4be7 = $_POST['P_sign']; foreach ($_POST as $sp7b7024 => $spcb4459) { if ($sp7b7024 == 'P_sign') { unset($_POST['P_sign']); } } $spfe89e4 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $sp7b4be7 . '=' . $spfe89e4); if ($sp7b4be7 == $spfe89e4) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $sp7b4be7 = $_GET['P_sign']; foreach ($_GET as $sp7b7024 => $spcb4459) { if ($sp7b7024 == 'P_sign') { unset($_GET['P_sign']); } } $spfe89e4 = $this->makeSign($_GET); if ($sp7b4be7 == $spfe89e4) { return true; } else { return false; } } public function logs($spfbbb1e, $sp3e77f9, $spfe89e4) { date_default_timezone_set('PRC'); if (!empty($sp3e77f9)) { $sp3868ff = ''; foreach ($sp3e77f9 as $sp7b7024 => $spcb4459) { $sp3868ff .= $sp3868ff ? '&' : ''; $sp3868ff .= $sp7b7024 . '=' . $spcb4459; } $sp1ecafd = date('Y-m-d H:i:s') . '
' . $spfbbb1e . '
' . $sp3868ff . '
' . $spfe89e4 . '

........................................

'; $sp8db805 = 'log'; if (!file_exists($sp8db805)) { mkdir($sp8db805, 511, true); } $spe07708 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp82a428 = fopen($sp8db805 . '/' . $spe07708, 'ab'); fwrite($sp82a428, $sp1ecafd); fclose($sp82a428); } } }