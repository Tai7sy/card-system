<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $spc0e525 = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spb72f32 = HttpClient::quickPost(yeke_API_GATE, $spc0e525); return $spb72f32; } public static function getPayType() { $sp293456 = json_decode(self::getPayGate(), true); $sp6fd648 = array(); if ($sp293456['status']) { foreach ($sp293456['list'] as $spf1241f => $sp91e29b) { $sp6fd648[] = array('paytype' => $sp91e29b['paytype'], 'channelname' => $sp91e29b['channelname']); } } return $sp6fd648; } public static function getChannel($sp70089e) { $sp293456 = json_decode(self::getPayGate(), true); $sp6fd648 = array(); if ($sp70089e == 'card') { if ($sp293456['status'] && $sp293456['list']) { foreach ($sp293456['list'] as $sp91e29b) { if ($sp91e29b['paytype'] == $sp70089e) { foreach ($sp91e29b['datalist'] as $spf1241f => $sp385ee0) { $sp6fd648[] = array('channelid' => $sp385ee0['channelid'], 'channelname' => $sp385ee0['channelname'], 'imgurl' => $sp385ee0['imgurl']); } } } } } else { if ($sp293456['status'] && $sp293456['list']) { foreach ($sp293456['list'] as $sp91e29b) { if ($sp91e29b['paytype'] == $sp70089e) { foreach ($sp91e29b['datalist'] as $spf1241f => $sp385ee0) { $sp6fd648[] = array('bankcode' => $sp385ee0['bankcode'], 'bankname' => $sp385ee0['bankname'], 'imgurl' => $sp385ee0['imgurl']); } } } } } return $sp6fd648; } public static function getCardValue() { $sp293456 = json_decode(self::getPayGate(), true); $sp6fd648 = array(); if ($sp293456['status'] && $sp293456['list']) { foreach ($sp293456['list'] as $sp91e29b) { if ($sp91e29b['paytype'] == 'card') { foreach ($sp91e29b['datalist'] as $spf1241f => $sp91e29b) { $sp6fd648[] = array('channelid' => $sp91e29b['channelid'], 'channelname' => $sp91e29b['channelname'], 'cardvalue' => $sp91e29b['cardvalue'], 'cardlength' => $sp91e29b['cardlength']); } } } } return $sp6fd648; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($spc0e525) { $spc0e525 = array_merge(array('P_userid' => yeke_USER_ID), $spc0e525); $sp964415 = $this->makeSign($spc0e525); $spc0e525 = array_merge($spc0e525, array('P_sign' => $sp964415, 'action' => 'payGate')); switch ($spc0e525['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($spc0e525); break; case 'card': return $this->payGateCard($spc0e525); break; default: return 'error,支付方式错误'; } } public function payGateBank($spc0e525) { $sp14800d = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $sp14800d .= '<body onload="document.pay.submit()">'; $sp14800d .= '请稍候，正在跳转...'; $sp14800d .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($spc0e525 as $spf1241f => $sp91e29b) { $sp14800d .= '<input type="hidden" name="' . $spf1241f . '" value="' . $sp91e29b . '">'; } $sp14800d .= '</body></html>'; return $sp14800d; } public function payGateCard($spc0e525) { if ($spc0e525['P_cardnum'] == '' || $spc0e525['P_cardpwd'] == '' || $spc0e525['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spb72f32 = HttpClient::quickPost(yeke_API_GATE, $spc0e525); return $spb72f32; } public function makeSign($spc0e525) { $sp14800d = ''; foreach ($spc0e525 as $spf1241f => $sp91e29b) { $sp14800d .= $sp14800d ? '&' : ''; $sp14800d .= $spf1241f . '=' . $sp91e29b; } $sp964415 = md5($sp14800d . yeke_USER_KEY); return $sp964415; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $spea7f39 = $_POST['P_sign']; foreach ($_POST as $spf1241f => $sp91e29b) { if ($spf1241f == 'P_sign') { unset($_POST['P_sign']); } } $spdb3274 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $spea7f39 . '=' . $spdb3274); if ($spea7f39 == $spdb3274) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $spea7f39 = $_GET['P_sign']; foreach ($_GET as $spf1241f => $sp91e29b) { if ($spf1241f == 'P_sign') { unset($_GET['P_sign']); } } $spdb3274 = $this->makeSign($_GET); if ($spea7f39 == $spdb3274) { return true; } else { return false; } } public function logs($spb8bbef, $spc0e525, $spdb3274) { date_default_timezone_set('PRC'); if (!empty($spc0e525)) { $sp14800d = ''; foreach ($spc0e525 as $spf1241f => $sp91e29b) { $sp14800d .= $sp14800d ? '&' : ''; $sp14800d .= $spf1241f . '=' . $sp91e29b; } $sp91a581 = date('Y-m-d H:i:s') . '
' . $spb8bbef . '
' . $sp14800d . '
' . $spdb3274 . '

........................................

'; $spc6e224 = 'log'; if (!file_exists($spc6e224)) { mkdir($spc6e224, 511, true); } $sp246163 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp26c226 = fopen($spc6e224 . '/' . $sp246163, 'ab'); fwrite($sp26c226, $sp91a581); fclose($sp26c226); } } }