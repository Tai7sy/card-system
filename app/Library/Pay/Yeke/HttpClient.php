<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp4e8324, $spa2fa23 = 80) { $this->host = $sp4e8324; $this->port = $spa2fa23; } function get($sp61aa55, $sp5aa598 = false) { $this->path = $sp61aa55; $this->method = 'GET'; if ($sp5aa598) { $this->path .= '?' . $this->buildQueryString($sp5aa598); } return $this->doRequest(); } function post($sp61aa55, $sp5aa598) { $this->path = $sp61aa55; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp5aa598); return $this->doRequest(); } function buildQueryString($sp5aa598) { $sp5b503e = ''; if (is_array($sp5aa598)) { foreach ($sp5aa598 as $sp1ed429 => $sp36ecf9) { if (is_array($sp36ecf9)) { foreach ($sp36ecf9 as $sp25c5d6) { $sp5b503e .= urlencode($sp1ed429) . '=' . $sp25c5d6 . '&'; } } else { $sp5b503e .= urlencode($sp1ed429) . '=' . $sp36ecf9 . '&'; } } $sp5b503e = substr($sp5b503e, 0, -1); } else { $sp5b503e = $sp5aa598; } return $sp5b503e; } function doRequest() { if (!($sp8cc2df = @fsockopen($this->host, $this->port, $sp90ecdf, $sp3c0949, $this->timeout))) { switch ($sp90ecdf) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $sp90ecdf . ')'; $this->errormsg .= ' ' . $sp3c0949; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp8cc2df, $this->timeout); $spfeab54 = $this->buildRequest(); $this->debug('Request', $spfeab54); fwrite($sp8cc2df, $spfeab54); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $spa68b2c = true; $spd092d1 = true; while (!feof($sp8cc2df)) { $sp6e92a4 = fgets($sp8cc2df, 4096); if ($spd092d1) { $spd092d1 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $sp6e92a4, $sp57a158)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($sp6e92a4); $this->debug($this->errormsg); return false; } $this->status = $sp57a158[2]; $this->debug(trim($sp6e92a4)); continue; } if ($spa68b2c) { if (trim($sp6e92a4) == '') { $spa68b2c = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $sp6e92a4, $sp57a158)) { continue; } $sp1ed429 = strtolower(trim($sp57a158[1])); $sp36ecf9 = trim($sp57a158[2]); if (isset($this->headers[$sp1ed429])) { if (is_array($this->headers[$sp1ed429])) { $this->headers[$sp1ed429][] = $sp36ecf9; } else { $this->headers[$sp1ed429] = array($this->headers[$sp1ed429], $sp36ecf9); } } else { $this->headers[$sp1ed429] = $sp36ecf9; } continue; } $this->content .= $sp6e92a4; } fclose($sp8cc2df); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $spd8b08b = $this->headers['set-cookie']; if (!is_array($spd8b08b)) { $spd8b08b = array($spd8b08b); } foreach ($spd8b08b as $spe0ae41) { if (preg_match('/([^=]+)=([^;]+);/', $spe0ae41, $sp57a158)) { $this->cookies[$sp57a158[1]] = $sp57a158[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $sp39a027 = isset($this->headers['location']) ? $this->headers['location'] : ''; $spf616f4 = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($sp39a027 || $spf616f4) { $sp3db1b2 = parse_url($sp39a027 . $spf616f4); return $this->get($sp3db1b2['path']); } } return true; } function buildRequest() { $sp28070b = array(); $sp28070b[] = "{$this->method} {$this->path} HTTP/1.0"; $sp28070b[] = "Host: {$this->host}"; $sp28070b[] = "User-Agent: {$this->user_agent}"; $sp28070b[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp28070b[] = "Accept-encoding: {$this->accept_encoding}"; } $sp28070b[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp28070b[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spe0ae41 = 'Cookie: '; foreach ($this->cookies as $sp1ed429 => $spb914e6) { $spe0ae41 .= "{$sp1ed429}={$spb914e6}; "; } $sp28070b[] = $spe0ae41; } if ($this->username && $this->password) { $sp28070b[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp28070b[] = 'Content-Type: application/x-www-form-urlencoded'; $sp28070b[] = 'Content-Length: ' . strlen($this->postdata); } $spfeab54 = implode('
', $sp28070b) . '

' . $this->postdata; return $spfeab54; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp79148a) { $sp79148a = strtolower($sp79148a); if (isset($this->headers[$sp79148a])) { return $this->headers[$sp79148a]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp3db1b2 = 'http://' . $this->host; if ($this->port != 80) { $sp3db1b2 .= ':' . $this->port; } $sp3db1b2 .= $this->path; return $sp3db1b2; } function setUserAgent($sp9ad127) { $this->user_agent = $sp9ad127; } function setAuthorization($sp925add, $spb6833a) { $this->username = $sp925add; $this->password = $spb6833a; } function setCookies($spab2619) { $this->cookies = $spab2619; } function useGzip($sp458394) { $this->use_gzip = $sp458394; } function setPersistCookies($sp458394) { $this->persist_cookies = $sp458394; } function setPersistReferers($sp458394) { $this->persist_referers = $sp458394; } function setHandleRedirects($sp458394) { $this->handle_redirects = $sp458394; } function setMaxRedirects($spa11dee) { $this->max_redirects = $spa11dee; } function setHeadersOnly($sp458394) { $this->headers_only = $sp458394; } function setDebug($sp458394) { $this->debug = $sp458394; } function quickGet($sp3db1b2) { $sp7dc449 = parse_url($sp3db1b2); $sp4e8324 = $sp7dc449['host']; $spa2fa23 = isset($sp7dc449['port']) ? $sp7dc449['port'] : 80; $sp61aa55 = isset($sp7dc449['path']) ? $sp7dc449['path'] : '/'; if (isset($sp7dc449['query'])) { $sp61aa55 .= '?' . $sp7dc449['query']; } $spb0d603 = new HttpClient($sp4e8324, $spa2fa23); if (!$spb0d603->get($sp61aa55)) { return false; } else { return $spb0d603->getContent(); } } static function quickPost($sp3db1b2, $sp5aa598) { $sp7dc449 = parse_url($sp3db1b2); $sp4e8324 = $sp7dc449['host']; $spa2fa23 = isset($sp7dc449['port']) ? $sp7dc449['port'] : 80; $sp61aa55 = isset($sp7dc449['path']) ? $sp7dc449['path'] : '/'; $spb0d603 = new HttpClient($sp4e8324, $spa2fa23); if (!$spb0d603->post($sp61aa55, $sp5aa598)) { return false; } else { return $spb0d603->getContent(); } } function debug($sp093e23, $spc7294d = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $sp093e23; if ($spc7294d) { ob_start(); print_r($spc7294d); $spc1a72e = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $spc1a72e . '</pre>'; } print '</div>'; } } }