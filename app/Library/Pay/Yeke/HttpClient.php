<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($spc7dc40, $sp79d3bb = 80) { $this->host = $spc7dc40; $this->port = $sp79d3bb; } function get($spd55287, $spcb019a = false) { $this->path = $spd55287; $this->method = 'GET'; if ($spcb019a) { $this->path .= '?' . $this->buildQueryString($spcb019a); } return $this->doRequest(); } function post($spd55287, $spcb019a) { $this->path = $spd55287; $this->method = 'POST'; $this->postdata = $this->buildQueryString($spcb019a); return $this->doRequest(); } function buildQueryString($spcb019a) { $spa4b026 = ''; if (is_array($spcb019a)) { foreach ($spcb019a as $sp7b7024 => $spcb4459) { if (is_array($spcb4459)) { foreach ($spcb4459 as $spdc9e6e) { $spa4b026 .= urlencode($sp7b7024) . '=' . $spdc9e6e . '&'; } } else { $spa4b026 .= urlencode($sp7b7024) . '=' . $spcb4459 . '&'; } } $spa4b026 = substr($spa4b026, 0, -1); } else { $spa4b026 = $spcb019a; } return $spa4b026; } function doRequest() { if (!($sp82a428 = @fsockopen($this->host, $this->port, $sp549b3e, $sp7cc893, $this->timeout))) { switch ($sp549b3e) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $sp549b3e . ')'; $this->errormsg .= ' ' . $sp7cc893; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp82a428, $this->timeout); $spd5cc4d = $this->buildRequest(); $this->debug('Request', $spd5cc4d); fwrite($sp82a428, $spd5cc4d); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $sp81fe4d = true; $sp3707d3 = true; while (!feof($sp82a428)) { $spa4e3ce = fgets($sp82a428, 4096); if ($sp3707d3) { $sp3707d3 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $spa4e3ce, $spf936b9)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($spa4e3ce); $this->debug($this->errormsg); return false; } $this->status = $spf936b9[2]; $this->debug(trim($spa4e3ce)); continue; } if ($sp81fe4d) { if (trim($spa4e3ce) == '') { $sp81fe4d = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $spa4e3ce, $spf936b9)) { continue; } $sp7b7024 = strtolower(trim($spf936b9[1])); $spcb4459 = trim($spf936b9[2]); if (isset($this->headers[$sp7b7024])) { if (is_array($this->headers[$sp7b7024])) { $this->headers[$sp7b7024][] = $spcb4459; } else { $this->headers[$sp7b7024] = array($this->headers[$sp7b7024], $spcb4459); } } else { $this->headers[$sp7b7024] = $spcb4459; } continue; } $this->content .= $spa4e3ce; } fclose($sp82a428); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp116ad3 = $this->headers['set-cookie']; if (!is_array($sp116ad3)) { $sp116ad3 = array($sp116ad3); } foreach ($sp116ad3 as $spc6c8e8) { if (preg_match('/([^=]+)=([^;]+);/', $spc6c8e8, $spf936b9)) { $this->cookies[$spf936b9[1]] = $spf936b9[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $spc56e3b = isset($this->headers['location']) ? $this->headers['location'] : ''; $spd6606f = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($spc56e3b || $spd6606f) { $sp3ae187 = parse_url($spc56e3b . $spd6606f); return $this->get($sp3ae187['path']); } } return true; } function buildRequest() { $spdf7b97 = array(); $spdf7b97[] = "{$this->method} {$this->path} HTTP/1.0"; $spdf7b97[] = "Host: {$this->host}"; $spdf7b97[] = "User-Agent: {$this->user_agent}"; $spdf7b97[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $spdf7b97[] = "Accept-encoding: {$this->accept_encoding}"; } $spdf7b97[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $spdf7b97[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spc6c8e8 = 'Cookie: '; foreach ($this->cookies as $sp7b7024 => $spc82d84) { $spc6c8e8 .= "{$sp7b7024}={$spc82d84}; "; } $spdf7b97[] = $spc6c8e8; } if ($this->username && $this->password) { $spdf7b97[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $spdf7b97[] = 'Content-Type: application/x-www-form-urlencoded'; $spdf7b97[] = 'Content-Length: ' . strlen($this->postdata); } $spd5cc4d = implode('
', $spdf7b97) . '

' . $this->postdata; return $spd5cc4d; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp7b1947) { $sp7b1947 = strtolower($sp7b1947); if (isset($this->headers[$sp7b1947])) { return $this->headers[$sp7b1947]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp3ae187 = 'http://' . $this->host; if ($this->port != 80) { $sp3ae187 .= ':' . $this->port; } $sp3ae187 .= $this->path; return $sp3ae187; } function setUserAgent($spd6e61f) { $this->user_agent = $spd6e61f; } function setAuthorization($spdde20c, $spb07b5d) { $this->username = $spdde20c; $this->password = $spb07b5d; } function setCookies($sp2550dd) { $this->cookies = $sp2550dd; } function useGzip($sp6bd478) { $this->use_gzip = $sp6bd478; } function setPersistCookies($sp6bd478) { $this->persist_cookies = $sp6bd478; } function setPersistReferers($sp6bd478) { $this->persist_referers = $sp6bd478; } function setHandleRedirects($sp6bd478) { $this->handle_redirects = $sp6bd478; } function setMaxRedirects($spc4b97b) { $this->max_redirects = $spc4b97b; } function setHeadersOnly($sp6bd478) { $this->headers_only = $sp6bd478; } function setDebug($sp6bd478) { $this->debug = $sp6bd478; } function quickGet($sp3ae187) { $sp096e7a = parse_url($sp3ae187); $spc7dc40 = $sp096e7a['host']; $sp79d3bb = isset($sp096e7a['port']) ? $sp096e7a['port'] : 80; $spd55287 = isset($sp096e7a['path']) ? $sp096e7a['path'] : '/'; if (isset($sp096e7a['query'])) { $spd55287 .= '?' . $sp096e7a['query']; } $sp352925 = new HttpClient($spc7dc40, $sp79d3bb); if (!$sp352925->get($spd55287)) { return false; } else { return $sp352925->getContent(); } } static function quickPost($sp3ae187, $spcb019a) { $sp096e7a = parse_url($sp3ae187); $spc7dc40 = $sp096e7a['host']; $sp79d3bb = isset($sp096e7a['port']) ? $sp096e7a['port'] : 80; $spd55287 = isset($sp096e7a['path']) ? $sp096e7a['path'] : '/'; $sp352925 = new HttpClient($spc7dc40, $sp79d3bb); if (!$sp352925->post($spd55287, $spcb019a)) { return false; } else { return $sp352925->getContent(); } } function debug($sp2af324, $sp465be0 = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $sp2af324; if ($sp465be0) { ob_start(); print_r($sp465be0); $sp1ecafd = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $sp1ecafd . '</pre>'; } print '</div>'; } } }