<?php
namespace App\Library\Pay\MugglePay; use App\Library\CurlRequest; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($sp53f8aa) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp53f8aa; $this->url_return = SYS_URL . '/pay/return/' . $sp53f8aa; } function goPay($spbe80b7, $spa3e681, $sp45f07e, $sp873488, $sp5213ee) { if (!isset($spbe80b7['app_secret'])) { throw new \Exception('请填写[app_secret] (后台应用密钥)'); } $this->url_return .= '/' . $spa3e681; $spa26894 = array('merchant_order_id' => $spa3e681, 'price_amount' => sprintf('%.2f', $sp5213ee / 100), 'price_currency' => 'CNY', 'pay_currency' => $spbe80b7['payway'] !== 'COIN' ? $spbe80b7['payway'] : '', 'title' => $sp45f07e, 'description' => $sp873488, 'callback_url' => $this->url_notify, 'cancel_url' => $this->url_return, 'success_url' => $this->url_return, 'token' => md5($spbe80b7['app_secret'] . $spa3e681 . config('app.key'))); $sp00a165 = CurlRequest::post('https://api.mugglepay.com/v1/orders', json_encode($spa26894), array('Content-Type' => 'application/json', 'token' => $spbe80b7['app_secret'])); $spb9589c = @json_decode($sp00a165, true); if (!$spb9589c || !isset($spb9589c['status']) || $spb9589c['status'] !== 201) { Log::error('Pay.MugglePay.goPay.order, request failed', array('response' => $sp00a165)); throw new \Exception('获取付款信息超时, 请刷新重试'); } \App\Order::whereOrderNo($spa3e681)->update(array('pay_trade_no' => $spb9589c['order']['order_id'])); header('Location: ' . $spb9589c['payment_url']); die; } function verify($spbe80b7, $sp04f0f8) { $sp3bce01 = isset($spbe80b7['isNotify']) && $spbe80b7['isNotify']; if ($sp3bce01) { if (!isset($_POST['merchant_order_id']) || !isset($_POST['token'])) { Log::error('Pay.MugglePay.verify, request invalid', array('$_POST' => $_POST)); echo json_encode(array('status' => 400)); return false; } $spa3e681 = $_POST['merchant_order_id']; if ($_POST['token'] !== md5($spbe80b7['app_secret'] . $spa3e681 . config('app.key'))) { Log::error('Pay.MugglePay.verify, token illegal', array('$_POST' => $_POST)); echo json_encode(array('status' => 403)); return false; } if ($_POST['pay_currency'] !== 'CNY') { Log::error('Pay.MugglePay.verify, currency illegal', array('$_POST' => $_POST)); echo json_encode(array('status' => 415)); return false; } if ($_POST['status'] === 'PAID') { $spd63ffb = $_POST['order_id']; $sp0201cf = (int) round($_POST['pay_amount'] * 100); $sp04f0f8($spa3e681, $sp0201cf, $spd63ffb); echo json_encode(array('status' => 200)); return true; } else { Log::error('Pay.MugglePay.verify, status illegal', array('$_POST' => $_POST)); } echo json_encode(array('status' => 406)); return false; } else { $spa3e681 = @$spbe80b7['out_trade_no']; if (strlen($spa3e681) < 5) { throw new \Exception('交易单号未传入'); } $spd63ffb = \App\Order::whereOrderNo($spa3e681)->firstOrFail()->pay_trade_no; $sp00a165 = CurlRequest::get('https://api.mugglepay.com/v1/orders/' . $spd63ffb, array('token' => $spbe80b7['app_secret'])); $spb9589c = @json_decode($sp00a165, true); if (!$spb9589c || !isset($spb9589c['status'])) { Log::error('Pay.MugglePay.verify, request failed', array('response' => $sp00a165)); return false; } if ($spb9589c['order']['pay_currency'] === 'CNY') { if ($spb9589c['order']['status'] === 'PAID') { $spd63ffb = $spb9589c['order']['order_id']; $sp0201cf = (int) round($spb9589c['order']['pay_amount'] * 100); $sp04f0f8($spa3e681, $sp0201cf, $spd63ffb); return true; } else { Log::error('Pay.MugglePay.verify, status illegal', array('response' => $sp00a165)); } } else { Log::error('Pay.MugglePay.verify, currency illegal', array('response' => $sp00a165)); } return false; } } }