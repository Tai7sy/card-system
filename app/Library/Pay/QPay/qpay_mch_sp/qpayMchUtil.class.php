<?php
require_once 'qpayMch.config.php'; class QpayMchUtil { public static function createNoncestr($sp8dab90 = 32) { $sp1650b8 = 'abcdefghijklmnopqrstuvwxyz0123456789'; $sp14800d = ''; for ($sp6b283c = 0; $sp6b283c < $sp8dab90; $sp6b283c++) { $sp14800d .= substr($sp1650b8, mt_rand(0, strlen($sp1650b8) - 1), 1); } return $sp14800d; } public static function buildQueryStr($spc0e525) { $spbe702c = array(); foreach ($spc0e525 as $sp17f3a7 => $sp75c248) { if ($sp17f3a7 != 'sign' && $sp75c248 != '' && !is_array($sp75c248)) { array_push($spbe702c, "{$sp17f3a7}={$sp75c248}"); } } return implode('&', $spbe702c); } public static function getSign($spc0e525, $sp52ca97) { ksort($spc0e525); $sp54d1de = QpayMchUtil::buildQueryStr($spc0e525); $sp54d1de = $sp54d1de . '&key=' . $sp52ca97; $sp54d1de = md5($sp54d1de); $sp964415 = strtoupper($sp54d1de); return $sp964415; } public static function arrayToXml($sp96d357) { $sp87287d = '<xml>'; foreach ($sp96d357 as $spf1241f => $sp91e29b) { if (is_numeric($sp91e29b)) { $sp87287d .= "<{$spf1241f}>{$sp91e29b}</{$spf1241f}>"; } else { $sp87287d .= "<{$spf1241f}><![CDATA[{$sp91e29b}]]></{$spf1241f}>"; } } $sp87287d .= '</xml>'; return $sp87287d; } public static function xmlToArray($sp87287d) { $sp96d357 = json_decode(json_encode(simplexml_load_string($sp87287d, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $sp96d357; } public static function reqByCurlNormalPost($spc0e525, $spd2457c, $spdecb3f = 10) { return QpayMchUtil::_reqByCurl($spc0e525, $spd2457c, $spdecb3f, false); } public static function reqByCurlSSLPost($spc0e525, $spd2457c, $spdecb3f = 10) { return QpayMchUtil::_reqByCurl($spc0e525, $spd2457c, $spdecb3f, true); } private static function _reqByCurl($spc0e525, $spd2457c, $spdecb3f = 10, $spfa47fc = false) { $sp9f83d6 = curl_init(); curl_setopt($sp9f83d6, CURLOPT_URL, $spd2457c); curl_setopt($sp9f83d6, CURLOPT_TIMEOUT, $spdecb3f); curl_setopt($sp9f83d6, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($sp9f83d6, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($sp9f83d6, CURLOPT_HEADER, FALSE); curl_setopt($sp9f83d6, CURLOPT_RETURNTRANSFER, TRUE); if (isset($spfa47fc) && $spfa47fc != false) { curl_setopt($sp9f83d6, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($sp9f83d6, CURLOPT_SSLCERT, QpayMchConf::CERT_FILE_PATH); curl_setopt($sp9f83d6, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($sp9f83d6, CURLOPT_SSLKEY, QpayMchConf::KEY_FILE_PATH); } curl_setopt($sp9f83d6, CURLOPT_POST, true); curl_setopt($sp9f83d6, CURLOPT_POSTFIELDS, $spc0e525); $sp9b52fe = curl_exec($sp9f83d6); if ($sp9b52fe) { curl_close($sp9f83d6); return $sp9b52fe; } else { $sp9ad762 = curl_errno($sp9f83d6); print_r($sp9ad762); curl_close($sp9f83d6); return false; } } }