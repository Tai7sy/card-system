<?php
require_once 'qpayMchUtil.class.php'; class QpayMchAPI { protected $url; protected $isSSL; protected $timeout; public function __construct($spd2457c, $sp813fc1, $spdecb3f = 5) { $this->url = $spd2457c; $this->isSSL = $sp813fc1; $this->timeout = $spdecb3f; } public function notify_params() { $sp87287d = file_get_contents('php://input'); return QpayMchUtil::xmlToArray($sp87287d); } public function notify_verify($spc0e525, $sp9d4382) { if (!isset($spc0e525['sign'])) { return false; } $sp964415 = QpayMchUtil::getSign($spc0e525, $sp9d4382['mch_key']); return $sp964415 === $spc0e525['sign']; } public function req($spc0e525, $sp9d4382) { $sp9b52fe = array(); $spc0e525['mch_id'] = $sp9d4382['mch_id']; $spc0e525['nonce_str'] = QpayMchUtil::createNoncestr(); $spc0e525['sign'] = QpayMchUtil::getSign($spc0e525, $sp9d4382['mch_key']); $sp87287d = QpayMchUtil::arrayToXml($spc0e525); if (isset($this->isSSL)) { $sp9b52fe = QpayMchUtil::reqByCurlSSLPost($sp87287d, $this->url, $this->timeout); } else { $sp9b52fe = QpayMchUtil::reqByCurlNormalPost($sp87287d, $this->url, $this->timeout); } return $sp9b52fe; } }