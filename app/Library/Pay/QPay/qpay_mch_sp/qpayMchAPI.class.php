<?php
require_once 'qpayMchUtil.class.php'; class QpayMchAPI { protected $url; protected $isSSL; protected $timeout; public function __construct($sp3ae187, $spced08e, $sp8bccc7 = 5) { $this->url = $sp3ae187; $this->isSSL = $spced08e; $this->timeout = $sp8bccc7; } public function notify_params() { $spbbfd2d = file_get_contents('php://input'); return QpayMchUtil::xmlToArray($spbbfd2d); } public function notify_verify($sp3e77f9, $spc27de0) { if (!isset($sp3e77f9['sign'])) { return false; } $sp75e4cc = QpayMchUtil::getSign($sp3e77f9, $spc27de0['mch_key']); return $sp75e4cc === $sp3e77f9['sign']; } public function req($sp3e77f9, $spc27de0) { $sp29a775 = array(); $sp3e77f9['mch_id'] = $spc27de0['mch_id']; $sp3e77f9['nonce_str'] = QpayMchUtil::createNoncestr(); $sp3e77f9['sign'] = QpayMchUtil::getSign($sp3e77f9, $spc27de0['mch_key']); $spbbfd2d = QpayMchUtil::arrayToXml($sp3e77f9); if (isset($this->isSSL)) { $sp29a775 = QpayMchUtil::reqByCurlSSLPost($spbbfd2d, $this->url, $this->timeout); } else { $sp29a775 = QpayMchUtil::reqByCurlNormalPost($spbbfd2d, $this->url, $this->timeout); } return $sp29a775; } }