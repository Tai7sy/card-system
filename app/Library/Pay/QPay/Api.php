<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp3c46ab) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp3c46ab; } function goPay($sp9d4382, $sp2e47fc, $spd4e90d, $spd0789a, $sp076ec7) { if (!isset($sp9d4382['mch_id']) || !isset($sp9d4382['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $spc0e525 = array('out_trade_no' => $sp2e47fc, 'body' => $spd4e90d, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $sp076ec7, 'trade_type' => 'NATIVE'); $sp685b1b = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $sp80a639 = $sp685b1b->req($spc0e525, $sp9d4382); $spb72f32 = \QpayMchUtil::xmlToArray($sp80a639); if (!isset($spb72f32['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp2e47fc . ', error:' . json_encode($spb72f32)); if (isset($spb72f32['err_code_des'])) { throw new \Exception($spb72f32['err_code_des']); } if (isset($spb72f32['return_msg'])) { throw new \Exception($spb72f32['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp2e47fc . '/qq?url=' . urlencode($spb72f32['code_url'])); die; } function verify($sp9d4382, $sp9a4d97) { $sp7b2182 = isset($sp9d4382['isNotify']) && $sp9d4382['isNotify']; $sp685b1b = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($sp7b2182) { $spc0e525 = $sp685b1b->notify_params(); if (!$sp685b1b->notify_verify($spc0e525, $sp9d4382)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($sp9a4d97, array($spc0e525['out_trade_no'], $spc0e525['total_fee'], $spc0e525['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp2e47fc = @$sp9d4382['out_trade_no']; $spc0e525 = array('out_trade_no' => $sp2e47fc); $sp80a639 = $sp685b1b->req($spc0e525, $sp9d4382); $spb72f32 = \QpayMchUtil::xmlToArray($sp80a639); if (!is_array($spb72f32)) { Log::error('Pay.QPay.verify Error, $retXml' . $sp80a639); return false; } if (array_key_exists('trade_state', $spb72f32) && $spb72f32['trade_state'] == 'SUCCESS') { call_user_func_array($sp9a4d97, array($spb72f32['out_trade_no'], $spb72f32['total_fee'], $spb72f32['transaction_id'])); return true; } else { return false; } } } }