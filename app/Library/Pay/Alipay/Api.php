<?php
namespace App\Library\Pay\Alipay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp3c46ab) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp3c46ab; $this->url_return = SYS_URL . '/pay/return/' . $sp3c46ab; $this->pay_id = $sp3c46ab; } function goPay($sp9d4382, $sp2e47fc, $spd4e90d, $spd0789a, $sp076ec7) { $spf59c91 = sprintf('%.2f', $sp076ec7 / 100); $spaad359 = $this->buildAliConfig($sp9d4382); require_once __DIR__ . '/sdk/alipay_submit.class.php'; $spaad359['notify_url'] = $this->url_notify; $spaad359['return_url'] = $this->url_return . '/' . $sp2e47fc; $spc29576 = array('service' => $spaad359['service'], 'partner' => $spaad359['partner'], 'seller_id' => $spaad359['seller_id'], 'payment_type' => $spaad359['payment_type'], 'notify_url' => $spaad359['notify_url'], 'return_url' => $spaad359['return_url'], 'out_trade_no' => $sp2e47fc, 'total_fee' => $spf59c91, 'subject' => $spd4e90d, 'body' => $spd0789a, 'show_url' => config('app.url'), 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $sp13552b = new \AlipaySubmit($spaad359); $sp1ed6b6 = $sp13552b->buildRequestForm($spc29576, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $sp1ed6b6; } function verify($sp9d4382, $sp9a4d97) { $sp7b2182 = isset($sp9d4382['isNotify']) && $sp9d4382['isNotify']; $spaad359 = $this->buildAliConfig($sp9d4382); require __DIR__ . '/sdk/alipay_notify.class.php'; $spcf717f = new \AlipayNotify($spaad359); if ($sp7b2182) { $spb72f32 = $spcf717f->verifyNotify(); } else { $spb72f32 = $spcf717f->verifyReturn(); } if ($spb72f32) { $sp2e47fc = $_REQUEST['out_trade_no']; $sp565d18 = $_REQUEST['trade_no']; $spdaad0a = $_REQUEST['trade_status']; $spc686cf = (int) round($_REQUEST['total_fee'] * 100); if ($spdaad0a == 'TRADE_FINISHED' || $spdaad0a == 'TRADE_SUCCESS') { $sp9a4d97($sp2e47fc, $spc686cf, $sp565d18); } if ($sp7b2182) { echo 'success'; } return true; } else { if ($sp7b2182) { echo 'fail'; $sp5d5f28 = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $sp5d5f28 = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($sp5d5f28 . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($sp9d4382) { return array('partner' => $sp9d4382['partner'], 'seller_id' => $sp9d4382['partner'], 'key' => $sp9d4382['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => $sp9d4382['payway'] === 'wap' ? 'alipay.wap.create.direct.pay.by.user' : 'create_direct_pay_by_user'); } }