<?php
namespace App\Library\Pay\Alipay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp53f8aa) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp53f8aa; $this->url_return = SYS_URL . '/pay/return/' . $sp53f8aa; $this->pay_id = $sp53f8aa; } function goPay($spbe80b7, $spa3e681, $sp45f07e, $sp873488, $sp5213ee) { $sp429fcc = sprintf('%.2f', $sp5213ee / 100); $sp487939 = $this->buildAliConfig($spbe80b7); require_once __DIR__ . '/sdk/alipay_submit.class.php'; $sp487939['notify_url'] = $this->url_notify; $sp487939['return_url'] = $this->url_return . '/' . $spa3e681; $spfdb5ba = array('service' => $sp487939['service'], 'partner' => $sp487939['partner'], 'seller_id' => $sp487939['seller_id'], 'payment_type' => $sp487939['payment_type'], 'notify_url' => $sp487939['notify_url'], 'return_url' => $sp487939['return_url'], 'out_trade_no' => $spa3e681, 'total_fee' => $sp429fcc, 'subject' => $sp45f07e, 'body' => $sp873488, 'show_url' => config('app.url'), 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $sp7c05ed = new \AlipaySubmit($sp487939); $sp38ec28 = $sp7c05ed->buildRequestForm($spfdb5ba, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $sp38ec28; } function verify($spbe80b7, $sp04f0f8) { $sp3bce01 = isset($spbe80b7['isNotify']) && $spbe80b7['isNotify']; $sp487939 = $this->buildAliConfig($spbe80b7); require __DIR__ . '/sdk/alipay_notify.class.php'; $sp9cfc59 = new \AlipayNotify($sp487939); if ($sp3bce01) { $spbbda25 = $sp9cfc59->verifyNotify(); } else { $spbbda25 = $sp9cfc59->verifyReturn(); } if ($spbbda25) { $spa3e681 = $_REQUEST['out_trade_no']; $sp4d48a7 = $_REQUEST['trade_no']; $sp681dde = $_REQUEST['trade_status']; $sp9624ba = (int) round($_REQUEST['total_fee'] * 100); if ($sp681dde == 'TRADE_FINISHED' || $sp681dde == 'TRADE_SUCCESS') { $sp04f0f8($spa3e681, $sp9624ba, $sp4d48a7); } if ($sp3bce01) { echo 'success'; } return true; } else { if ($sp3bce01) { echo 'fail'; $sp9df21a = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $sp9df21a = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($sp9df21a . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($spbe80b7) { return array('partner' => $spbe80b7['partner'], 'seller_id' => $spbe80b7['partner'], 'key' => $spbe80b7['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => $spbe80b7['payway'] === 'wap' ? 'alipay.wap.create.direct.pay.by.user' : 'create_direct_pay_by_user'); } }