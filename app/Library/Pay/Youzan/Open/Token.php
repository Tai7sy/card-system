<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($sp1ffb50, $spaaecc8, $sp31a710 = null, $spd82c02 = null) { $this->clientId = $sp1ffb50; $this->clientSecret = $spaaecc8; $this->accessToken = $sp31a710; $this->refreshToken = $spd82c02; } public function getToken($sp4f56c1, $sp9cc8bf = array()) { $spc0e525 = array(); $spc0e525['client_id'] = $this->clientId; $spc0e525['client_secret'] = $this->clientSecret; if ($sp4f56c1 === 'oauth') { $spc0e525['grant_type'] = 'authorization_code'; $spc0e525['code'] = $sp9cc8bf['code']; $spc0e525['redirect_uri'] = $sp9cc8bf['redirect_uri']; } elseif ($sp4f56c1 === 'refresh_token') { $spc0e525['grant_type'] = 'refresh_token'; $spc0e525['refresh_token'] = $sp9cc8bf['refresh_token']; } elseif ($sp4f56c1 === 'self') { $spc0e525['grant_type'] = 'silent'; $spc0e525['kdt_id'] = $sp9cc8bf['kdt_id']; } elseif ($sp4f56c1 === 'platform_init') { $spc0e525['grant_type'] = 'authorize_platform'; } elseif ($sp4f56c1 === 'platform') { $spc0e525['grant_type'] = 'authorize_platform'; $spc0e525['kdt_id'] = $sp9cc8bf['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $spc0e525)); } private function parseResponse($spc96b59) { $sp6fd648 = json_decode($spc96b59, true); if (null === $sp6fd648) { throw new Exception('response invalid, data: ' . $spc96b59); } return $sp6fd648; } }