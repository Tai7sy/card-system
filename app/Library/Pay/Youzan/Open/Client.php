<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp730fcc) { if ('' == $sp730fcc) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp730fcc; } public function get($sp2e8ea8, $spd3a128, $spa26894 = array()) { return $this->parseResponse(Http::get($this->url($sp2e8ea8, $spd3a128), $this->buildRequestParams($sp2e8ea8, $spa26894))); } public function post($sp2e8ea8, $spd3a128, $spa26894 = array(), $spfd23b2 = array()) { return $this->parseResponse(Http::post($this->url($sp2e8ea8, $spd3a128), $this->buildRequestParams($sp2e8ea8, $spa26894), $spfd23b2)); } public function url($sp2e8ea8, $spd3a128) { $sp2640d3 = explode('.', $sp2e8ea8); $sp2e8ea8 = '/' . $spd3a128 . '/' . $sp2640d3[count($sp2640d3) - 1]; array_pop($sp2640d3); $sp2e8ea8 = implode('.', $sp2640d3) . $sp2e8ea8; $sp3db1b2 = self::$requestUrl . $sp2e8ea8; return $sp3db1b2; } private function parseResponse($spb94c56) { $sp5aa598 = json_decode($spb94c56, true); if (null === $sp5aa598) { throw new Exception('response invalid, data: ' . $spb94c56); } return $sp5aa598; } private function buildRequestParams($sp2e8ea8, $sp66705b) { if (!is_array($sp66705b)) { $sp66705b = array(); } $spea380e = $this->getCommonParams($this->accessToken, $sp2e8ea8); foreach ($sp66705b as $spce2336 => $sp39a929) { if (isset($spea380e[$spce2336])) { throw new Exception('参数名冲突'); } $spea380e[$spce2336] = $sp39a929; } return $spea380e; } private function getCommonParams($sp730fcc, $sp2e8ea8) { $spa26894 = array(); $spa26894[Protocol::TOKEN_KEY] = $sp730fcc; $spa26894[Protocol::METHOD_KEY] = $sp2e8ea8; return $spa26894; } }