<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($spa9766a) { if ('' == $spa9766a) { throw new Exception('access_token不能为空'); } $this->accessToken = $spa9766a; } public function get($sp888af6, $sp428bc8, $sp3e77f9 = array()) { return $this->parseResponse(Http::get($this->url($sp888af6, $sp428bc8), $this->buildRequestParams($sp888af6, $sp3e77f9))); } public function post($sp888af6, $sp428bc8, $sp3e77f9 = array(), $sp7b568a = array()) { return $this->parseResponse(Http::post($this->url($sp888af6, $sp428bc8), $this->buildRequestParams($sp888af6, $sp3e77f9), $sp7b568a)); } public function url($sp888af6, $sp428bc8) { $spcc52e0 = explode('.', $sp888af6); $sp888af6 = '/' . $sp428bc8 . '/' . $spcc52e0[count($spcc52e0) - 1]; array_pop($spcc52e0); $sp888af6 = implode('.', $spcc52e0) . $sp888af6; $sp3ae187 = self::$requestUrl . $sp888af6; return $sp3ae187; } private function parseResponse($sp772666) { $spcb019a = json_decode($sp772666, true); if (null === $spcb019a) { throw new Exception('response invalid, data: ' . $sp772666); } return $spcb019a; } private function buildRequestParams($sp888af6, $sp3ea532) { if (!is_array($sp3ea532)) { $sp3ea532 = array(); } $sp58bfe8 = $this->getCommonParams($this->accessToken, $sp888af6); foreach ($sp3ea532 as $spe3274c => $spd7786b) { if (isset($sp58bfe8[$spe3274c])) { throw new Exception('参数名冲突'); } $sp58bfe8[$spe3274c] = $spd7786b; } return $sp58bfe8; } private function getCommonParams($spa9766a, $sp888af6) { $sp3e77f9 = array(); $sp3e77f9[Protocol::TOKEN_KEY] = $spa9766a; $sp3e77f9[Protocol::METHOD_KEY] = $sp888af6; return $sp3e77f9; } }