<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp31a710) { if ('' == $sp31a710) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp31a710; } public function get($spd0c59e, $spd5f0c7, $spc0e525 = array()) { return $this->parseResponse(Http::get($this->url($spd0c59e, $spd5f0c7), $this->buildRequestParams($spd0c59e, $spc0e525))); } public function post($spd0c59e, $spd5f0c7, $spc0e525 = array(), $spf01fac = array()) { return $this->parseResponse(Http::post($this->url($spd0c59e, $spd5f0c7), $this->buildRequestParams($spd0c59e, $spc0e525), $spf01fac)); } public function url($spd0c59e, $spd5f0c7) { $spd80309 = explode('.', $spd0c59e); $spd0c59e = '/' . $spd5f0c7 . '/' . $spd80309[count($spd80309) - 1]; array_pop($spd80309); $spd0c59e = implode('.', $spd80309) . $spd0c59e; $spd2457c = self::$requestUrl . $spd0c59e; return $spd2457c; } private function parseResponse($spc96b59) { $sp6fd648 = json_decode($spc96b59, true); if (null === $sp6fd648) { throw new Exception('response invalid, data: ' . $spc96b59); } return $sp6fd648; } private function buildRequestParams($spd0c59e, $sp9a3bd2) { if (!is_array($sp9a3bd2)) { $sp9a3bd2 = array(); } $spc32c29 = $this->getCommonParams($this->accessToken, $spd0c59e); foreach ($sp9a3bd2 as $sp17f3a7 => $sp75c248) { if (isset($spc32c29[$sp17f3a7])) { throw new Exception('参数名冲突'); } $spc32c29[$sp17f3a7] = $sp75c248; } return $spc32c29; } private function getCommonParams($sp31a710, $spd0c59e) { $spc0e525 = array(); $spc0e525[Protocol::TOKEN_KEY] = $sp31a710; $spc0e525[Protocol::METHOD_KEY] = $spd0c59e; return $spc0e525; } }