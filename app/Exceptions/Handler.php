<?php
namespace App\Exceptions; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; use Illuminate\Support\Facades\Log; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $sp2a9b1e) { parent::report($sp2a9b1e); } private function msg($spf066f3, $spe95830, $sp27b58d) { return $spf066f3->isXmlHttpRequest() ? response()->json(array('message' => $spe95830), $sp27b58d) : response()->view('errors._', array('code' => $sp27b58d, 'message' => $spe95830), $sp27b58d); } public function render($spf066f3, Exception $sp3f4aab) { if ($sp3f4aab instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $this->msg($spf066f3, '记录未找到', 404); } elseif ($sp3f4aab instanceof \Illuminate\Auth\AuthenticationException) { return $this->msg($spf066f3, '您需要登录您的账户再进行此操作', 401); } elseif ($sp3f4aab instanceof \Illuminate\Auth\Access\AuthorizationException) { return $this->msg($spf066f3, '未授权的操作', 403); } elseif ($sp3f4aab instanceof \Illuminate\Validation\ValidationException) { return parent::render($spf066f3, $sp3f4aab); } elseif ($sp3f4aab instanceof \Illuminate\Session\TokenMismatchException) { return $this->msg($spf066f3, '请刷新页面后重试', 403); } elseif ($sp3f4aab instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $this->msg($spf066f3, '页面未找到', 404); } elseif ($sp3f4aab instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $this->msg($spf066f3, '请求方法不允许', 405); } elseif ($sp3f4aab instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { Log::error('Caught a ServiceUnavailableHttpException', array('Exception' => $sp3f4aab)); return $this->msg($spf066f3, '当前服务不可用，请稍后重试', 503); } elseif ($sp3f4aab instanceof \Symfony\Component\HttpKernel\Exception\HttpException) { $sp789a6f = $spf066f3->isXmlHttpRequest(); switch ($sp789a6f) { case 429: return $this->msg($spf066f3, '您的请求过于频繁，请稍后重试', $sp789a6f); break; default: Log::error('Caught a UnknownHttpException', array('Exception' => $sp3f4aab)); return $this->msg($spf066f3, '当前服务不可用，请稍后重试', $sp789a6f); } } Log::error('Uncaught Exception', array('Exception' => $sp3f4aab)); if (config('app.debug')) { return parent::render($spf066f3, $sp3f4aab); } else { return $this->msg($spf066f3, '未知错误，请查看错误日志（storage/logs）', 500); } } }