<?php
namespace App\Exceptions; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; use Illuminate\Support\Facades\Log; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $spa27a89) { parent::report($spa27a89); } private function msg($spbaac90, $sp4daef6, $sp646c5e) { return $spbaac90->isXmlHttpRequest() ? response()->json(array('message' => $sp4daef6), $sp646c5e) : response()->view('errors._', array('code' => $sp646c5e, 'message' => $sp4daef6), $sp646c5e); } public function render($spbaac90, Exception $sp696863) { if ($sp696863 instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $this->msg($spbaac90, '记录未找到', 404); } elseif ($sp696863 instanceof \Illuminate\Auth\AuthenticationException) { return $this->msg($spbaac90, '您需要登录您的账户再进行此操作', 401); } elseif ($sp696863 instanceof \Illuminate\Auth\Access\AuthorizationException) { return $this->msg($spbaac90, '未授权的操作', 403); } elseif ($sp696863 instanceof \Illuminate\Validation\ValidationException) { return parent::render($spbaac90, $sp696863); } elseif ($sp696863 instanceof \Illuminate\Session\TokenMismatchException) { return $this->msg($spbaac90, '请刷新页面后重试', 403); } elseif ($sp696863 instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $this->msg($spbaac90, '页面未找到', 404); } elseif ($sp696863 instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $this->msg($spbaac90, '请求方法不允许', 405); } elseif ($sp696863 instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { Log::error('Caught a ServiceUnavailableHttpException', array('Exception' => $sp696863)); return $this->msg($spbaac90, '当前服务不可用，请稍后重试', 503); } elseif ($sp696863 instanceof \Symfony\Component\HttpKernel\Exception\HttpException) { $spff816c = $spbaac90->isXmlHttpRequest(); switch ($spff816c) { case 429: return $this->msg($spbaac90, '您的请求过于频繁，请稍后重试', $spff816c); break; default: Log::error('Caught a UnknownHttpException', array('Exception' => $sp696863)); return $this->msg($spbaac90, '当前服务不可用，请稍后重试', $spff816c); } } Log::error('Uncaught Exception', array('Exception' => $sp696863)); if (config('app.debug')) { return parent::render($spbaac90, $sp696863); } else { return $this->msg($spbaac90, '未知错误，请查看错误日志（storage/logs）', 500); } } }