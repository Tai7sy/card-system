<?php
namespace App\Exceptions; use App\Library\Helper; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; use Illuminate\Support\Facades\Log; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $sp055f3b) { parent::report($sp055f3b); } private function msg($sp179c14, $spa45cdc, $spf783c8) { return $sp179c14->isXmlHttpRequest() ? response()->json(array('message' => $spa45cdc), $spf783c8) : response()->view('errors._', array('code' => $spf783c8, 'message' => $spa45cdc), $spf783c8); } public function render($sp179c14, Exception $spa356ee) { if ($spa356ee instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $this->msg($sp179c14, '记录未找到', 404); } elseif ($spa356ee instanceof \Illuminate\Auth\AuthenticationException) { return $this->msg($sp179c14, '您需要登录您的账户再进行此操作', 401); } elseif ($spa356ee instanceof \Illuminate\Auth\Access\AuthorizationException) { return $this->msg($sp179c14, '未授权的操作', 403); } elseif ($spa356ee instanceof \Illuminate\Validation\ValidationException) { return parent::render($sp179c14, $spa356ee); } elseif ($spa356ee instanceof \Illuminate\Session\TokenMismatchException) { return $this->msg($sp179c14, '请刷新页面后重试', 403); } elseif ($spa356ee instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $this->msg($sp179c14, '页面未找到', 404); } elseif ($spa356ee instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $this->msg($sp179c14, '请求方法不允许', 405); } elseif ($spa356ee instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { Log::error('Caught a ServiceUnavailableHttpException', array('Exception' => $spa356ee)); return $this->msg($sp179c14, '当前服务不可用，请稍后重试', 503); } elseif ($spa356ee instanceof \Symfony\Component\HttpKernel\Exception\HttpException) { $spb7938a = $spa356ee->getStatusCode(); switch ($spb7938a) { case 429: return $this->msg($sp179c14, '您的请求过于频繁，请稍后重试', 429); break; default: Log::error('Caught a UnknownHttpException', array('Exception' => $spa356ee)); return $this->msg($sp179c14, '当前服务不可用，请稍后重试', 500); } } Log::error('Uncaught error', array('exception' => $spa356ee, 'method' => $sp179c14->method(), 'url' => $sp179c14->fullUrl(), 'data' => file_get_contents('php://input'), 'ip' => Helper::getIP(), 'client_ip' => $sp179c14->getClientIp(), 'headers' => $sp179c14->header())); if (config('app.debug')) { return parent::render($sp179c14, $spa356ee); } else { return $this->msg($sp179c14, '未知错误，请联系客服', 500); } } }