<?php
namespace App\Exceptions; use App\Library\Helper; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; use Illuminate\Support\Facades\Log; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $sp0c3052) { parent::report($sp0c3052); } private function msg($spfb41ce, $sp15b8e2, $spd2b17f) { return $spfb41ce->isXmlHttpRequest() ? response()->json(array('message' => $sp15b8e2), $spd2b17f) : response()->view('errors._', array('code' => $spd2b17f, 'message' => $sp15b8e2), $spd2b17f); } public function render($spfb41ce, Exception $sp4b79b8) { if ($sp4b79b8 instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $this->msg($spfb41ce, '记录未找到', 404); } elseif ($sp4b79b8 instanceof \Illuminate\Auth\AuthenticationException) { return $this->msg($spfb41ce, '您需要登录您的账户再进行此操作', 401); } elseif ($sp4b79b8 instanceof \Illuminate\Auth\Access\AuthorizationException) { return $this->msg($spfb41ce, '未授权的操作', 403); } elseif ($sp4b79b8 instanceof \Illuminate\Validation\ValidationException) { return parent::render($spfb41ce, $sp4b79b8); } elseif ($sp4b79b8 instanceof \Illuminate\Session\TokenMismatchException) { return $this->msg($spfb41ce, '请刷新页面后重试', 403); } elseif ($sp4b79b8 instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $this->msg($spfb41ce, '页面未找到', 404); } elseif ($sp4b79b8 instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $this->msg($spfb41ce, '请求方法不允许', 405); } elseif ($sp4b79b8 instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { Log::error('Caught a ServiceUnavailableHttpException', array('Exception' => $sp4b79b8)); return $this->msg($spfb41ce, '当前服务不可用，请稍后重试', 503); } elseif ($sp4b79b8 instanceof \Symfony\Component\HttpKernel\Exception\HttpException) { $sp3991e4 = $sp4b79b8->getStatusCode(); switch ($sp3991e4) { case 429: return $this->msg($spfb41ce, '您的请求过于频繁，请稍后重试', 429); break; default: Log::error('Caught a UnknownHttpException', array('Exception' => $sp4b79b8)); return $this->msg($spfb41ce, '当前服务不可用，请稍后重试', 500); } } Log::error('Uncaught error', array('exception' => $sp4b79b8, 'method' => $spfb41ce->method(), 'url' => $spfb41ce->fullUrl(), 'data' => file_get_contents('php://input'), 'ip' => Helper::getIP(), 'client_ip' => $spfb41ce->getClientIp(), 'headers' => $spfb41ce->header())); if (config('app.debug')) { return parent::render($spfb41ce, $sp4b79b8); } else { return $this->msg($spfb41ce, '未知错误，请联系客服', 500); } } }