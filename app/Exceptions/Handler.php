<?php
namespace App\Exceptions; use App\Library\Helper; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; use Illuminate\Support\Facades\Log; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $spa1b46b) { parent::report($spa1b46b); } private function msg($sp3c91bd, $sp6ffaef, $sp31859f) { return $sp3c91bd->isXmlHttpRequest() ? response()->json(array('message' => $sp6ffaef), $sp31859f) : response()->view('errors._', array('code' => $sp31859f, 'message' => $sp6ffaef), $sp31859f); } public function render($sp3c91bd, Exception $sp96dd17) { if ($sp96dd17 instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $this->msg($sp3c91bd, '记录未找到', 404); } elseif ($sp96dd17 instanceof \Illuminate\Auth\AuthenticationException) { return $this->msg($sp3c91bd, '您需要登录您的账户再进行此操作', 401); } elseif ($sp96dd17 instanceof \Illuminate\Auth\Access\AuthorizationException) { return $this->msg($sp3c91bd, '未授权的操作', 403); } elseif ($sp96dd17 instanceof \Illuminate\Validation\ValidationException) { return parent::render($sp3c91bd, $sp96dd17); } elseif ($sp96dd17 instanceof \Illuminate\Session\TokenMismatchException) { return $this->msg($sp3c91bd, '请刷新页面后重试', 403); } elseif ($sp96dd17 instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $this->msg($sp3c91bd, '页面未找到', 404); } elseif ($sp96dd17 instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $this->msg($sp3c91bd, '请求方法不允许', 405); } elseif ($sp96dd17 instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { Log::error('Caught a ServiceUnavailableHttpException', array('Exception' => $sp96dd17)); return $this->msg($sp3c91bd, '当前服务不可用，请稍后重试', 503); } elseif ($sp96dd17 instanceof \Symfony\Component\HttpKernel\Exception\HttpException) { $sp2cc7d8 = $sp96dd17->getStatusCode(); switch ($sp2cc7d8) { case 429: return $this->msg($sp3c91bd, '您的请求过于频繁，请稍后重试', 429); break; default: Log::error('Caught a UnknownHttpException', array('Exception' => $sp96dd17)); return $this->msg($sp3c91bd, '当前服务不可用，请稍后重试', 500); } } Log::error('Uncaught error', array('exception' => $sp96dd17, 'method' => $sp3c91bd->method(), 'url' => $sp3c91bd->fullUrl(), 'data' => file_get_contents('php://input'), 'ip' => Helper::getIP(), 'client_ip' => $sp3c91bd->getClientIp(), 'headers' => $sp3c91bd->header())); if (config('app.debug')) { return parent::render($sp3c91bd, $sp96dd17); } else { return $this->msg($sp3c91bd, '未知错误，请联系客服', 500); } } }