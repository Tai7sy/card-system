<?php
namespace App\Console; use App\System; use Carbon\Carbon; use Illuminate\Console\Scheduling\Schedule; use Illuminate\Foundation\Console\Kernel as ConsoleKernel; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Schema; class Kernel extends ConsoleKernel { protected $commands = array(); protected function schedule(Schedule $spddf716) { if (!app()->runningInConsole()) { return; } try { System::_init(); } catch (\Throwable $sp0b065e) { return; } if (System::_getInt('order_clean_unpay_open') === 1) { $sp3ac394 = System::_getInt('order_clean_unpay_day', 7); $spddf716->call(function () use($sp3ac394) { echo '[' . date('Y-m-d H:i:s') . "] cleaning unpaid orders({$sp3ac394} days ago)...\n"; \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new Carbon())->addDays(-$sp3ac394))->delete(); $sp5b1bec = '[' . date('Y-m-d H:i:s') . '] unpaid-orders cleaned 
'; echo $sp5b1bec; })->dailyAt('01:00'); } $spddf716->call(function () { $sp3ac394 = 7; echo '[' . date('Y-m-d H:i:s') . "] cleaning deleted cards({$sp3ac394} days ago)...\n"; \App\Card::onlyTrashed()->where('deleted_at', '<', (new Carbon())->addDays(-$sp3ac394))->forceDelete(); $sp5b1bec = '[' . date('Y-m-d H:i:s') . '] deleted-cards cleaned
'; echo $sp5b1bec; })->dailyAt('02:00'); } protected function commands() { $this->load(__DIR__ . '/Commands'); require base_path('routes/console.php'); } }