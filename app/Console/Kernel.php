<?php
namespace App\Console; use App\System; use Carbon\Carbon; use Illuminate\Console\Scheduling\Schedule; use Illuminate\Foundation\Console\Kernel as ConsoleKernel; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Schema; class Kernel extends ConsoleKernel { protected $commands = array(); protected function schedule(Schedule $spdb73f8) { if (!app()->runningInConsole()) { return; } try { System::_init(); } catch (\Throwable $sp16b835) { return; } if (System::_getInt('order_clean_unpay_open') === 1) { $sp769c7e = System::_getInt('order_clean_unpay_day', 7); $spdb73f8->call(function () use($sp769c7e) { echo '[' . date('Y-m-d H:i:s') . "] cleaning unpaid orders({$sp769c7e} days ago)...\n"; \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new Carbon())->addDays(-$sp769c7e))->delete(); $sp997a5c = '[' . date('Y-m-d H:i:s') . '] unpaid-orders cleaned 
'; echo $sp997a5c; })->dailyAt('01:00'); } $spdb73f8->call(function () { $sp769c7e = 7; echo '[' . date('Y-m-d H:i:s') . "] cleaning deleted cards({$sp769c7e} days ago)...\n"; \App\Card::onlyTrashed()->where('deleted_at', '<', (new Carbon())->addDays(-$sp769c7e))->forceDelete(); $sp997a5c = '[' . date('Y-m-d H:i:s') . '] deleted-cards cleaned
'; echo $sp997a5c; })->dailyAt('02:00'); } protected function commands() { $this->load(__DIR__ . '/Commands'); require base_path('routes/console.php'); } }