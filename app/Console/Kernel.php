<?php
namespace App\Console; use App\System; use Carbon\Carbon; use Illuminate\Console\Scheduling\Schedule; use Illuminate\Foundation\Console\Kernel as ConsoleKernel; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Schema; class Kernel extends ConsoleKernel { protected $commands = array(); protected function schedule(Schedule $spc7b2c2) { if (!app()->runningInConsole()) { return; } try { System::_init(); } catch (\Throwable $spf95c2c) { return; } if (System::_getInt('order_clean_unpay_open') === 1) { $spe5b6ad = System::_getInt('order_clean_unpay_day', 7); $spc7b2c2->call(function () use($spe5b6ad) { echo '[' . date('Y-m-d H:i:s') . "] cleaning unpaid orders({$spe5b6ad} days ago)...\n"; \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new Carbon())->addDays(-$spe5b6ad))->delete(); $sp98784c = '[' . date('Y-m-d H:i:s') . '] unpaid-orders cleaned 
'; echo $sp98784c; })->dailyAt('01:00'); } $spc7b2c2->call(function () { $spe5b6ad = 7; echo '[' . date('Y-m-d H:i:s') . "] cleaning deleted cards({$spe5b6ad} days ago)...\n"; \App\Card::onlyTrashed()->where('deleted_at', '<', (new Carbon())->addDays(-$spe5b6ad))->forceDelete(); $sp98784c = '[' . date('Y-m-d H:i:s') . '] deleted-cards cleaned
'; echo $sp98784c; })->dailyAt('02:00'); } protected function commands() { $this->load(__DIR__ . '/Commands'); require base_path('routes/console.php'); } }