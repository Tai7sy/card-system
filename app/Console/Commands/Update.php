<?php
namespace App\Console\Commands; use App\Library\CurlRequest; use function DeepCopy\deep_copy; use Illuminate\Console\Command; use Illuminate\Support\Str; class Update extends Command { protected $signature = 'update {--proxy=} {--proxy-auth=}'; protected $description = 'check update'; public function __construct() { parent::__construct(); } private function download_progress($spdcad38, $sp5b688a) { $sp85f7ec = fopen($sp5b688a, 'w+'); if (!$sp85f7ec) { return false; } $spd5d7db = curl_init(); curl_setopt($spd5d7db, CURLOPT_URL, $spdcad38); curl_setopt($spd5d7db, CURLOPT_FOLLOWLOCATION, true); curl_setopt($spd5d7db, CURLOPT_RETURNTRANSFER, true); curl_setopt($spd5d7db, CURLOPT_FILE, $sp85f7ec); curl_setopt($spd5d7db, CURLOPT_PROGRESSFUNCTION, function ($spad64f8, $spbca9c2, $spffc954, $spa1dba9, $spac0279) { if ($spbca9c2 > 0) { echo '    download: ' . sprintf('%.2f', $spffc954 / $spbca9c2 * 100) . '%'; } }); curl_setopt($spd5d7db, CURLOPT_NOPROGRESS, false); curl_setopt($spd5d7db, CURLOPT_HEADER, 0); curl_setopt($spd5d7db, CURLOPT_USERAGENT, 'card update'); if (defined('MY_PROXY')) { $sp2a70f1 = MY_PROXY; $sp75ba11 = CURLPROXY_HTTP; if (strpos($sp2a70f1, 'http://') || strpos($sp2a70f1, 'https://')) { $sp2a70f1 = str_replace('http://', $sp2a70f1, $sp2a70f1); $sp2a70f1 = str_replace('https://', $sp2a70f1, $sp2a70f1); $sp75ba11 = CURLPROXY_HTTP; } elseif (strpos($sp2a70f1, 'socks4://')) { $sp2a70f1 = str_replace('socks4://', $sp2a70f1, $sp2a70f1); $sp75ba11 = CURLPROXY_SOCKS4; } elseif (strpos($sp2a70f1, 'socks4a://')) { $sp2a70f1 = str_replace('socks4a://', $sp2a70f1, $sp2a70f1); $sp75ba11 = CURLPROXY_SOCKS4A; } elseif (strpos($sp2a70f1, 'socks5://')) { $sp2a70f1 = str_replace('socks5://', $sp2a70f1, $sp2a70f1); $sp75ba11 = CURLPROXY_SOCKS5_HOSTNAME; } curl_setopt($spd5d7db, CURLOPT_PROXY, $sp2a70f1); curl_setopt($spd5d7db, CURLOPT_PROXYTYPE, $sp75ba11); if (defined('MY_PROXY_PASS')) { curl_setopt($spd5d7db, CURLOPT_PROXYUSERPWD, MY_PROXY_PASS); } } curl_exec($spd5d7db); curl_close($spd5d7db); echo '
'; return true; } public function handle() { set_time_limit(0); $sp2a70f1 = $this->option('proxy'); if (!empty($sp2a70f1)) { define('MY_PROXY', $sp2a70f1); } $spd4987d = $this->option('proxy-auth'); if (!empty($spd4987d)) { define('MY_PROXY_PASS', $spd4987d); } \Artisan::call('cache:clear'); \Artisan::call('config:clear'); echo '
'; $this->comment('检查更新中...'); $this->info('当前版本: ' . config('app.version')); $sp8fb762 = @json_decode(CurlRequest::get('https://raw.githubusercontent.com/Tai7sy/card-system/master/.version'), true); if (!@$sp8fb762['version']) { $this->warn('检查更新失败!'); $this->warn('Error: ' . ($sp8fb762 ? json_encode($sp8fb762) : 'Network error')); goto LABEL_EXIT; } if (config('app.version') >= $sp8fb762['version']) { $this->comment('您的版本已是最新!'); goto LABEL_EXIT; } $this->info('最新版本: ' . $sp8fb762['version']); $this->info('版本说明: ' . (@$sp8fb762['description'] ?? '无')); $spd75567 = strtolower($this->ask('是否现在更新 (yes/no)', 'no')); if ($spd75567 !== 'yes') { goto LABEL_EXIT; } $spfc9edd = realpath(sys_get_temp_dir()); if (strlen($spfc9edd) < 3) { $this->warn('获取临时目录失败!'); goto LABEL_EXIT; } $spfc9edd .= DIRECTORY_SEPARATOR . Str::random(16); if (!mkdir($spfc9edd) || !is_writable($spfc9edd) || !is_readable($spfc9edd)) { $this->warn('临时目录不可读写!'); goto LABEL_EXIT; } if (!function_exists('exec')) { $this->warn('函数 exec 已被禁用, 无法继续更新!'); goto LABEL_EXIT; } if (PHP_OS === 'WINNT') { $spfe7bed = 'C:\\Program Files\\7-Zip\\7z.exe'; if (!is_file($spfe7bed)) { $spfe7bed = strtolower($this->ask('未找到7-Zip, 请手动输入7zG.exe路径', $spfe7bed)); } if (!is_file($spfe7bed)) { $this->warn('7-Zip不可用, 请安装7-Zip后重试'); goto LABEL_EXIT; } $spfe7bed = '"' . $spfe7bed . '"'; } else { exec('tar --version', $sp617ec1, $sp340916); if ($sp340916) { $this->warn('Error: tar --version 
' . join('
', $sp617ec1)); goto LABEL_EXIT; } } $this->comment('正在下载新版本...'); $sp5b688a = $spfc9edd . DIRECTORY_SEPARATOR . 'ka_update_' . Str::random(16) . '.tmp'; if (!$this->download_progress($sp8fb762['url'], $sp5b688a)) { $this->warn('写入临时文件失败!'); goto LABEL_EXIT; } $spa95811 = md5_file($sp5b688a); if ($spa95811 !== $sp8fb762['md5']) { $this->warn('更新文件md5校验失败!, file:' . $spa95811 . ', require:' . $sp8fb762['md5']); goto LABEL_EXIT; } $this->comment('正在解压...'); unset($sp617ec1); if (PHP_OS === 'WINNT') { exec("{$spfe7bed} x -so {$sp5b688a} | {$spfe7bed} x -aoa -si -ttar -o{$spfc9edd}", $sp617ec1, $sp340916); } else { exec("tar -zxf {$sp5b688a} -C {$spfc9edd}", $sp617ec1, $sp340916); } if ($sp340916) { $this->warn('Error: 解压失败 
' . join('
', $sp617ec1)); goto LABEL_EXIT; } $this->comment('正在关闭主站...'); \Artisan::call('down'); sleep(5); $this->comment(' --> 正在清理旧文件...'); $spd93dee = base_path(); foreach (array('app', 'bootstrap', 'config', 'public/dist', 'database', 'routes', 'vendor') as $sp189f81) { \File::deleteDirectory($spd93dee . DIRECTORY_SEPARATOR . $sp189f81); } $this->comment(' --> 正在复制新文件...'); \File::copyDirectory($spfc9edd . DIRECTORY_SEPARATOR . 'card_system_free_dist', $spd93dee); $this->comment(' --> 正在创建缓存...'); \Artisan::call('cache:clear'); \Artisan::call('route:cache'); \Artisan::call('config:cache'); $this->comment(' --> 正在更新数据库...'); \Artisan::call('migrate'); if (PHP_OS === 'WINNT') { echo '
'; $this->alert('请注意手动设置目录权限'); $this->comment('    storage 可读可写             '); $this->comment('    bootstrap/cache/ 可读可写    '); echo '

'; } else { $this->comment(' --> 正在设置目录权限...'); exec('rm -rf storage/framework/cache/data/*'); exec('chmod -R 777 storage/'); exec('chmod -R 777 bootstrap/cache/'); } $this->comment('正在启用主站...'); \Artisan::call('up'); \Artisan::call('queue:restart'); $sp4044a4 = true; LABEL_EXIT: if (isset($spfc9edd) && strlen($spfc9edd) > 19) { $this->comment('清理临时目录...'); \File::deleteDirectory($spfc9edd); } if (isset($sp4044a4) && $sp4044a4) { $this->info('更新成功!'); } if (PHP_OS === 'WINNT') { } else { exec('rm -rf storage/framework/cache/data/*'); exec('chmod -R 777 storage/'); exec('chmod -R 777 bootstrap/cache/'); } echo '
'; die; } }