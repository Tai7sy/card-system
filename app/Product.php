<?php
namespace App; use App\Library\Helper; use Illuminate\Database\Eloquent\Model; use Illuminate\Support\Facades\Log as LogWriter; class Product extends Model { protected $guarded = array(); protected $hidden = array(); const ID_API = -1001; const DELIVERY_AUTO = 0; const DELIVERY_MANUAL = 1; const DELIVERY_API = 2; function getUrlAttribute() { return config('app.url') . '/p/' . Helper::id_encode($this->id, Helper::ID_TYPE_PRODUCT); } function getCountAttribute() { return $this->count_all - $this->count_sold; } function category() { return $this->belongsTo(Category::class); } function cards() { return $this->hasMany(Card::class); } function coupons() { return $this->hasMany(Coupon::class); } function orders() { return $this->hasMany(Order::class); } function user() { return $this->belongsTo(User::class); } public static function refreshCount($sp586d7b) { \App\Card::where('user_id', $sp586d7b->id)->selectRaw('`product_id`,SUM(`count_sold`) as `count_sold`,SUM(`count_all`) as `count_all`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(1000, function ($spce7b49) { foreach ($spce7b49 as $spb0ed4f) { $sp551a82 = \App\Product::where('id', $spb0ed4f->product_id)->first(); if ($sp551a82) { if ($sp551a82->delivery === \App\Product::DELIVERY_MANUAL) { $sp551a82->update(array('count_sold' => $spb0ed4f->count_sold)); } else { $sp551a82->update(array('count_sold' => $spb0ed4f->count_sold, 'count_all' => $spb0ed4f->count_all)); } } else { } } }); } function createApiCards($sp7cc18f) { $sp9e234a = array(); $sp392ff2 = array(); $spe39d63 = array(); for ($sp02b863 = 0; $sp02b863 < $sp7cc18f->count; $sp02b863++) { $sp9e234a[] = strtoupper(str_random(16)); $spf6645c = date('Y-m-d H:i:s'); switch ($this->id) { case 6: $sp9698d4 = 1; break; case 11: $sp9698d4 = 2; break; case 37: $sp9698d4 = 3; break; default: die('App.Products fatal error#1'); } $spe39d63[] = array('user_id' => $this->user_id, 'product_id' => $this->id, 'card' => $sp9e234a[$sp02b863], 'type' => \App\Card::TYPE_ONETIME, 'status' => \App\Card::STATUS_NORMAL, 'count_sold' => 0, 'count_all' => 1); $sp392ff2[] = "(NULL, '{$sp9e234a[$sp02b863]}', '1', '{$sp9698d4}', NULL, NULL, NULL, NULL, NULL, '0', '{$spf6645c}', '0000-00-00 00:00:00')"; } $sp421dac = mysqli_connect('localhost', 'udiddz', 'tRihPm3sh6yKedtX', 'udiddz', '3306'); $spa73ffb = 'INSERT INTO `udiddz`.`ac_kms` (`id`, `km`, `value`, `task`, `udid`, `diz`, `task_id`, `install_url`, `plist_url`, `jh`, `addtime`, `tjtime`) VALUES ' . join(',', $sp392ff2); $sp89a09f = mysqli_query($sp421dac, $spa73ffb); if (!$sp89a09f) { LogWriter::error('App.Products, connect udid database failed', array('sql' => $spa73ffb, 'error' => mysqli_error($sp421dac))); return array(); } $this->count_all += $sp7cc18f->count; return $this->cards()->createMany($spe39d63); } function setForShop($sp586d7b = null) { $sp551a82 = $this; $sp88dd02 = $sp551a82->count; $speb21e6 = $sp551a82->inventory; if ($speb21e6 == User::INVENTORY_AUTO) { $speb21e6 = System::_getInt('shop_inventory'); } if ($speb21e6 == User::INVENTORY_RANGE) { if ($sp88dd02 <= 0) { $sp03df73 = '不足'; } elseif ($sp88dd02 <= 10) { $sp03df73 = '少量'; } elseif ($sp88dd02 <= 20) { $sp03df73 = '一般'; } else { $sp03df73 = '大量'; } $sp551a82->setAttribute('count2', $sp03df73); } else { $sp551a82->setAttribute('count2', $sp88dd02); } $sp551a82->setAttribute('count', $sp88dd02); $sp551a82->setVisible(array('id', 'name', 'description', 'fields', 'delivery', 'count', 'count2', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } }