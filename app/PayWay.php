<?php
namespace App; use App\Library\Helper; use Illuminate\Database\Eloquent\Model; class PayWay extends Model { protected $guarded = array(); protected $casts = array('channels' => 'array'); const ENABLED_DISABLED = 0; const ENABLED_PC = 1; const ENABLED_MOBILE = 2; const ENABLED_ALL = 3; const TYPE_SHOP = 1; const TYPE_API = 2; public function getPayByWeight() { $sp7aa4d7 = $sped5a6d = 0; $spfc3657 = array(); $sp315ad7 = array(); foreach ($this->channels as $sp4ae387) { $sp315ad7[] = intval($sp4ae387[0]); } $sp015ca0 = \App\Pay::gets()->filter(function ($sp38a73e) use($sp315ad7) { return in_array($sp38a73e->id, $sp315ad7); }); $sp55414f = array(); foreach ($sp015ca0 as $sp074b78) { $sp55414f[$sp074b78->id] = $sp074b78; } foreach ($this->channels as $sp4ae387) { $sp6a791a = intval($sp4ae387[0]); $sp05ebbf = intval($sp4ae387[1]); if ($sp05ebbf && isset($sp55414f[$sp6a791a]) && $sp55414f[$sp6a791a]->enabled > 0) { $sp7aa4d7 += $sp05ebbf; $spfbcac1 = $sped5a6d + $sp05ebbf; $spfc3657[] = array('min' => $sped5a6d, 'max' => $spfbcac1, 'pay_id' => $sp6a791a); $sped5a6d = $spfbcac1; } } if ($sp7aa4d7 <= 0) { return null; } $spf0c12f = mt_rand(0, $sp7aa4d7 - 1); foreach ($spfc3657 as $sp41841a) { if ($sp41841a['min'] <= $spf0c12f && $spf0c12f < $sp41841a['max']) { return $sp55414f[$sp41841a['pay_id']]; } } return null; } public static function gets($sp3db17d, $spdb8569 = null) { $sp30241a = self::query(); if ($spdb8569 !== null) { $sp30241a->where($spdb8569); } $sp5a3251 = $sp30241a->orderBy('sort')->get(array('name', 'img', 'channels')); $sp3ccedd = array(); foreach ($sp5a3251 as $sp0aecc0) { $sp38a73e = $sp0aecc0->getPayByWeight(); if ($sp38a73e) { $sp38a73e->setAttribute('name', $sp0aecc0->name); $sp38a73e->setAttribute('img', $sp0aecc0->img); $sp38a73e->setVisible(array('id', 'name', 'img', 'fee')); $sp3ccedd[] = $sp38a73e; } } return $sp3ccedd; } }