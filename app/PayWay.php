<?php
namespace App; use App\Library\Helper; use Illuminate\Database\Eloquent\Model; class PayWay extends Model { protected $guarded = array(); protected $casts = array('channels' => 'array'); const ENABLED_DISABLED = 0; const ENABLED_PC = 1; const ENABLED_MOBILE = 2; const ENABLED_ALL = 3; const TYPE_SHOP = 1; const TYPE_API = 2; public function getPayByWeight() { $sp9154dd = $sp4e234d = 0; $spe62661 = array(); $sp8152f4 = array(); foreach ($this->channels as $sp415442) { $sp8152f4[] = intval($sp415442[0]); } $sp62c4a9 = \App\Pay::gets()->filter(function ($sp56e1de) use($sp8152f4) { return in_array($sp56e1de->id, $sp8152f4); }); $sp66eda5 = array(); foreach ($sp62c4a9 as $spf3ddf1) { $sp66eda5[$spf3ddf1->id] = $spf3ddf1; } foreach ($this->channels as $sp415442) { $sp62a4ae = intval($sp415442[0]); $spa76b52 = intval($sp415442[1]); if ($spa76b52 && isset($sp66eda5[$sp62a4ae]) && $sp66eda5[$sp62a4ae]->enabled > 0) { $sp9154dd += $spa76b52; $spc2c830 = $sp4e234d + $spa76b52; $spe62661[] = array('min' => $sp4e234d, 'max' => $spc2c830, 'pay_id' => $sp62a4ae); $sp4e234d = $spc2c830; } } if ($sp9154dd <= 0) { return null; } $spbd7274 = mt_rand(0, $sp9154dd - 1); foreach ($spe62661 as $sp5ef001) { if ($sp5ef001['min'] <= $spbd7274 && $spbd7274 < $sp5ef001['max']) { return $sp66eda5[$sp5ef001['pay_id']]; } } return null; } public static function gets($sp766bcc, $spb8456b = null) { $spa8a4ff = self::query(); if ($spb8456b !== null) { $spa8a4ff->where($spb8456b); } $spbe119c = $spa8a4ff->orderBy('sort')->get(array('name', 'img', 'channels')); $sp921893 = array(); foreach ($spbe119c as $spab11a3) { $sp56e1de = $spab11a3->getPayByWeight(); if ($sp56e1de) { $sp56e1de->setAttribute('name', $spab11a3->name); $sp56e1de->setAttribute('img', $spab11a3->img); $sp56e1de->setVisible(array('id', 'name', 'img', 'fee')); $sp921893[] = $sp56e1de; } } return $sp921893; } }