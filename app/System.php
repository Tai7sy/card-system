<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Facades\Log; class System extends Model { protected $guarded = array(); private static $systems = array(); public static function _init() { static::$systems = Cache::remember('settings.all', 10, function () { $sp8fb770 = self::query()->get()->toArray(); foreach ($sp8fb770 as $sp83261f) { static::$systems[$sp83261f['name']] = $sp83261f['value']; } return static::$systems; }); static::$systems['_initialized'] = true; } public static function _get($sp832442, $spef5c9c = NULL) { if (!isset(static::$systems['_initialized'])) { static::_init(); } if (isset(static::$systems[$sp832442])) { return static::$systems[$sp832442]; } return $spef5c9c; } public static function _getInt($sp832442, $spef5c9c = NULL) { return (int) static::_get($sp832442, $spef5c9c); } public static function _set($sp832442, $spbf479d) { static::$systems[$sp832442] = $spbf479d; $sp18931e = System::query()->where('name', $sp832442)->first(); if ($sp18931e) { $sp18931e->value = $spbf479d; $sp18931e->save(); } else { try { System::query()->create(array('name' => $sp832442, 'value' => $spbf479d)); } catch (\Exception $sp0b065e) { } } self::flushCache(); } public static function flushCache() { Cache::forget('settings.all'); } protected static function boot() { parent::boot(); static::updated(function () { self::flushCache(); }); static::created(function () { self::flushCache(); }); static::deleted(function () { self::flushCache(); }); } }