<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp7819f2, $sp15a746, $sp0332ad, $sp8dd66e = false) { try { $sp078d84 = $sp7819f2->extension(); } catch (\Throwable $sp3f4aab) { return Response::fail($sp3f4aab->getMessage()); } if (!$sp7819f2 || !in_array(strtolower($sp078d84), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp7819f2->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp14400e = $sp7819f2->store($sp0332ad, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp3f4aab) { \Log::error('File.uploadImg folder:' . $sp0332ad . ', error:' . $sp3f4aab->getMessage(), array('exception' => $sp3f4aab)); if (config('app.debug')) { return Response::fail($sp3f4aab->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp14400e) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spd1dcf7 = System::_get('storage_driver'); $spd2457c = Storage::disk($spd1dcf7)->url($sp14400e); $sp899977 = \App\File::insertGetId(array('user_id' => $sp15a746, 'driver' => $spd1dcf7, 'path' => $sp14400e, 'url' => $spd2457c)); if ($sp899977 < 1) { Storage::disk($spd1dcf7)->delete($sp14400e); return Response::fail('数据库繁忙，请稍后再试'); } $sp9b52fe = array('id' => $sp899977, 'url' => $spd2457c, 'name' => pathinfo($sp14400e, PATHINFO_BASENAME)); if ($sp8dd66e) { return $sp9b52fe; } return Response::success($sp9b52fe); } function upload_merchant(Request $spf066f3) { $spbbb773 = $this->getUser($spf066f3); if ($spbbb773 === null) { return Response::forbidden('无效的用户'); } $sp7819f2 = $spf066f3->file('file'); return $this->uploadImg($sp7819f2, $spbbb773->id, \App\File::getProductFolder()); } public function renderImage(Request $spf066f3, $sp0dbcdb) { if (str_contains($sp0dbcdb, '..') || str_contains($sp0dbcdb, './') || str_contains($sp0dbcdb, '.\\') || !starts_with($sp0dbcdb, 'images/')) { $sp0114c4 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp0dbcdb = str_replace('\\', '/', $sp0dbcdb); $sp7819f2 = \App\File::wherePath($sp0dbcdb)->first(); if ($sp7819f2) { $spd1dcf7 = $sp7819f2->driver; } else { $spd1dcf7 = System::_get('storage_driver'); } if (!in_array($spd1dcf7, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp0114c4 = Storage::disk($spd1dcf7)->get($sp0dbcdb); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp3f4aab) { \Log::error('File.renderImage error: ' . $sp3f4aab->getMessage(), array('exception' => $sp3f4aab)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp0dbcdb)); die($sp0114c4); } }