<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp6fe701, $sp9935c9, $spba814a, $sp69e5b7 = false) { try { $sp0ceba3 = $sp6fe701->extension(); } catch (\Throwable $spb62437) { return Response::fail($spb62437->getMessage()); } if (!$sp6fe701 || !in_array(strtolower($sp0ceba3), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp6fe701->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spf25d20 = $sp6fe701->store($spba814a, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spb62437) { \Log::error('File.uploadImg folder:' . $spba814a . ', error:' . $spb62437->getMessage(), array('exception' => $spb62437)); if (config('app.debug')) { return Response::fail($spb62437->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spf25d20) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spbce479 = System::_get('storage_driver'); $sped560b = Storage::disk($spbce479)->url($spf25d20); $spd9505b = \App\File::insertGetId(array('user_id' => $sp9935c9, 'driver' => $spbce479, 'path' => $spf25d20, 'url' => $sped560b)); if ($spd9505b < 1) { Storage::disk($spbce479)->delete($spf25d20); return Response::fail('数据库繁忙，请稍后再试'); } $spf96e67 = array('id' => $spd9505b, 'url' => $sped560b, 'name' => pathinfo($spf25d20, PATHINFO_BASENAME)); if ($sp69e5b7) { return $spf96e67; } return Response::success($spf96e67); } function upload_merchant(Request $sp0aae4c) { $spd05c92 = $this->getUser($sp0aae4c); if ($spd05c92 === null) { return Response::forbidden('无效的用户'); } $sp6fe701 = $sp0aae4c->file('file'); return $this->uploadImg($sp6fe701, $spd05c92->id, \App\File::getProductFolder()); } public function renderImage(Request $sp0aae4c, $sp48c2a3) { if (str_contains($sp48c2a3, '..') || str_contains($sp48c2a3, './') || str_contains($sp48c2a3, '.\\') || !starts_with($sp48c2a3, 'images/')) { $sp47e917 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp48c2a3 = str_replace('\\', '/', $sp48c2a3); $sp6fe701 = \App\File::wherePath($sp48c2a3)->first(); if ($sp6fe701) { $spbce479 = $sp6fe701->driver; } else { $spbce479 = System::_get('storage_driver'); } if (!in_array($spbce479, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp47e917 = Storage::disk($spbce479)->get($sp48c2a3); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spb62437) { \Log::error('File.renderImage error: ' . $spb62437->getMessage(), array('exception' => $spb62437)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp48c2a3)); die($sp47e917); } }