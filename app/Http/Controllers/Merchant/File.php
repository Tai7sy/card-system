<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp1aef29, $spf36aa8, $spb21041, $spe68ff6 = false) { try { $sp2701eb = $sp1aef29->extension(); } catch (\Throwable $spa356ee) { return Response::fail($spa356ee->getMessage()); } if (!$sp1aef29 || !in_array(strtolower($sp2701eb), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp1aef29->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp650cb7 = $sp1aef29->store($spb21041, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spa356ee) { \Log::error('File.uploadImg folder:' . $spb21041 . ', error:' . $spa356ee->getMessage(), array('exception' => $spa356ee)); if (config('app.debug')) { return Response::fail($spa356ee->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp650cb7) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp1de99d = System::_get('storage_driver'); $spedbcde = Storage::disk($sp1de99d)->url($sp650cb7); $sp161540 = \App\File::insertGetId(array('user_id' => $spf36aa8, 'driver' => $sp1de99d, 'path' => $sp650cb7, 'url' => $spedbcde)); if ($sp161540 < 1) { Storage::disk($sp1de99d)->delete($sp650cb7); return Response::fail('数据库繁忙，请稍后再试'); } $spa6aab5 = array('id' => $sp161540, 'url' => $spedbcde, 'name' => pathinfo($sp650cb7, PATHINFO_BASENAME)); if ($spe68ff6) { return $spa6aab5; } return Response::success($spa6aab5); } function upload_merchant(Request $sp179c14) { $sp359016 = $this->getUser($sp179c14); if ($sp359016 === null) { return Response::forbidden('无效的用户'); } $sp1aef29 = $sp179c14->file('file'); return $this->uploadImg($sp1aef29, $sp359016->id, \App\File::getProductFolder()); } public function renderImage(Request $sp179c14, $sp896145) { if (str_contains($sp896145, '..') || str_contains($sp896145, './') || str_contains($sp896145, '.\\') || !starts_with($sp896145, 'images/')) { $spe4efb3 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp896145 = str_replace('\\', '/', $sp896145); $sp1aef29 = \App\File::wherePath($sp896145)->first(); if ($sp1aef29) { $sp1de99d = $sp1aef29->driver; } else { $sp1de99d = System::_get('storage_driver'); } if (!in_array($sp1de99d, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spe4efb3 = Storage::disk($sp1de99d)->get($sp896145); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spa356ee) { \Log::error('File.renderImage error: ' . $spa356ee->getMessage(), array('exception' => $spa356ee)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp896145)); die($spe4efb3); } }