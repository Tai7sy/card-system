<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp6af60e, $spf93fb1, $spc1aef5, $sp8fe6e0 = false) { try { $spe771a0 = $sp6af60e->extension(); } catch (\Throwable $sp54a0c6) { return Response::fail($sp54a0c6->getMessage()); } if (!$sp6af60e || !in_array(strtolower($spe771a0), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp6af60e->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp987089 = $sp6af60e->store($spc1aef5, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp54a0c6) { \Log::error('File.uploadImg folder:' . $spc1aef5 . ', error:' . $sp54a0c6->getMessage(), array('exception' => $sp54a0c6)); if (config('app.debug')) { return Response::fail($sp54a0c6->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp987089) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spdb4e42 = System::_get('storage_driver'); $spe1037b = Storage::disk($spdb4e42)->url($sp987089); $sp85b2e2 = \App\File::insertGetId(array('user_id' => $spf93fb1, 'driver' => $spdb4e42, 'path' => $sp987089, 'url' => $spe1037b)); if ($sp85b2e2 < 1) { Storage::disk($spdb4e42)->delete($sp987089); return Response::fail('数据库繁忙，请稍后再试'); } $sp8ee8d3 = array('id' => $sp85b2e2, 'url' => $spe1037b, 'name' => pathinfo($sp987089, PATHINFO_BASENAME)); if ($sp8fe6e0) { return $sp8ee8d3; } return Response::success($sp8ee8d3); } function upload_merchant(Request $spdf16c9) { $sp0a324a = $this->getUser($spdf16c9); if ($sp0a324a === null) { return Response::forbidden('无效的用户'); } $sp6af60e = $spdf16c9->file('file'); return $this->uploadImg($sp6af60e, $sp0a324a->id, \App\File::getProductFolder()); } public function renderImage(Request $spdf16c9, $spae4bad) { if (str_contains($spae4bad, '..') || str_contains($spae4bad, './') || str_contains($spae4bad, '.\\') || !starts_with($spae4bad, 'images/')) { $spd6d017 = file_get_contents(public_path('images/illegal.jpg')); } else { $spae4bad = str_replace('\\', '/', $spae4bad); $sp6af60e = \App\File::wherePath($spae4bad)->first(); if ($sp6af60e) { $spdb4e42 = $sp6af60e->driver; } else { $spdb4e42 = System::_get('storage_driver'); } if (!in_array($spdb4e42, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spd6d017 = Storage::disk($spdb4e42)->get($spae4bad); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp54a0c6) { \Log::error('File.renderImage error: ' . $sp54a0c6->getMessage(), array('exception' => $sp54a0c6)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spae4bad)); die($spd6d017); } }