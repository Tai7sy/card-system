<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp0622a5, $sp3546ff, $spe1acd8, $sp49ed5f = false) { try { $sp79b29c = $sp0622a5->extension(); } catch (\Throwable $spd3b3eb) { return Response::fail($spd3b3eb->getMessage()); } if (!$sp0622a5 || !in_array(strtolower($sp79b29c), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp0622a5->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp06b627 = $sp0622a5->store($spe1acd8, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spd3b3eb) { \Log::error('File.uploadImg folder:' . $spe1acd8 . ', error:' . $spd3b3eb->getMessage(), array('exception' => $spd3b3eb)); if (config('app.debug')) { return Response::fail($spd3b3eb->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp06b627) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp4e6985 = System::_get('storage_driver'); $sp4daeba = Storage::disk($sp4e6985)->url($sp06b627); $sp9ff89a = \App\File::insertGetId(array('user_id' => $sp3546ff, 'driver' => $sp4e6985, 'path' => $sp06b627, 'url' => $sp4daeba)); if ($sp9ff89a < 1) { Storage::disk($sp4e6985)->delete($sp06b627); return Response::fail('数据库繁忙，请稍后再试'); } $spced997 = array('id' => $sp9ff89a, 'url' => $sp4daeba, 'name' => pathinfo($sp06b627, PATHINFO_BASENAME)); if ($sp49ed5f) { return $spced997; } return Response::success($spced997); } function upload_merchant(Request $sp510ef3) { $sp24cedd = $this->getUser($sp510ef3); if ($sp24cedd === null) { return Response::forbidden('无效的用户'); } $sp0622a5 = $sp510ef3->file('file'); return $this->uploadImg($sp0622a5, $sp24cedd->id, \App\File::getProductFolder()); } public function renderImage(Request $sp510ef3, $sp1a6837) { if (str_contains($sp1a6837, '..') || str_contains($sp1a6837, './') || str_contains($sp1a6837, '.\\') || !starts_with($sp1a6837, 'images/')) { $sp9d5741 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp1a6837 = str_replace('\\', '/', $sp1a6837); $sp0622a5 = \App\File::wherePath($sp1a6837)->first(); if ($sp0622a5) { $sp4e6985 = $sp0622a5->driver; } else { $sp4e6985 = System::_get('storage_driver'); } if (!in_array($sp4e6985, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp9d5741 = Storage::disk($sp4e6985)->get($sp1a6837); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spd3b3eb) { \Log::error('File.renderImage error: ' . $spd3b3eb->getMessage(), array('exception' => $spd3b3eb)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp1a6837)); die($sp9d5741); } }