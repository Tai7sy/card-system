<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spe76f31, $spacf00d, $spb64fea, $sp64ccc8 = false) { try { $sp0c4639 = $spe76f31->extension(); } catch (\Throwable $sp0b065e) { return Response::fail($sp0b065e->getMessage()); } if (!$spe76f31 || !in_array(strtolower($sp0c4639), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spe76f31->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp7c9413 = $spe76f31->store($spb64fea, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp0b065e) { \Log::error('File.uploadImg folder:' . $spb64fea . ', error:' . $sp0b065e->getMessage(), array('exception' => $sp0b065e)); if (config('app.debug')) { return Response::fail($sp0b065e->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp7c9413) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sped6dfb = System::_get('storage_driver'); $sp069c22 = Storage::disk($sped6dfb)->url($sp7c9413); $sp710c78 = \App\File::insertGetId(array('user_id' => $spacf00d, 'driver' => $sped6dfb, 'path' => $sp7c9413, 'url' => $sp069c22)); if ($sp710c78 < 1) { Storage::disk($sped6dfb)->delete($sp7c9413); return Response::fail('数据库繁忙，请稍后再试'); } $spd9807c = array('id' => $sp710c78, 'url' => $sp069c22, 'name' => pathinfo($sp7c9413, PATHINFO_BASENAME)); if ($sp64ccc8) { return $spd9807c; } return Response::success($spd9807c); } function upload_merchant(Request $sp517903) { $sp3db17d = $this->getUser($sp517903); if ($sp3db17d === null) { return Response::forbidden('无效的用户'); } $spe76f31 = $sp517903->file('file'); return $this->uploadImg($spe76f31, $sp3db17d->id, \App\File::getProductFolder()); } public function renderImage(Request $sp517903, $spb98a37) { if (str_contains($spb98a37, '..') || str_contains($spb98a37, './') || str_contains($spb98a37, '.\\') || !starts_with($spb98a37, 'images/')) { $spf0e374 = file_get_contents(public_path('images/illegal.jpg')); } else { $spb98a37 = str_replace('\\', '/', $spb98a37); $spe76f31 = \App\File::wherePath($spb98a37)->first(); if ($spe76f31) { $sped6dfb = $spe76f31->driver; } else { $sped6dfb = System::_get('storage_driver'); } if (!in_array($sped6dfb, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spf0e374 = Storage::disk($sped6dfb)->get($spb98a37); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp0b065e) { \Log::error('File.renderImage error: ' . $sp0b065e->getMessage(), array('exception' => $sp0b065e)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spb98a37)); die($spf0e374); } }