<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp7c04ba, $spfa021e, $sp5a8117, $sp3deb4f = false) { try { $sp8d4fd9 = $sp7c04ba->extension(); } catch (\Throwable $sp81eee8) { return Response::fail($sp81eee8->getMessage()); } if (!$sp7c04ba || !in_array(strtolower($sp8d4fd9), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp7c04ba->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp61aa55 = $sp7c04ba->store($sp5a8117, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp81eee8) { \Log::error('File.uploadImg folder:' . $sp5a8117 . ', error:' . $sp81eee8->getMessage(), array('exception' => $sp81eee8)); if (config('app.debug')) { return Response::fail($sp81eee8->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp61aa55) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp33ee9e = System::_get('storage_driver'); $sp3db1b2 = Storage::disk($sp33ee9e)->url($sp61aa55); $spe26681 = \App\File::insertGetId(array('user_id' => $spfa021e, 'driver' => $sp33ee9e, 'path' => $sp61aa55, 'url' => $sp3db1b2)); if ($spe26681 < 1) { Storage::disk($sp33ee9e)->delete($sp61aa55); return Response::fail('数据库繁忙，请稍后再试'); } $spb9589c = array('id' => $spe26681, 'url' => $sp3db1b2, 'name' => pathinfo($sp61aa55, PATHINFO_BASENAME)); if ($sp3deb4f) { return $spb9589c; } return Response::success($spb9589c); } function upload_merchant(Request $spfeab54) { $spafa70b = $this->getUser($spfeab54); if ($spafa70b === null) { return Response::forbidden('无效的用户'); } $sp7c04ba = $spfeab54->file('file'); return $this->uploadImg($sp7c04ba, $spafa70b->id, \App\File::getProductFolder()); } public function renderImage(Request $spfeab54, $sp40a3a6) { if (str_contains($sp40a3a6, '..') || str_contains($sp40a3a6, './') || str_contains($sp40a3a6, '.\\') || !starts_with($sp40a3a6, 'images/')) { $sp02ec60 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp40a3a6 = str_replace('\\', '/', $sp40a3a6); $sp7c04ba = \App\File::wherePath($sp40a3a6)->first(); if ($sp7c04ba) { $sp33ee9e = $sp7c04ba->driver; } else { $sp33ee9e = System::_get('storage_driver'); } if (!in_array($sp33ee9e, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp02ec60 = Storage::disk($sp33ee9e)->get($sp40a3a6); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp81eee8) { \Log::error('File.renderImage error: ' . $sp81eee8->getMessage(), array('exception' => $sp81eee8)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp40a3a6)); die($sp02ec60); } }