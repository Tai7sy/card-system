<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp156061, $sp7aa9af, $sp579491, $sp449a5b = false) { try { $sp7e01e8 = $sp156061->extension(); } catch (\Throwable $spd118f7) { return Response::fail($spd118f7->getMessage()); } if (!$sp156061 || !in_array(strtolower($sp7e01e8), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp156061->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spc6a7c6 = $sp156061->store($sp579491, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spd118f7) { \Log::error('File.uploadImg folder:' . $sp579491 . ', error:' . $spd118f7->getMessage(), array('exception' => $spd118f7)); if (config('app.debug')) { return Response::fail($spd118f7->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spc6a7c6) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spfd2d0c = System::_get('storage_driver'); $sp81d92a = Storage::disk($spfd2d0c)->url($spc6a7c6); $spb966ab = \App\File::insertGetId(array('user_id' => $sp7aa9af, 'driver' => $spfd2d0c, 'path' => $spc6a7c6, 'url' => $sp81d92a)); if ($spb966ab < 1) { Storage::disk($spfd2d0c)->delete($spc6a7c6); return Response::fail('数据库繁忙，请稍后再试'); } $spa64ee0 = array('id' => $spb966ab, 'url' => $sp81d92a, 'name' => pathinfo($spc6a7c6, PATHINFO_BASENAME)); if ($sp449a5b) { return $spa64ee0; } return Response::success($spa64ee0); } function upload_merchant(Request $spe5a184) { $sp766bcc = $this->getUser($spe5a184); if ($sp766bcc === null) { return Response::forbidden('无效的用户'); } $sp156061 = $spe5a184->file('file'); return $this->uploadImg($sp156061, $sp766bcc->id, \App\File::getProductFolder()); } public function renderImage(Request $spe5a184, $sp708f03) { if (str_contains($sp708f03, '..') || str_contains($sp708f03, './') || str_contains($sp708f03, '.\\') || !starts_with($sp708f03, 'images/')) { $sp315b50 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp708f03 = str_replace('\\', '/', $sp708f03); $sp156061 = \App\File::wherePath($sp708f03)->first(); if ($sp156061) { $spfd2d0c = $sp156061->driver; } else { $spfd2d0c = System::_get('storage_driver'); } if (!in_array($spfd2d0c, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp315b50 = Storage::disk($spfd2d0c)->get($sp708f03); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spd118f7) { \Log::error('File.renderImage error: ' . $spd118f7->getMessage(), array('exception' => $spd118f7)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp708f03)); die($sp315b50); } }