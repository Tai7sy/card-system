<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spc4ec19, $spc2f05b, $sp0882aa, $sp250071 = false) { try { $spc2872e = $spc4ec19->extension(); } catch (\Throwable $spf95c2c) { return Response::fail($spf95c2c->getMessage()); } if (!$spc4ec19 || !in_array(strtolower($spc2872e), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spc4ec19->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp253104 = $spc4ec19->store($sp0882aa, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spf95c2c) { \Log::error('File.uploadImg folder:' . $sp0882aa . ', error:' . $spf95c2c->getMessage(), array('exception' => $spf95c2c)); if (config('app.debug')) { return Response::fail($spf95c2c->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp253104) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp37a9b3 = System::_get('storage_driver'); $sp935125 = Storage::disk($sp37a9b3)->url($sp253104); $sp6dbd1c = \App\File::insertGetId(array('user_id' => $spc2f05b, 'driver' => $sp37a9b3, 'path' => $sp253104, 'url' => $sp935125)); if ($sp6dbd1c < 1) { Storage::disk($sp37a9b3)->delete($sp253104); return Response::fail('数据库繁忙，请稍后再试'); } $sp6706d8 = array('id' => $sp6dbd1c, 'url' => $sp935125, 'name' => pathinfo($sp253104, PATHINFO_BASENAME)); if ($sp250071) { return $sp6706d8; } return Response::success($sp6706d8); } function upload_merchant(Request $sp375069) { $sp264a55 = $this->getUser($sp375069); if ($sp264a55 === null) { return Response::forbidden('无效的用户'); } $spc4ec19 = $sp375069->file('file'); return $this->uploadImg($spc4ec19, $sp264a55->id, \App\File::getProductFolder()); } public function renderImage(Request $sp375069, $sp40b75e) { if (str_contains($sp40b75e, '..') || str_contains($sp40b75e, './') || str_contains($sp40b75e, '.\\') || !starts_with($sp40b75e, 'images/')) { $sp2867cd = file_get_contents(public_path('images/illegal.jpg')); } else { $sp40b75e = str_replace('\\', '/', $sp40b75e); $spc4ec19 = \App\File::wherePath($sp40b75e)->first(); if ($spc4ec19) { $sp37a9b3 = $spc4ec19->driver; } else { $sp37a9b3 = System::_get('storage_driver'); } if (!in_array($sp37a9b3, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp2867cd = Storage::disk($sp37a9b3)->get($sp40b75e); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spf95c2c) { \Log::error('File.renderImage error: ' . $spf95c2c->getMessage(), array('exception' => $spf95c2c)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp40b75e)); die($sp2867cd); } }