<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp5b4774, $sp1e2a07, $sp889f67, $sp93ab6d = false) { try { $sp2a243e = $sp5b4774->extension(); } catch (\Throwable $sp4b79b8) { return Response::fail($sp4b79b8->getMessage()); } if (!$sp5b4774 || !in_array(strtolower($sp2a243e), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp5b4774->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp189f81 = $sp5b4774->store($sp889f67, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp4b79b8) { \Log::error('File.uploadImg folder:' . $sp889f67 . ', error:' . $sp4b79b8->getMessage(), array('exception' => $sp4b79b8)); if (config('app.debug')) { return Response::fail($sp4b79b8->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp189f81) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp36af1a = System::_get('storage_driver'); $spdcad38 = Storage::disk($sp36af1a)->url($sp189f81); $spafcf38 = \App\File::insertGetId(array('user_id' => $sp1e2a07, 'driver' => $sp36af1a, 'path' => $sp189f81, 'url' => $spdcad38)); if ($spafcf38 < 1) { Storage::disk($sp36af1a)->delete($sp189f81); return Response::fail('数据库繁忙，请稍后再试'); } $spd7b285 = array('id' => $spafcf38, 'url' => $spdcad38, 'name' => pathinfo($sp189f81, PATHINFO_BASENAME)); if ($sp93ab6d) { return $spd7b285; } return Response::success($spd7b285); } function upload_merchant(Request $spfb41ce) { $sp836da4 = $this->getUser($spfb41ce); if ($sp836da4 === null) { return Response::forbidden('无效的用户'); } $sp5b4774 = $spfb41ce->file('file'); return $this->uploadImg($sp5b4774, $sp836da4->id, \App\File::getProductFolder()); } public function renderImage(Request $spfb41ce, $sp42ad80) { if (str_contains($sp42ad80, '..') || str_contains($sp42ad80, './') || str_contains($sp42ad80, '.\\') || !starts_with($sp42ad80, 'images/')) { $spb25f8d = file_get_contents(public_path('images/illegal.jpg')); } else { $sp42ad80 = str_replace('\\', '/', $sp42ad80); $sp5b4774 = \App\File::wherePath($sp42ad80)->first(); if ($sp5b4774) { $sp36af1a = $sp5b4774->driver; } else { $sp36af1a = System::_get('storage_driver'); } if (!in_array($sp36af1a, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spb25f8d = Storage::disk($sp36af1a)->get($sp42ad80); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp4b79b8) { \Log::error('File.renderImage error: ' . $sp4b79b8->getMessage(), array('exception' => $sp4b79b8)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp42ad80)); die($spb25f8d); } }