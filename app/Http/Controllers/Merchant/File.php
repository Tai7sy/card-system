<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp23c04a, $spf5ae13, $sp61b6a5, $sp3bf139 = false) { try { $sp6e0fc7 = $sp23c04a->extension(); } catch (\Throwable $sp6a7295) { return Response::fail($sp6a7295->getMessage()); } if (!$sp23c04a || !in_array(strtolower($sp6e0fc7), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp23c04a->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spffbc51 = $sp23c04a->store($sp61b6a5, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp6a7295) { \Log::error('File.uploadImg folder:' . $sp61b6a5 . ', error:' . $sp6a7295->getMessage(), array('exception' => $sp6a7295)); if (config('app.debug')) { return Response::fail($sp6a7295->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spffbc51) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spa28d5a = System::_get('storage_driver'); $sp0784c1 = Storage::disk($spa28d5a)->url($spffbc51); $sp19b5a1 = \App\File::insertGetId(array('user_id' => $spf5ae13, 'driver' => $spa28d5a, 'path' => $spffbc51, 'url' => $sp0784c1)); if ($sp19b5a1 < 1) { Storage::disk($spa28d5a)->delete($spffbc51); return Response::fail('数据库繁忙，请稍后再试'); } $sp5359c9 = array('id' => $sp19b5a1, 'url' => $sp0784c1, 'name' => pathinfo($spffbc51, PATHINFO_BASENAME)); if ($sp3bf139) { return $sp5359c9; } return Response::success($sp5359c9); } function upload_merchant(Request $spba756f) { $spac34b1 = $this->getUser($spba756f); if ($spac34b1 === null) { return Response::forbidden('无效的用户'); } $sp23c04a = $spba756f->file('file'); return $this->uploadImg($sp23c04a, $spac34b1->id, \App\File::getProductFolder()); } public function renderImage(Request $spba756f, $spd6f30a) { if (str_contains($spd6f30a, '..') || str_contains($spd6f30a, './') || str_contains($spd6f30a, '.\\') || !starts_with($spd6f30a, 'images/')) { $sp95c9b0 = file_get_contents(public_path('images/illegal.jpg')); } else { $spd6f30a = str_replace('\\', '/', $spd6f30a); $sp23c04a = \App\File::wherePath($spd6f30a)->first(); if ($sp23c04a) { $spa28d5a = $sp23c04a->driver; } else { $spa28d5a = System::_get('storage_driver'); } if (!in_array($spa28d5a, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp95c9b0 = Storage::disk($spa28d5a)->get($spd6f30a); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp6a7295) { \Log::error('File.renderImage error: ' . $sp6a7295->getMessage(), array('exception' => $sp6a7295)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spd6f30a)); die($sp95c9b0); } }