<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spbef6b3, $spe0b9a0, $spca4dac, $sp5a5b51 = false) { try { $sp7ec6c3 = $spbef6b3->extension(); } catch (\Throwable $spc22b6c) { return Response::fail($spc22b6c->getMessage()); } if (!$spbef6b3 || !in_array(strtolower($sp7ec6c3), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spbef6b3->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spab6f31 = $spbef6b3->store($spca4dac, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spc22b6c) { \Log::error('File.uploadImg folder:' . $spca4dac . ', error:' . $spc22b6c->getMessage(), array('exception' => $spc22b6c)); if (config('app.debug')) { return Response::fail($spc22b6c->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spab6f31) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spa5025d = System::_get('storage_driver'); $spfaab7a = Storage::disk($spa5025d)->url($spab6f31); $sp8a6281 = \App\File::insertGetId(array('user_id' => $spe0b9a0, 'driver' => $spa5025d, 'path' => $spab6f31, 'url' => $spfaab7a)); if ($sp8a6281 < 1) { Storage::disk($spa5025d)->delete($spab6f31); return Response::fail('数据库繁忙，请稍后再试'); } $spa59707 = array('id' => $sp8a6281, 'url' => $spfaab7a, 'name' => pathinfo($spab6f31, PATHINFO_BASENAME)); if ($sp5a5b51) { return $spa59707; } return Response::success($spa59707); } function upload_merchant(Request $sp62e4cd) { $spbfa519 = $this->getUser($sp62e4cd); if ($spbfa519 === null) { return Response::forbidden('无效的用户'); } $spbef6b3 = $sp62e4cd->file('file'); return $this->uploadImg($spbef6b3, $spbfa519->id, \App\File::getProductFolder()); } public function renderImage(Request $sp62e4cd, $spa0243f) { if (str_contains($spa0243f, '..') || str_contains($spa0243f, './') || str_contains($spa0243f, '.\\') || !starts_with($spa0243f, 'images/')) { $sp6dd782 = file_get_contents(public_path('images/illegal.jpg')); } else { $spa0243f = str_replace('\\', '/', $spa0243f); $spbef6b3 = \App\File::wherePath($spa0243f)->first(); if ($spbef6b3) { $spa5025d = $spbef6b3->driver; } else { $spa5025d = System::_get('storage_driver'); } if (!in_array($spa5025d, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp6dd782 = Storage::disk($spa5025d)->get($spa0243f); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spc22b6c) { \Log::error('File.renderImage error: ' . $spc22b6c->getMessage(), array('exception' => $spc22b6c)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spa0243f)); die($sp6dd782); } }