<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spe31d98, $sp47762c, $spa570bc, $sp5e6a80 = false) { try { $sp24ad54 = $spe31d98->extension(); } catch (\Throwable $sp8e3e91) { return Response::fail($sp8e3e91->getMessage()); } if (!$spe31d98 || !in_array(strtolower($sp24ad54), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spe31d98->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp65b8bf = $spe31d98->store($spa570bc, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp8e3e91) { \Log::error('File.uploadImg folder:' . $spa570bc . ', error:' . $sp8e3e91->getMessage(), array('exception' => $sp8e3e91)); if (config('app.debug')) { return Response::fail($sp8e3e91->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp65b8bf) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp09c11d = System::_get('storage_driver'); $sp8d7716 = Storage::disk($sp09c11d)->url($sp65b8bf); $sp0cd6b5 = \App\File::insertGetId(array('user_id' => $sp47762c, 'driver' => $sp09c11d, 'path' => $sp65b8bf, 'url' => $sp8d7716)); if ($sp0cd6b5 < 1) { Storage::disk($sp09c11d)->delete($sp65b8bf); return Response::fail('数据库繁忙，请稍后再试'); } $sp93ae8e = array('id' => $sp0cd6b5, 'url' => $sp8d7716, 'name' => pathinfo($sp65b8bf, PATHINFO_BASENAME)); if ($sp5e6a80) { return $sp93ae8e; } return Response::success($sp93ae8e); } function upload_merchant(Request $sp054aa0) { $spd78df7 = $this->getUser($sp054aa0); if ($spd78df7 === null) { return Response::forbidden('无效的用户'); } $spe31d98 = $sp054aa0->file('file'); return $this->uploadImg($spe31d98, $spd78df7->id, \App\File::getProductFolder()); } public function renderImage(Request $sp054aa0, $sp107b91) { if (str_contains($sp107b91, '..') || str_contains($sp107b91, './') || str_contains($sp107b91, '.\\') || !starts_with($sp107b91, 'images/')) { $spec3cde = file_get_contents(public_path('images/illegal.jpg')); } else { $sp107b91 = str_replace('\\', '/', $sp107b91); $spe31d98 = \App\File::wherePath($sp107b91)->first(); if ($spe31d98) { $sp09c11d = $spe31d98->driver; } else { $sp09c11d = System::_get('storage_driver'); } if (!in_array($sp09c11d, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spec3cde = Storage::disk($sp09c11d)->get($sp107b91); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp8e3e91) { \Log::error('File.renderImage error: ' . $sp8e3e91->getMessage(), array('exception' => $sp8e3e91)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp107b91)); die($spec3cde); } }