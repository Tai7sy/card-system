<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp59c898, $spfaef2f, $spe8caaa, $sp0aedba = false) { try { $sp96804b = $sp59c898->extension(); } catch (\Throwable $spece20f) { return Response::fail($spece20f->getMessage()); } if (!$sp59c898 || !in_array(strtolower($sp96804b), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp59c898->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spd55287 = $sp59c898->store($spe8caaa, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spece20f) { \Log::error('File.uploadImg folder:' . $spe8caaa . ', error:' . $spece20f->getMessage(), array('exception' => $spece20f)); if (config('app.debug')) { return Response::fail($spece20f->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spd55287) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp5df6ee = System::_get('storage_driver'); $sp3ae187 = Storage::disk($sp5df6ee)->url($spd55287); $sp35cb60 = \App\File::insertGetId(array('user_id' => $spfaef2f, 'driver' => $sp5df6ee, 'path' => $spd55287, 'url' => $sp3ae187)); if ($sp35cb60 < 1) { Storage::disk($sp5df6ee)->delete($spd55287); return Response::fail('数据库繁忙，请稍后再试'); } $sp29a775 = array('id' => $sp35cb60, 'url' => $sp3ae187, 'name' => pathinfo($spd55287, PATHINFO_BASENAME)); if ($sp0aedba) { return $sp29a775; } return Response::success($sp29a775); } function upload_merchant(Request $spd5cc4d) { $sp694bd2 = $this->getUser($spd5cc4d); if ($sp694bd2 === null) { return Response::forbidden('无效的用户'); } $sp59c898 = $spd5cc4d->file('file'); return $this->uploadImg($sp59c898, $sp694bd2->id, \App\File::getProductFolder()); } public function renderImage(Request $spd5cc4d, $spe0a96b) { if (str_contains($spe0a96b, '..') || str_contains($spe0a96b, './') || str_contains($spe0a96b, '.\\') || !starts_with($spe0a96b, 'images/')) { $spf7f051 = file_get_contents(public_path('images/illegal.jpg')); } else { $spe0a96b = str_replace('\\', '/', $spe0a96b); $sp59c898 = \App\File::wherePath($spe0a96b)->first(); if ($sp59c898) { $sp5df6ee = $sp59c898->driver; } else { $sp5df6ee = System::_get('storage_driver'); } if (!in_array($sp5df6ee, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spf7f051 = Storage::disk($sp5df6ee)->get($spe0a96b); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spece20f) { \Log::error('File.renderImage error: ' . $spece20f->getMessage(), array('exception' => $spece20f)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spe0a96b)); die($spf7f051); } }