<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp2f4d16, $sp6738b1, $spf14776, $sp839005 = false) { try { $sp7d2a01 = $sp2f4d16->extension(); } catch (\Throwable $spf745ad) { return Response::fail($spf745ad->getMessage()); } if (!$sp2f4d16 || !in_array(strtolower($sp7d2a01), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp2f4d16->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spaf341e = $sp2f4d16->store($spf14776, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spf745ad) { \Log::error('File.uploadImg folder:' . $spf14776 . ', error:' . $spf745ad->getMessage(), array('exception' => $spf745ad)); if (config('app.debug')) { return Response::fail($spf745ad->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spaf341e) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spb64319 = System::_get('storage_driver'); $sp783cd0 = Storage::disk($spb64319)->url($spaf341e); $sp994c13 = \App\File::insertGetId(array('user_id' => $sp6738b1, 'driver' => $spb64319, 'path' => $spaf341e, 'url' => $sp783cd0)); if ($sp994c13 < 1) { Storage::disk($spb64319)->delete($spaf341e); return Response::fail('数据库繁忙，请稍后再试'); } $sp571ce3 = array('id' => $sp994c13, 'url' => $sp783cd0, 'name' => pathinfo($spaf341e, PATHINFO_BASENAME)); if ($sp839005) { return $sp571ce3; } return Response::success($sp571ce3); } function upload_merchant(Request $spf09a96) { $sp586d7b = $this->getUser($spf09a96); if ($sp586d7b === null) { return Response::forbidden('无效的用户'); } $sp2f4d16 = $spf09a96->file('file'); return $this->uploadImg($sp2f4d16, $sp586d7b->id, \App\File::getProductFolder()); } public function renderImage(Request $spf09a96, $sp4ec810) { if (str_contains($sp4ec810, '..') || str_contains($sp4ec810, './') || str_contains($sp4ec810, '.\\') || !starts_with($sp4ec810, 'images/')) { $sp7b46e6 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp4ec810 = str_replace('\\', '/', $sp4ec810); $sp2f4d16 = \App\File::wherePath($sp4ec810)->first(); if ($sp2f4d16) { $spb64319 = $sp2f4d16->driver; } else { $spb64319 = System::_get('storage_driver'); } if (!in_array($spb64319, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp7b46e6 = Storage::disk($spb64319)->get($sp4ec810); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spf745ad) { \Log::error('File.renderImage error: ' . $spf745ad->getMessage(), array('exception' => $spf745ad)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp4ec810)); die($sp7b46e6); } }