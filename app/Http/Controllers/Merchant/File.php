<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spe041e4, $sp258cf6, $spdecae6, $sp14cfd6 = false) { try { $spf7bf29 = $spe041e4->extension(); } catch (\Throwable $sp45f5f1) { return Response::fail($sp45f5f1->getMessage()); } if (!$spe041e4 || !in_array(strtolower($spf7bf29), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spe041e4->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spde3d9c = $spe041e4->store($spdecae6, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp45f5f1) { \Log::error('File.uploadImg folder:' . $spdecae6 . ', error:' . $sp45f5f1->getMessage(), array('exception' => $sp45f5f1)); if (config('app.debug')) { return Response::fail($sp45f5f1->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spde3d9c) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp1f9a35 = System::_get('storage_driver'); $spddf3f5 = Storage::disk($sp1f9a35)->url($spde3d9c); $sp663a21 = \App\File::insertGetId(array('user_id' => $sp258cf6, 'driver' => $sp1f9a35, 'path' => $spde3d9c, 'url' => $spddf3f5)); if ($sp663a21 < 1) { Storage::disk($sp1f9a35)->delete($spde3d9c); return Response::fail('数据库繁忙，请稍后再试'); } $sp786169 = array('id' => $sp663a21, 'url' => $spddf3f5, 'name' => pathinfo($spde3d9c, PATHINFO_BASENAME)); if ($sp14cfd6) { return $sp786169; } return Response::success($sp786169); } function upload_merchant(Request $spa27895) { $sp845283 = $this->getUser($spa27895); if ($sp845283 === null) { return Response::forbidden('无效的用户'); } $spe041e4 = $spa27895->file('file'); return $this->uploadImg($spe041e4, $sp845283->id, \App\File::getProductFolder()); } public function renderImage(Request $spa27895, $spa37169) { if (str_contains($spa37169, '..') || str_contains($spa37169, './') || str_contains($spa37169, '.\\') || !starts_with($spa37169, 'images/')) { $spb59363 = file_get_contents(public_path('images/illegal.jpg')); } else { $spa37169 = str_replace('\\', '/', $spa37169); $spe041e4 = \App\File::wherePath($spa37169)->first(); if ($spe041e4) { $sp1f9a35 = $spe041e4->driver; } else { $sp1f9a35 = System::_get('storage_driver'); } if (!in_array($sp1f9a35, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spb59363 = Storage::disk($sp1f9a35)->get($spa37169); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp45f5f1) { \Log::error('File.renderImage error: ' . $sp45f5f1->getMessage(), array('exception' => $sp45f5f1)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spa37169)); die($spb59363); } }