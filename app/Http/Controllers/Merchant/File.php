<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp15a98e, $spc2138c, $spbf8313, $sp153ce5 = false) { try { $sp00fa35 = $sp15a98e->extension(); } catch (\Throwable $sp45222f) { return Response::fail($sp45222f->getMessage()); } if (!$sp15a98e || !in_array(strtolower($sp00fa35), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp15a98e->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spe59991 = $sp15a98e->store($spbf8313, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp45222f) { \Log::error('File.uploadImg folder:' . $spbf8313 . ', error:' . $sp45222f->getMessage(), array('exception' => $sp45222f)); if (config('app.debug')) { return Response::fail($sp45222f->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spe59991) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp719660 = System::_get('storage_driver'); $sp8042f4 = Storage::disk($sp719660)->url($spe59991); $sp24ff06 = \App\File::insertGetId(array('user_id' => $spc2138c, 'driver' => $sp719660, 'path' => $spe59991, 'url' => $sp8042f4)); if ($sp24ff06 < 1) { Storage::disk($sp719660)->delete($spe59991); return Response::fail('数据库繁忙，请稍后再试'); } $sp00ac62 = array('id' => $sp24ff06, 'url' => $sp8042f4, 'name' => pathinfo($spe59991, PATHINFO_BASENAME)); if ($sp153ce5) { return $sp00ac62; } return Response::success($sp00ac62); } function upload_merchant(Request $sp13451b) { $spc33961 = $this->getUser($sp13451b); if ($spc33961 === null) { return Response::forbidden('无效的用户'); } $sp15a98e = $sp13451b->file('file'); return $this->uploadImg($sp15a98e, $spc33961->id, \App\File::getProductFolder()); } public function renderImage(Request $sp13451b, $sp480867) { if (str_contains($sp480867, '..') || str_contains($sp480867, './') || str_contains($sp480867, '.\\') || !starts_with($sp480867, 'images/')) { $sp357b15 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp480867 = str_replace('\\', '/', $sp480867); $sp15a98e = \App\File::wherePath($sp480867)->first(); if ($sp15a98e) { $sp719660 = $sp15a98e->driver; } else { $sp719660 = System::_get('storage_driver'); } if (!in_array($sp719660, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp357b15 = Storage::disk($sp719660)->get($sp480867); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp45222f) { \Log::error('File.renderImage error: ' . $sp45222f->getMessage(), array('exception' => $sp45222f)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp480867)); die($sp357b15); } }