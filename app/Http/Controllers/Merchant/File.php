<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp57172b, $spe58da5, $sp6cdc62, $spd6d8d2 = false) { try { $sp493dcf = $sp57172b->extension(); } catch (\Throwable $spdfbc42) { return Response::fail($spdfbc42->getMessage()); } if (!$sp57172b || !in_array(strtolower($sp493dcf), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp57172b->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spb1850f = $sp57172b->store($sp6cdc62, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spdfbc42) { \Log::error('File.uploadImg folder:' . $sp6cdc62 . ', error:' . $spdfbc42->getMessage(), array('exception' => $spdfbc42)); if (config('app.debug')) { return Response::fail($spdfbc42->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spb1850f) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spe0fb8c = System::_get('storage_driver'); $sp09d604 = Storage::disk($spe0fb8c)->url($spb1850f); $spdbaa13 = \App\File::insertGetId(array('user_id' => $spe58da5, 'driver' => $spe0fb8c, 'path' => $spb1850f, 'url' => $sp09d604)); if ($spdbaa13 < 1) { Storage::disk($spe0fb8c)->delete($spb1850f); return Response::fail('数据库繁忙，请稍后再试'); } $spa51230 = array('id' => $spdbaa13, 'url' => $sp09d604, 'name' => pathinfo($spb1850f, PATHINFO_BASENAME)); if ($spd6d8d2) { return $spa51230; } return Response::success($spa51230); } function upload_merchant(Request $spccbfb6) { $sp91cc0b = $this->getUser($spccbfb6); if ($sp91cc0b === null) { return Response::forbidden('无效的用户'); } $sp57172b = $spccbfb6->file('file'); return $this->uploadImg($sp57172b, $sp91cc0b->id, \App\File::getProductFolder()); } public function renderImage(Request $spccbfb6, $sp1c8b40) { if (str_contains($sp1c8b40, '..') || str_contains($sp1c8b40, './') || str_contains($sp1c8b40, '.\\') || !starts_with($sp1c8b40, 'images/')) { $spe4d985 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp1c8b40 = str_replace('\\', '/', $sp1c8b40); $sp57172b = \App\File::wherePath($sp1c8b40)->first(); if ($sp57172b) { $spe0fb8c = $sp57172b->driver; } else { $spe0fb8c = System::_get('storage_driver'); } if (!in_array($spe0fb8c, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spe4d985 = Storage::disk($spe0fb8c)->get($sp1c8b40); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spdfbc42) { \Log::error('File.renderImage error: ' . $spdfbc42->getMessage(), array('exception' => $spdfbc42)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp1c8b40)); die($spe4d985); } }