<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp5faf37, $sp279789, $spfecbdc, $sp9dcf15 = false) { try { $sp15d028 = $sp5faf37->extension(); } catch (\Throwable $spd54c56) { return Response::fail($spd54c56->getMessage()); } if (!$sp5faf37 || !in_array(strtolower($sp15d028), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp5faf37->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp5bb4ef = $sp5faf37->store($spfecbdc, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spd54c56) { \Log::error('File.uploadImg folder:' . $spfecbdc . ', error:' . $spd54c56->getMessage(), array('exception' => $spd54c56)); if (config('app.debug')) { return Response::fail($spd54c56->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp5bb4ef) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spa3d5a7 = System::_get('storage_driver'); $spf47337 = Storage::disk($spa3d5a7)->url($sp5bb4ef); $space67a = \App\File::insertGetId(array('user_id' => $sp279789, 'driver' => $spa3d5a7, 'path' => $sp5bb4ef, 'url' => $spf47337)); if ($space67a < 1) { Storage::disk($spa3d5a7)->delete($sp5bb4ef); return Response::fail('数据库繁忙，请稍后再试'); } $sp6e55ba = array('id' => $space67a, 'url' => $spf47337, 'name' => pathinfo($sp5bb4ef, PATHINFO_BASENAME)); if ($sp9dcf15) { return $sp6e55ba; } return Response::success($sp6e55ba); } function upload_merchant(Request $sp7f7104) { $sp216502 = $this->getUser($sp7f7104); if ($sp216502 === null) { return Response::forbidden('无效的用户'); } $sp5faf37 = $sp7f7104->file('file'); return $this->uploadImg($sp5faf37, $sp216502->id, \App\File::getProductFolder()); } public function renderImage(Request $sp7f7104, $sp6fc2a3) { if (str_contains($sp6fc2a3, '..') || str_contains($sp6fc2a3, './') || str_contains($sp6fc2a3, '.\\') || !starts_with($sp6fc2a3, 'images/')) { $sp6b2024 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp6fc2a3 = str_replace('\\', '/', $sp6fc2a3); $sp5faf37 = \App\File::wherePath($sp6fc2a3)->first(); if ($sp5faf37) { $spa3d5a7 = $sp5faf37->driver; } else { $spa3d5a7 = System::_get('storage_driver'); } if (!in_array($spa3d5a7, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp6b2024 = Storage::disk($spa3d5a7)->get($sp6fc2a3); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spd54c56) { \Log::error('File.renderImage error: ' . $spd54c56->getMessage(), array('exception' => $spd54c56)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp6fc2a3)); die($sp6b2024); } }