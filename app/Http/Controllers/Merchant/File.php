<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp1b5dfb, $sp6fe8b9, $sp4604d5, $spf1c468 = false) { try { $sp501db0 = $sp1b5dfb->extension(); } catch (\Throwable $sp16b835) { return Response::fail($sp16b835->getMessage()); } if (!$sp1b5dfb || !in_array(strtolower($sp501db0), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp1b5dfb->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp01c290 = $sp1b5dfb->store($sp4604d5, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp16b835) { \Log::error('File.uploadImg folder:' . $sp4604d5 . ', error:' . $sp16b835->getMessage(), array('exception' => $sp16b835)); if (config('app.debug')) { return Response::fail($sp16b835->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp01c290) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp77f565 = System::_get('storage_driver'); $sp18a6d4 = Storage::disk($sp77f565)->url($sp01c290); $spfa5105 = \App\File::insertGetId(array('user_id' => $sp6fe8b9, 'driver' => $sp77f565, 'path' => $sp01c290, 'url' => $sp18a6d4)); if ($spfa5105 < 1) { Storage::disk($sp77f565)->delete($sp01c290); return Response::fail('数据库繁忙，请稍后再试'); } $sp179a17 = array('id' => $spfa5105, 'url' => $sp18a6d4, 'name' => pathinfo($sp01c290, PATHINFO_BASENAME)); if ($spf1c468) { return $sp179a17; } return Response::success($sp179a17); } function upload_merchant(Request $spa20801) { $spf3d3c9 = $this->getUser($spa20801); if ($spf3d3c9 === null) { return Response::forbidden('无效的用户'); } $sp1b5dfb = $spa20801->file('file'); return $this->uploadImg($sp1b5dfb, $spf3d3c9->id, \App\File::getProductFolder()); } public function renderImage(Request $spa20801, $sp52128d) { if (str_contains($sp52128d, '..') || str_contains($sp52128d, './') || str_contains($sp52128d, '.\\') || !starts_with($sp52128d, 'images/')) { $sp04a928 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp52128d = str_replace('\\', '/', $sp52128d); $sp1b5dfb = \App\File::wherePath($sp52128d)->first(); if ($sp1b5dfb) { $sp77f565 = $sp1b5dfb->driver; } else { $sp77f565 = System::_get('storage_driver'); } if (!in_array($sp77f565, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp04a928 = Storage::disk($sp77f565)->get($sp52128d); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp16b835) { \Log::error('File.renderImage error: ' . $sp16b835->getMessage(), array('exception' => $sp16b835)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp52128d)); die($sp04a928); } }