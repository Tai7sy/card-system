<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spffaea6, $spa27b73, $spb5c58a, $sp80fde0 = false) { try { $sp952cd4 = $spffaea6->extension(); } catch (\Throwable $spbd4f27) { return Response::fail($spbd4f27->getMessage()); } if (!$spffaea6 || !in_array(strtolower($sp952cd4), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spffaea6->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp2b7370 = $spffaea6->store($spb5c58a, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spbd4f27) { \Log::error('File.uploadImg folder:' . $spb5c58a . ', error:' . $spbd4f27->getMessage(), array('exception' => $spbd4f27)); if (config('app.debug')) { return Response::fail($spbd4f27->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp2b7370) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp95374a = System::_get('storage_driver'); $sp556150 = Storage::disk($sp95374a)->url($sp2b7370); $spde4179 = \App\File::insertGetId(array('user_id' => $spa27b73, 'driver' => $sp95374a, 'path' => $sp2b7370, 'url' => $sp556150)); if ($spde4179 < 1) { Storage::disk($sp95374a)->delete($sp2b7370); return Response::fail('数据库繁忙，请稍后再试'); } $sp296935 = array('id' => $spde4179, 'url' => $sp556150, 'name' => pathinfo($sp2b7370, PATHINFO_BASENAME)); if ($sp80fde0) { return $sp296935; } return Response::success($sp296935); } function upload_merchant(Request $sp147552) { $spe2c9ac = $this->getUser($sp147552); if ($spe2c9ac === null) { return Response::forbidden('无效的用户'); } $spffaea6 = $sp147552->file('file'); return $this->uploadImg($spffaea6, $spe2c9ac->id, \App\File::getProductFolder()); } public function renderImage(Request $sp147552, $spd163ed) { if (str_contains($spd163ed, '..') || str_contains($spd163ed, './') || str_contains($spd163ed, '.\\') || !starts_with($spd163ed, 'images/')) { $spf593bd = file_get_contents(public_path('images/illegal.jpg')); } else { $spd163ed = str_replace('\\', '/', $spd163ed); $spffaea6 = \App\File::wherePath($spd163ed)->first(); if ($spffaea6) { $sp95374a = $spffaea6->driver; } else { $sp95374a = System::_get('storage_driver'); } if (!in_array($sp95374a, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spf593bd = Storage::disk($sp95374a)->get($spd163ed); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spbd4f27) { \Log::error('File.renderImage error: ' . $spbd4f27->getMessage(), array('exception' => $spbd4f27)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spd163ed)); die($spf593bd); } }