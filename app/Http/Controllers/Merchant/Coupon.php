<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp13451b) { $sp8e2ceb = $this->authQuery($sp13451b, \App\Coupon::class)->with(array('category' => function ($sp8e2ceb) { $sp8e2ceb->select(array('id', 'name')); }))->with(array('product' => function ($sp8e2ceb) { $sp8e2ceb->select(array('id', 'name')); })); $sp54e0e6 = $sp13451b->input('search', false); $sp59b33b = $sp13451b->input('val', false); if ($sp54e0e6 && $sp59b33b) { if ($sp54e0e6 == 'id') { $sp8e2ceb->where('id', $sp59b33b); } else { $sp8e2ceb->where($sp54e0e6, 'like', '%' . $sp59b33b . '%'); } } $sp3955fa = (int) $sp13451b->input('category_id'); $spcaeba2 = $sp13451b->input('product_id', -1); if ($sp3955fa > 0) { if ($spcaeba2 > 0) { $sp8e2ceb->where('product_id', $spcaeba2); } else { $sp8e2ceb->where('category_id', $sp3955fa); } } $sp6002b5 = $sp13451b->input('status'); if (strlen($sp6002b5)) { $sp8e2ceb->whereIn('status', explode(',', $sp6002b5)); } $sp797c94 = $sp13451b->input('type'); if (strlen($sp797c94)) { $sp8e2ceb->whereIn('type', explode(',', $sp797c94)); } $sp8e2ceb->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp26dcb6 = (int) $sp13451b->input('current_page', 1); $sp769c3e = (int) $sp13451b->input('per_page', 20); $spa67529 = $sp8e2ceb->paginate($sp769c3e, array('*'), 'page', $sp26dcb6); return Response::success($spa67529); } function create(Request $sp13451b) { $sp1ca412 = $sp13451b->post('count', 0); $sp797c94 = (int) $sp13451b->post('type', \App\Coupon::TYPE_ONETIME); $spf489fa = $sp13451b->post('expire_at'); $sp1e5059 = (int) $sp13451b->post('discount_val'); $sp46e584 = (int) $sp13451b->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $speb1f6b = $sp13451b->post('remark'); if ($sp46e584 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp1e5059 < 1 || $sp1e5059 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp46e584 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp1e5059 < 1 || $sp1e5059 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp3955fa = (int) $sp13451b->post('category_id', -1); $spcaeba2 = (int) $sp13451b->post('product_id', -1); if ($sp797c94 === \App\Coupon::TYPE_REPEAT) { $spdabd4e = $sp13451b->post('coupon'); if (!$spdabd4e) { $spdabd4e = strtoupper(str_random()); } $sp55c7ac = new \App\Coupon(); $sp55c7ac->user_id = $this->getUserIdOrFail($sp13451b); $sp55c7ac->category_id = $sp3955fa; $sp55c7ac->product_id = $spcaeba2; $sp55c7ac->coupon = $spdabd4e; $sp55c7ac->type = $sp797c94; $sp55c7ac->discount_val = $sp1e5059; $sp55c7ac->discount_type = $sp46e584; $sp55c7ac->count_all = (int) $sp13451b->post('count_all', 1); if ($sp55c7ac->count_all < 1 || $sp55c7ac->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp55c7ac->expire_at = $spf489fa; $sp55c7ac->saveOrFail(); return Response::success(array($sp55c7ac->coupon)); } elseif ($sp797c94 === \App\Coupon::TYPE_ONETIME) { if (!$sp1ca412) { return Response::forbidden('请输入生成数量'); } if ($sp1ca412 > 100) { return Response::forbidden('每次生成不能大于100张'); } $spd4c074 = array(); $spf9e913 = array(); $spc2138c = $this->getUserIdOrFail($sp13451b); $sp69d2c0 = Carbon::now(); for ($sp51a993 = 0; $sp51a993 < $sp1ca412; $sp51a993++) { $sp55c7ac = strtoupper(str_random()); $spf9e913[] = $sp55c7ac; $spd4c074[] = array('user_id' => $spc2138c, 'coupon' => $sp55c7ac, 'category_id' => $sp3955fa, 'product_id' => $spcaeba2, 'type' => $sp797c94, 'discount_val' => $sp1e5059, 'discount_type' => $sp46e584, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $speb1f6b, 'created_at' => $sp69d2c0, 'expire_at' => $spf489fa); } \App\Coupon::insert($spd4c074); return Response::success($spf9e913); } else { return Response::forbidden('unknown type: ' . $sp797c94); } } function edit(Request $sp13451b) { $sp7df839 = (int) $sp13451b->post('id'); $spdabd4e = $sp13451b->post('coupon'); $sp3955fa = (int) $sp13451b->post('category_id', -1); $spcaeba2 = (int) $sp13451b->post('product_id', -1); $spf489fa = $sp13451b->post('expire_at', NULL); $sp6002b5 = (int) $sp13451b->post('status', \App\Coupon::STATUS_NORMAL); $sp797c94 = (int) $sp13451b->post('type', \App\Coupon::TYPE_ONETIME); $sp1e5059 = (int) $sp13451b->post('discount_val'); $sp46e584 = (int) $sp13451b->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp46e584 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp1e5059 < 1 || $sp1e5059 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp46e584 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp1e5059 < 1 || $sp1e5059 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp55c7ac = $this->authQuery($sp13451b, \App\Coupon::class)->find($sp7df839); if ($sp55c7ac) { $sp55c7ac->coupon = $spdabd4e; $sp55c7ac->category_id = $sp3955fa; $sp55c7ac->product_id = $spcaeba2; $sp55c7ac->status = $sp6002b5; $sp55c7ac->type = $sp797c94; $sp55c7ac->discount_val = $sp1e5059; $sp55c7ac->discount_type = $sp46e584; if ($sp797c94 === \App\Coupon::TYPE_REPEAT) { $sp55c7ac->count_all = (int) $sp13451b->post('count_all', 1); if ($sp55c7ac->count_all < 1 || $sp55c7ac->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spf489fa) { $sp55c7ac->expire_at = $spf489fa; } $sp55c7ac->saveOrFail(); } else { $sp23b0fb = explode('
', $spdabd4e); for ($sp51a993 = 0; $sp51a993 < count($sp23b0fb); $sp51a993++) { $sp257554 = str_replace('', '', trim($sp23b0fb[$sp51a993])); $sp55c7ac = new \App\Coupon(); $sp55c7ac->coupon = $sp257554; $sp55c7ac->category_id = $sp3955fa; $sp55c7ac->product_id = $spcaeba2; $sp55c7ac->status = $sp6002b5; $sp55c7ac->type = $sp797c94; $sp55c7ac->discount_val = $sp1e5059; $sp55c7ac->discount_type = $sp46e584; $sp23b0fb[$sp51a993] = $sp55c7ac; } \App\Product::find($spcaeba2)->coupons()->saveMany($sp23b0fb); } return Response::success(); } function enable(Request $sp13451b) { $this->validate($sp13451b, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp60bb7e = $sp13451b->post('ids'); $sp6a3468 = (int) $sp13451b->post('enabled'); $this->authQuery($sp13451b, \App\Coupon::class)->whereIn('id', explode(',', $sp60bb7e))->update(array('enabled' => $sp6a3468)); return Response::success(); } function delete(Request $sp13451b) { $this->validate($sp13451b, array('ids' => 'required|string')); $sp60bb7e = $sp13451b->post('ids'); $this->authQuery($sp13451b, \App\Coupon::class)->whereIn('id', explode(',', $sp60bb7e))->delete(); return Response::success(); } }