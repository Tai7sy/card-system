<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp7f7104) { $spbec213 = $this->authQuery($sp7f7104, \App\Coupon::class)->with(array('category' => function ($spbec213) { $spbec213->select(array('id', 'name')); }))->with(array('product' => function ($spbec213) { $spbec213->select(array('id', 'name')); })); $spad233c = $sp7f7104->input('search', false); $spaefd46 = $sp7f7104->input('val', false); if ($spad233c && $spaefd46) { if ($spad233c == 'id') { $spbec213->where('id', $spaefd46); } else { $spbec213->where($spad233c, 'like', '%' . $spaefd46 . '%'); } } $sp92ffbb = (int) $sp7f7104->input('category_id'); $sp727288 = $sp7f7104->input('product_id', -1); if ($sp92ffbb > 0) { if ($sp727288 > 0) { $spbec213->where('product_id', $sp727288); } else { $spbec213->where('category_id', $sp92ffbb); } } $spe7fff0 = $sp7f7104->input('status'); if (strlen($spe7fff0)) { $spbec213->whereIn('status', explode(',', $spe7fff0)); } $sp1a26a5 = $sp7f7104->input('type'); if (strlen($sp1a26a5)) { $spbec213->whereIn('type', explode(',', $sp1a26a5)); } $spbec213->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spfe8869 = (int) $sp7f7104->input('current_page', 1); $spec5082 = (int) $sp7f7104->input('per_page', 20); $spa229b5 = $spbec213->paginate($spec5082, array('*'), 'page', $spfe8869); return Response::success($spa229b5); } function create(Request $sp7f7104) { $spf26c0c = $sp7f7104->post('count', 0); $sp1a26a5 = (int) $sp7f7104->post('type', \App\Coupon::TYPE_ONETIME); $sp44dab5 = $sp7f7104->post('expire_at'); $spc79403 = (int) $sp7f7104->post('discount_val'); $sp76f20d = (int) $sp7f7104->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $spcd2349 = $sp7f7104->post('remark'); if ($sp76f20d === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spc79403 < 1 || $spc79403 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp76f20d === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spc79403 < 1 || $spc79403 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp92ffbb = (int) $sp7f7104->post('category_id', -1); $sp727288 = (int) $sp7f7104->post('product_id', -1); if ($sp1a26a5 === \App\Coupon::TYPE_REPEAT) { $sp48f854 = $sp7f7104->post('coupon'); if (!$sp48f854) { $sp48f854 = strtoupper(str_random()); } $spde062e = new \App\Coupon(); $spde062e->user_id = $this->getUserIdOrFail($sp7f7104); $spde062e->category_id = $sp92ffbb; $spde062e->product_id = $sp727288; $spde062e->coupon = $sp48f854; $spde062e->type = $sp1a26a5; $spde062e->discount_val = $spc79403; $spde062e->discount_type = $sp76f20d; $spde062e->count_all = (int) $sp7f7104->post('count_all', 1); if ($spde062e->count_all < 1 || $spde062e->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spde062e->expire_at = $sp44dab5; $spde062e->saveOrFail(); return Response::success(array($spde062e->coupon)); } elseif ($sp1a26a5 === \App\Coupon::TYPE_ONETIME) { if (!$spf26c0c) { return Response::forbidden('请输入生成数量'); } if ($spf26c0c > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp832842 = array(); $spc76d31 = array(); $sp279789 = $this->getUserIdOrFail($sp7f7104); $sp462105 = Carbon::now(); for ($spf3a567 = 0; $spf3a567 < $spf26c0c; $spf3a567++) { $spde062e = strtoupper(str_random()); $spc76d31[] = $spde062e; $sp832842[] = array('user_id' => $sp279789, 'coupon' => $spde062e, 'category_id' => $sp92ffbb, 'product_id' => $sp727288, 'type' => $sp1a26a5, 'discount_val' => $spc79403, 'discount_type' => $sp76f20d, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $spcd2349, 'created_at' => $sp462105, 'expire_at' => $sp44dab5); } \App\Coupon::insert($sp832842); return Response::success($spc76d31); } else { return Response::forbidden('unknown type: ' . $sp1a26a5); } } function edit(Request $sp7f7104) { $sp1beabb = (int) $sp7f7104->post('id'); $sp48f854 = $sp7f7104->post('coupon'); $sp92ffbb = (int) $sp7f7104->post('category_id', -1); $sp727288 = (int) $sp7f7104->post('product_id', -1); $sp44dab5 = $sp7f7104->post('expire_at', NULL); $spe7fff0 = (int) $sp7f7104->post('status', \App\Coupon::STATUS_NORMAL); $sp1a26a5 = (int) $sp7f7104->post('type', \App\Coupon::TYPE_ONETIME); $spc79403 = (int) $sp7f7104->post('discount_val'); $sp76f20d = (int) $sp7f7104->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp76f20d === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spc79403 < 1 || $spc79403 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp76f20d === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spc79403 < 1 || $spc79403 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spde062e = $this->authQuery($sp7f7104, \App\Coupon::class)->find($sp1beabb); if ($spde062e) { $spde062e->coupon = $sp48f854; $spde062e->category_id = $sp92ffbb; $spde062e->product_id = $sp727288; $spde062e->status = $spe7fff0; $spde062e->type = $sp1a26a5; $spde062e->discount_val = $spc79403; $spde062e->discount_type = $sp76f20d; if ($sp1a26a5 === \App\Coupon::TYPE_REPEAT) { $spde062e->count_all = (int) $sp7f7104->post('count_all', 1); if ($spde062e->count_all < 1 || $spde062e->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp44dab5) { $spde062e->expire_at = $sp44dab5; } $spde062e->saveOrFail(); } else { $sp22e6a1 = explode('
', $sp48f854); for ($spf3a567 = 0; $spf3a567 < count($sp22e6a1); $spf3a567++) { $sp3de608 = str_replace('', '', trim($sp22e6a1[$spf3a567])); $spde062e = new \App\Coupon(); $spde062e->coupon = $sp3de608; $spde062e->category_id = $sp92ffbb; $spde062e->product_id = $sp727288; $spde062e->status = $spe7fff0; $spde062e->type = $sp1a26a5; $spde062e->discount_val = $spc79403; $spde062e->discount_type = $sp76f20d; $sp22e6a1[$spf3a567] = $spde062e; } \App\Product::find($sp727288)->coupons()->saveMany($sp22e6a1); } return Response::success(); } function enable(Request $sp7f7104) { $this->validate($sp7f7104, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp70cf7b = $sp7f7104->post('ids'); $sp229dc8 = (int) $sp7f7104->post('enabled'); $this->authQuery($sp7f7104, \App\Coupon::class)->whereIn('id', explode(',', $sp70cf7b))->update(array('enabled' => $sp229dc8)); return Response::success(); } function delete(Request $sp7f7104) { $this->validate($sp7f7104, array('ids' => 'required|string')); $sp70cf7b = $sp7f7104->post('ids'); $this->authQuery($sp7f7104, \App\Coupon::class)->whereIn('id', explode(',', $sp70cf7b))->delete(); return Response::success(); } }