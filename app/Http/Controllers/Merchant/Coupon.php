<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spba756f) { $spca8acc = $this->authQuery($spba756f, \App\Coupon::class)->with(array('category' => function ($spca8acc) { $spca8acc->select(array('id', 'name')); }))->with(array('product' => function ($spca8acc) { $spca8acc->select(array('id', 'name')); })); $speeddd9 = $spba756f->post('search', false); $spe1fc85 = $spba756f->post('val', false); if ($speeddd9 && $spe1fc85) { if ($speeddd9 == 'id') { $spca8acc->where('id', $spe1fc85); } else { $spca8acc->where($speeddd9, 'like', '%' . $spe1fc85 . '%'); } } $sp55f32c = (int) $spba756f->post('category_id'); $sp1b83a8 = $spba756f->post('product_id', -1); if ($sp55f32c > 0) { if ($sp1b83a8 > 0) { $spca8acc->where('product_id', $sp1b83a8); } else { $spca8acc->where('category_id', $sp55f32c); } } $sp732cf7 = $spba756f->post('status'); if (strlen($sp732cf7)) { $spca8acc->whereIn('status', explode(',', $sp732cf7)); } $spe7b1c7 = $spba756f->post('type'); if (strlen($spe7b1c7)) { $spca8acc->whereIn('type', explode(',', $spe7b1c7)); } $spca8acc->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp881a75 = $spba756f->post('current_page', 1); $sp2a01a9 = $spba756f->post('per_page', 20); $spfea7ce = $spca8acc->paginate($sp2a01a9, array('*'), 'page', $sp881a75); return Response::success($spfea7ce); } function create(Request $spba756f) { $sp99aae1 = $spba756f->post('count', 0); $spe7b1c7 = (int) $spba756f->post('type', \App\Coupon::TYPE_ONETIME); $sp72a1d0 = $spba756f->post('expire_at'); $sped6ef3 = (int) $spba756f->post('discount_val'); $sp8643d3 = (int) $spba756f->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $spd8e3f6 = $spba756f->post('remark'); if ($sp8643d3 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sped6ef3 < 1 || $sped6ef3 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp8643d3 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sped6ef3 < 1 || $sped6ef3 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp55f32c = (int) $spba756f->post('category_id', -1); $sp1b83a8 = (int) $spba756f->post('product_id', -1); if ($spe7b1c7 === \App\Coupon::TYPE_REPEAT) { $sp8bf4fa = $spba756f->post('coupon'); if (!$sp8bf4fa) { $sp8bf4fa = strtoupper(str_random()); } $sp4cb2ce = new \App\Coupon(); $sp4cb2ce->user_id = $this->getUserIdOrFail($spba756f); $sp4cb2ce->category_id = $sp55f32c; $sp4cb2ce->product_id = $sp1b83a8; $sp4cb2ce->coupon = $sp8bf4fa; $sp4cb2ce->type = $spe7b1c7; $sp4cb2ce->discount_val = $sped6ef3; $sp4cb2ce->discount_type = $sp8643d3; $sp4cb2ce->count_all = (int) $spba756f->post('count_all', 1); if ($sp4cb2ce->count_all < 1 || $sp4cb2ce->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp4cb2ce->expire_at = $sp72a1d0; $sp4cb2ce->saveOrFail(); return Response::success(array($sp4cb2ce->coupon)); } elseif ($spe7b1c7 === \App\Coupon::TYPE_ONETIME) { if (!$sp99aae1) { return Response::forbidden('请输入生成数量'); } if ($sp99aae1 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp97692a = array(); $spaf6261 = array(); $spf5ae13 = $this->getUserIdOrFail($spba756f); $sp54cd39 = Carbon::now(); for ($spc8f255 = 0; $spc8f255 < $sp99aae1; $spc8f255++) { $sp4cb2ce = strtoupper(str_random()); $spaf6261[] = $sp4cb2ce; $sp97692a[] = array('user_id' => $spf5ae13, 'coupon' => $sp4cb2ce, 'category_id' => $sp55f32c, 'product_id' => $sp1b83a8, 'type' => $spe7b1c7, 'discount_val' => $sped6ef3, 'discount_type' => $sp8643d3, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $spd8e3f6, 'created_at' => $sp54cd39, 'expire_at' => $sp72a1d0); } \App\Coupon::insert($sp97692a); return Response::success($spaf6261); } else { return Response::forbidden('unknown type: ' . $spe7b1c7); } } function edit(Request $spba756f) { $sp8e8060 = (int) $spba756f->post('id'); $sp8bf4fa = $spba756f->post('coupon'); $sp55f32c = (int) $spba756f->post('category_id', -1); $sp1b83a8 = (int) $spba756f->post('product_id', -1); $sp72a1d0 = $spba756f->post('expire_at', NULL); $sp732cf7 = (int) $spba756f->post('status', \App\Coupon::STATUS_NORMAL); $spe7b1c7 = (int) $spba756f->post('type', \App\Coupon::TYPE_ONETIME); $sped6ef3 = (int) $spba756f->post('discount_val'); $sp8643d3 = (int) $spba756f->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp8643d3 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sped6ef3 < 1 || $sped6ef3 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp8643d3 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sped6ef3 < 1 || $sped6ef3 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp4cb2ce = $this->authQuery($spba756f, \App\Coupon::class)->find($sp8e8060); if ($sp4cb2ce) { $sp4cb2ce->coupon = $sp8bf4fa; $sp4cb2ce->category_id = $sp55f32c; $sp4cb2ce->product_id = $sp1b83a8; $sp4cb2ce->status = $sp732cf7; $sp4cb2ce->type = $spe7b1c7; $sp4cb2ce->discount_val = $sped6ef3; $sp4cb2ce->discount_type = $sp8643d3; if ($spe7b1c7 === \App\Coupon::TYPE_REPEAT) { $sp4cb2ce->count_all = (int) $spba756f->post('count_all', 1); if ($sp4cb2ce->count_all < 1 || $sp4cb2ce->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp72a1d0) { $sp4cb2ce->expire_at = $sp72a1d0; } $sp4cb2ce->saveOrFail(); } else { $spe1ba81 = explode('
', $sp8bf4fa); for ($spc8f255 = 0; $spc8f255 < count($spe1ba81); $spc8f255++) { $spf8ca88 = str_replace('', '', trim($spe1ba81[$spc8f255])); $sp4cb2ce = new \App\Coupon(); $sp4cb2ce->coupon = $spf8ca88; $sp4cb2ce->category_id = $sp55f32c; $sp4cb2ce->product_id = $sp1b83a8; $sp4cb2ce->status = $sp732cf7; $sp4cb2ce->type = $spe7b1c7; $sp4cb2ce->discount_val = $sped6ef3; $sp4cb2ce->discount_type = $sp8643d3; $spe1ba81[$spc8f255] = $sp4cb2ce; } \App\Product::find($sp1b83a8)->coupons()->saveMany($spe1ba81); } return Response::success(); } function enable(Request $spba756f) { $this->validate($spba756f, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp12026a = $spba756f->post('ids'); $spc7c4ac = (int) $spba756f->post('enabled'); $this->authQuery($spba756f, \App\Coupon::class)->whereIn('id', explode(',', $sp12026a))->update(array('enabled' => $spc7c4ac)); return Response::success(); } function delete(Request $spba756f) { $this->validate($spba756f, array('ids' => 'required|string')); $sp12026a = $spba756f->post('ids'); $this->authQuery($spba756f, \App\Coupon::class)->whereIn('id', explode(',', $sp12026a))->delete(); return Response::success(); } }