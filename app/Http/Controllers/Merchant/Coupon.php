<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spa27895) { $sp7e6fa3 = $this->authQuery($spa27895, \App\Coupon::class)->with(array('category' => function ($sp7e6fa3) { $sp7e6fa3->select(array('id', 'name')); }))->with(array('product' => function ($sp7e6fa3) { $sp7e6fa3->select(array('id', 'name')); })); $spfe451d = $spa27895->post('search', false); $sp0edb8f = $spa27895->post('val', false); if ($spfe451d && $sp0edb8f) { if ($spfe451d == 'id') { $sp7e6fa3->where('id', $sp0edb8f); } else { $sp7e6fa3->where($spfe451d, 'like', '%' . $sp0edb8f . '%'); } } $sp980f44 = (int) $spa27895->post('category_id'); $sp112a12 = $spa27895->post('product_id', -1); if ($sp980f44 > 0) { if ($sp112a12 > 0) { $sp7e6fa3->where('product_id', $sp112a12); } else { $sp7e6fa3->where('category_id', $sp980f44); } } $spf66c3d = $spa27895->post('status'); if (strlen($spf66c3d)) { $sp7e6fa3->whereIn('status', explode(',', $spf66c3d)); } $sp460df4 = $spa27895->post('type'); if (strlen($sp460df4)) { $sp7e6fa3->whereIn('type', explode(',', $sp460df4)); } $sp7e6fa3->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spf69625 = $spa27895->post('current_page', 1); $spe8f5a8 = $spa27895->post('per_page', 20); $sp966ae1 = $sp7e6fa3->paginate($spe8f5a8, array('*'), 'page', $spf69625); return Response::success($sp966ae1); } function create(Request $spa27895) { $spdf4a99 = $spa27895->post('count', 0); $sp460df4 = (int) $spa27895->post('type', \App\Coupon::TYPE_ONETIME); $sp9b3d20 = $spa27895->post('expire_at'); $sp39ae40 = (int) $spa27895->post('discount_val'); $spbade28 = (int) $spa27895->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp52fef6 = $spa27895->post('remark'); if ($spbade28 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp39ae40 < 1 || $sp39ae40 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spbade28 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp39ae40 < 1 || $sp39ae40 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp980f44 = (int) $spa27895->post('category_id', -1); $sp112a12 = (int) $spa27895->post('product_id', -1); if ($sp460df4 === \App\Coupon::TYPE_REPEAT) { $sp2a00ee = $spa27895->post('coupon'); if (!$sp2a00ee) { $sp2a00ee = strtoupper(str_random()); } $sp1ea3c0 = new \App\Coupon(); $sp1ea3c0->user_id = $this->getUserIdOrFail($spa27895); $sp1ea3c0->category_id = $sp980f44; $sp1ea3c0->product_id = $sp112a12; $sp1ea3c0->coupon = $sp2a00ee; $sp1ea3c0->type = $sp460df4; $sp1ea3c0->discount_val = $sp39ae40; $sp1ea3c0->discount_type = $spbade28; $sp1ea3c0->count_all = (int) $spa27895->post('count_all', 1); if ($sp1ea3c0->count_all < 1 || $sp1ea3c0->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp1ea3c0->expire_at = $sp9b3d20; $sp1ea3c0->saveOrFail(); return Response::success(array($sp1ea3c0->coupon)); } elseif ($sp460df4 === \App\Coupon::TYPE_ONETIME) { if (!$spdf4a99) { return Response::forbidden('请输入生成数量'); } if ($spdf4a99 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp6de18e = array(); $spa97315 = array(); $sp258cf6 = $this->getUserIdOrFail($spa27895); $sp755c1b = Carbon::now(); for ($spe20094 = 0; $spe20094 < $spdf4a99; $spe20094++) { $sp1ea3c0 = strtoupper(str_random()); $spa97315[] = $sp1ea3c0; $sp6de18e[] = array('user_id' => $sp258cf6, 'coupon' => $sp1ea3c0, 'category_id' => $sp980f44, 'product_id' => $sp112a12, 'type' => $sp460df4, 'discount_val' => $sp39ae40, 'discount_type' => $spbade28, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp52fef6, 'created_at' => $sp755c1b, 'expire_at' => $sp9b3d20); } \App\Coupon::insert($sp6de18e); return Response::success($spa97315); } else { return Response::forbidden('unknown type: ' . $sp460df4); } } function edit(Request $spa27895) { $sp746ee1 = (int) $spa27895->post('id'); $sp2a00ee = $spa27895->post('coupon'); $sp980f44 = (int) $spa27895->post('category_id', -1); $sp112a12 = (int) $spa27895->post('product_id', -1); $sp9b3d20 = $spa27895->post('expire_at', NULL); $spf66c3d = (int) $spa27895->post('status', \App\Coupon::STATUS_NORMAL); $sp460df4 = (int) $spa27895->post('type', \App\Coupon::TYPE_ONETIME); $sp39ae40 = (int) $spa27895->post('discount_val'); $spbade28 = (int) $spa27895->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spbade28 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp39ae40 < 1 || $sp39ae40 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spbade28 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp39ae40 < 1 || $sp39ae40 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp1ea3c0 = $this->authQuery($spa27895, \App\Coupon::class)->find($sp746ee1); if ($sp1ea3c0) { $sp1ea3c0->coupon = $sp2a00ee; $sp1ea3c0->category_id = $sp980f44; $sp1ea3c0->product_id = $sp112a12; $sp1ea3c0->status = $spf66c3d; $sp1ea3c0->type = $sp460df4; $sp1ea3c0->discount_val = $sp39ae40; $sp1ea3c0->discount_type = $spbade28; if ($sp460df4 === \App\Coupon::TYPE_REPEAT) { $sp1ea3c0->count_all = (int) $spa27895->post('count_all', 1); if ($sp1ea3c0->count_all < 1 || $sp1ea3c0->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp9b3d20) { $sp1ea3c0->expire_at = $sp9b3d20; } $sp1ea3c0->saveOrFail(); } else { $spe64760 = explode('
', $sp2a00ee); for ($spe20094 = 0; $spe20094 < count($spe64760); $spe20094++) { $sp643fe5 = str_replace('', '', trim($spe64760[$spe20094])); $sp1ea3c0 = new \App\Coupon(); $sp1ea3c0->coupon = $sp643fe5; $sp1ea3c0->category_id = $sp980f44; $sp1ea3c0->product_id = $sp112a12; $sp1ea3c0->status = $spf66c3d; $sp1ea3c0->type = $sp460df4; $sp1ea3c0->discount_val = $sp39ae40; $sp1ea3c0->discount_type = $spbade28; $spe64760[$spe20094] = $sp1ea3c0; } \App\Product::find($sp112a12)->coupons()->saveMany($spe64760); } return Response::success(); } function enable(Request $spa27895) { $this->validate($spa27895, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp8e4c06 = $spa27895->post('ids'); $sp2a8f09 = (int) $spa27895->post('enabled'); $this->authQuery($spa27895, \App\Coupon::class)->whereIn('id', explode(',', $sp8e4c06))->update(array('enabled' => $sp2a8f09)); return Response::success(); } function delete(Request $spa27895) { $this->validate($spa27895, array('ids' => 'required|string')); $sp8e4c06 = $spa27895->post('ids'); $this->authQuery($spa27895, \App\Coupon::class)->whereIn('id', explode(',', $sp8e4c06))->delete(); return Response::success(); } }