<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp26e527) { $spcfdf85 = $this->authQuery($sp26e527, \App\Coupon::class)->with(array('category' => function ($spcfdf85) { $spcfdf85->select(array('id', 'name')); }))->with(array('product' => function ($spcfdf85) { $spcfdf85->select(array('id', 'name')); })); $sp78cca0 = $sp26e527->input('search', false); $sp79e569 = $sp26e527->input('val', false); if ($sp78cca0 && $sp79e569) { if ($sp78cca0 == 'id') { $spcfdf85->where('id', $sp79e569); } else { $spcfdf85->where($sp78cca0, 'like', '%' . $sp79e569 . '%'); } } $sp735ffa = (int) $sp26e527->input('category_id'); $sp517398 = $sp26e527->input('product_id', -1); if ($sp735ffa > 0) { if ($sp517398 > 0) { $spcfdf85->where('product_id', $sp517398); } else { $spcfdf85->where('category_id', $sp735ffa); } } $sp0f5dbe = $sp26e527->input('status'); if (strlen($sp0f5dbe)) { $spcfdf85->whereIn('status', explode(',', $sp0f5dbe)); } $spa0789d = $sp26e527->input('type'); if (strlen($spa0789d)) { $spcfdf85->whereIn('type', explode(',', $spa0789d)); } $spcfdf85->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp81cf40 = (int) $sp26e527->input('current_page', 1); $sp8de1f1 = (int) $sp26e527->input('per_page', 20); $spccc256 = $spcfdf85->paginate($sp8de1f1, array('*'), 'page', $sp81cf40); return Response::success($spccc256); } function create(Request $sp26e527) { $spe95220 = $sp26e527->post('count', 0); $spa0789d = (int) $sp26e527->post('type', \App\Coupon::TYPE_ONETIME); $spe211a0 = $sp26e527->post('expire_at'); $spccffa5 = (int) $sp26e527->post('discount_val'); $spfbce14 = (int) $sp26e527->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp869669 = $sp26e527->post('remark'); if ($spfbce14 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spccffa5 < 1 || $spccffa5 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spfbce14 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spccffa5 < 1 || $spccffa5 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp735ffa = (int) $sp26e527->post('category_id', -1); $sp517398 = (int) $sp26e527->post('product_id', -1); if ($spa0789d === \App\Coupon::TYPE_REPEAT) { $sp698fdf = $sp26e527->post('coupon'); if (!$sp698fdf) { $sp698fdf = strtoupper(str_random()); } $sp2067c6 = new \App\Coupon(); $sp2067c6->user_id = $this->getUserIdOrFail($sp26e527); $sp2067c6->category_id = $sp735ffa; $sp2067c6->product_id = $sp517398; $sp2067c6->coupon = $sp698fdf; $sp2067c6->type = $spa0789d; $sp2067c6->discount_val = $spccffa5; $sp2067c6->discount_type = $spfbce14; $sp2067c6->count_all = (int) $sp26e527->post('count_all', 1); if ($sp2067c6->count_all < 1 || $sp2067c6->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp2067c6->expire_at = $spe211a0; $sp2067c6->saveOrFail(); return Response::success(array($sp2067c6->coupon)); } elseif ($spa0789d === \App\Coupon::TYPE_ONETIME) { if (!$spe95220) { return Response::forbidden('请输入生成数量'); } if ($spe95220 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp7aa1e0 = array(); $spb5e6c9 = array(); $sp699450 = $this->getUserIdOrFail($sp26e527); $sp449152 = Carbon::now(); for ($sp8f2283 = 0; $sp8f2283 < $spe95220; $sp8f2283++) { $sp2067c6 = strtoupper(str_random()); $spb5e6c9[] = $sp2067c6; $sp7aa1e0[] = array('user_id' => $sp699450, 'coupon' => $sp2067c6, 'category_id' => $sp735ffa, 'product_id' => $sp517398, 'type' => $spa0789d, 'discount_val' => $spccffa5, 'discount_type' => $spfbce14, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp869669, 'created_at' => $sp449152, 'expire_at' => $spe211a0); } \App\Coupon::insert($sp7aa1e0); return Response::success($spb5e6c9); } else { return Response::forbidden('unknown type: ' . $spa0789d); } } function edit(Request $sp26e527) { $sp138835 = (int) $sp26e527->post('id'); $sp698fdf = $sp26e527->post('coupon'); $sp735ffa = (int) $sp26e527->post('category_id', -1); $sp517398 = (int) $sp26e527->post('product_id', -1); $spe211a0 = $sp26e527->post('expire_at', NULL); $sp0f5dbe = (int) $sp26e527->post('status', \App\Coupon::STATUS_NORMAL); $spa0789d = (int) $sp26e527->post('type', \App\Coupon::TYPE_ONETIME); $spccffa5 = (int) $sp26e527->post('discount_val'); $spfbce14 = (int) $sp26e527->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spfbce14 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spccffa5 < 1 || $spccffa5 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spfbce14 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spccffa5 < 1 || $spccffa5 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp2067c6 = $this->authQuery($sp26e527, \App\Coupon::class)->find($sp138835); if ($sp2067c6) { $sp2067c6->coupon = $sp698fdf; $sp2067c6->category_id = $sp735ffa; $sp2067c6->product_id = $sp517398; $sp2067c6->status = $sp0f5dbe; $sp2067c6->type = $spa0789d; $sp2067c6->discount_val = $spccffa5; $sp2067c6->discount_type = $spfbce14; if ($spa0789d === \App\Coupon::TYPE_REPEAT) { $sp2067c6->count_all = (int) $sp26e527->post('count_all', 1); if ($sp2067c6->count_all < 1 || $sp2067c6->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spe211a0) { $sp2067c6->expire_at = $spe211a0; } $sp2067c6->saveOrFail(); } else { $sp1940c2 = explode('
', $sp698fdf); for ($sp8f2283 = 0; $sp8f2283 < count($sp1940c2); $sp8f2283++) { $spf071fa = str_replace('', '', trim($sp1940c2[$sp8f2283])); $sp2067c6 = new \App\Coupon(); $sp2067c6->coupon = $spf071fa; $sp2067c6->category_id = $sp735ffa; $sp2067c6->product_id = $sp517398; $sp2067c6->status = $sp0f5dbe; $sp2067c6->type = $spa0789d; $sp2067c6->discount_val = $spccffa5; $sp2067c6->discount_type = $spfbce14; $sp1940c2[$sp8f2283] = $sp2067c6; } \App\Product::find($sp517398)->coupons()->saveMany($sp1940c2); } return Response::success(); } function enable(Request $sp26e527) { $this->validate($sp26e527, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp892962 = $sp26e527->post('ids'); $spc9cacd = (int) $sp26e527->post('enabled'); $this->authQuery($sp26e527, \App\Coupon::class)->whereIn('id', explode(',', $sp892962))->update(array('enabled' => $spc9cacd)); return Response::success(); } function delete(Request $sp26e527) { $this->validate($sp26e527, array('ids' => 'required|string')); $sp892962 = $sp26e527->post('ids'); $this->authQuery($sp26e527, \App\Coupon::class)->whereIn('id', explode(',', $sp892962))->delete(); return Response::success(); } }