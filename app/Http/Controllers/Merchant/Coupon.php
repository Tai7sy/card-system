<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp3c91bd) { $sp6cb35e = $this->authQuery($sp3c91bd, \App\Coupon::class)->with(array('category' => function ($sp6cb35e) { $sp6cb35e->select(array('id', 'name')); }))->with(array('product' => function ($sp6cb35e) { $sp6cb35e->select(array('id', 'name')); })); $sp98fed8 = $sp3c91bd->post('search', false); $sp7f8b1d = $sp3c91bd->post('val', false); if ($sp98fed8 && $sp7f8b1d) { if ($sp98fed8 == 'id') { $sp6cb35e->where('id', $sp7f8b1d); } else { $sp6cb35e->where($sp98fed8, 'like', '%' . $sp7f8b1d . '%'); } } $sp8af541 = (int) $sp3c91bd->post('category_id'); $sp5d967e = $sp3c91bd->post('product_id', -1); if ($sp8af541 > 0) { if ($sp5d967e > 0) { $sp6cb35e->where('product_id', $sp5d967e); } else { $sp6cb35e->where('category_id', $sp8af541); } } $sp31859f = $sp3c91bd->post('status'); if (strlen($sp31859f)) { $sp6cb35e->whereIn('status', explode(',', $sp31859f)); } $sp0fe7ec = $sp3c91bd->post('type'); if (strlen($sp0fe7ec)) { $sp6cb35e->whereIn('type', explode(',', $sp0fe7ec)); } $sp6cb35e->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spf8ae2a = $sp3c91bd->post('current_page', 1); $spa4d3d7 = $sp3c91bd->post('per_page', 20); $spdecb4c = $sp6cb35e->paginate($spa4d3d7, array('*'), 'page', $spf8ae2a); return Response::success($spdecb4c); } function create(Request $sp3c91bd) { $spdba6bb = $sp3c91bd->post('count', 0); $sp0fe7ec = (int) $sp3c91bd->post('type', \App\Coupon::TYPE_ONETIME); $spfb7a8e = $sp3c91bd->post('expire_at'); $sp2e2da2 = (int) $sp3c91bd->post('discount_val'); $sp2ba462 = (int) $sp3c91bd->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp7b8ff5 = $sp3c91bd->post('remark'); if ($sp2ba462 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp2e2da2 < 1 || $sp2e2da2 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp2ba462 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp2e2da2 < 1 || $sp2e2da2 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp8af541 = (int) $sp3c91bd->post('category_id', -1); $sp5d967e = (int) $sp3c91bd->post('product_id', -1); if ($sp0fe7ec === \App\Coupon::TYPE_REPEAT) { $spda423d = $sp3c91bd->post('coupon'); if (!$spda423d) { $spda423d = strtoupper(str_random()); } $sp9ac414 = new \App\Coupon(); $sp9ac414->user_id = $this->getUserIdOrFail($sp3c91bd); $sp9ac414->category_id = $sp8af541; $sp9ac414->product_id = $sp5d967e; $sp9ac414->coupon = $spda423d; $sp9ac414->type = $sp0fe7ec; $sp9ac414->discount_val = $sp2e2da2; $sp9ac414->discount_type = $sp2ba462; $sp9ac414->count_all = (int) $sp3c91bd->post('count_all', 1); if ($sp9ac414->count_all < 1 || $sp9ac414->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp9ac414->expire_at = $spfb7a8e; $sp9ac414->saveOrFail(); return Response::success(array($sp9ac414->coupon)); } elseif ($sp0fe7ec === \App\Coupon::TYPE_ONETIME) { if (!$spdba6bb) { return Response::forbidden('请输入生成数量'); } if ($spdba6bb > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp5984c3 = array(); $sp3c8dfc = array(); $spdad372 = $this->getUserIdOrFail($sp3c91bd); $spd8f589 = Carbon::now(); for ($spe89d11 = 0; $spe89d11 < $spdba6bb; $spe89d11++) { $sp9ac414 = strtoupper(str_random()); $sp3c8dfc[] = $sp9ac414; $sp5984c3[] = array('user_id' => $spdad372, 'coupon' => $sp9ac414, 'category_id' => $sp8af541, 'product_id' => $sp5d967e, 'type' => $sp0fe7ec, 'discount_val' => $sp2e2da2, 'discount_type' => $sp2ba462, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp7b8ff5, 'created_at' => $spd8f589, 'expire_at' => $spfb7a8e); } \App\Coupon::insert($sp5984c3); return Response::success($sp3c8dfc); } else { return Response::forbidden('unknown type: ' . $sp0fe7ec); } } function edit(Request $sp3c91bd) { $spbabe1d = (int) $sp3c91bd->post('id'); $spda423d = $sp3c91bd->post('coupon'); $sp8af541 = (int) $sp3c91bd->post('category_id', -1); $sp5d967e = (int) $sp3c91bd->post('product_id', -1); $spfb7a8e = $sp3c91bd->post('expire_at', NULL); $sp31859f = (int) $sp3c91bd->post('status', \App\Coupon::STATUS_NORMAL); $sp0fe7ec = (int) $sp3c91bd->post('type', \App\Coupon::TYPE_ONETIME); $sp2e2da2 = (int) $sp3c91bd->post('discount_val'); $sp2ba462 = (int) $sp3c91bd->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp2ba462 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp2e2da2 < 1 || $sp2e2da2 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp2ba462 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp2e2da2 < 1 || $sp2e2da2 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp9ac414 = $this->authQuery($sp3c91bd, \App\Coupon::class)->find($spbabe1d); if ($sp9ac414) { $sp9ac414->coupon = $spda423d; $sp9ac414->category_id = $sp8af541; $sp9ac414->product_id = $sp5d967e; $sp9ac414->status = $sp31859f; $sp9ac414->type = $sp0fe7ec; $sp9ac414->discount_val = $sp2e2da2; $sp9ac414->discount_type = $sp2ba462; if ($sp0fe7ec === \App\Coupon::TYPE_REPEAT) { $sp9ac414->count_all = (int) $sp3c91bd->post('count_all', 1); if ($sp9ac414->count_all < 1 || $sp9ac414->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spfb7a8e) { $sp9ac414->expire_at = $spfb7a8e; } $sp9ac414->saveOrFail(); } else { $sp309243 = explode('
', $spda423d); for ($spe89d11 = 0; $spe89d11 < count($sp309243); $spe89d11++) { $sp352dfa = str_replace('', '', trim($sp309243[$spe89d11])); $sp9ac414 = new \App\Coupon(); $sp9ac414->coupon = $sp352dfa; $sp9ac414->category_id = $sp8af541; $sp9ac414->product_id = $sp5d967e; $sp9ac414->status = $sp31859f; $sp9ac414->type = $sp0fe7ec; $sp9ac414->discount_val = $sp2e2da2; $sp9ac414->discount_type = $sp2ba462; $sp309243[$spe89d11] = $sp9ac414; } \App\Product::find($sp5d967e)->coupons()->saveMany($sp309243); } return Response::success(); } function enable(Request $sp3c91bd) { $this->validate($sp3c91bd, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spdbdb98 = $sp3c91bd->post('ids'); $spa20949 = (int) $sp3c91bd->post('enabled'); $this->authQuery($sp3c91bd, \App\Coupon::class)->whereIn('id', explode(',', $spdbdb98))->update(array('enabled' => $spa20949)); return Response::success(); } function delete(Request $sp3c91bd) { $this->validate($sp3c91bd, array('ids' => 'required|string')); $spdbdb98 = $sp3c91bd->post('ids'); $this->authQuery($sp3c91bd, \App\Coupon::class)->whereIn('id', explode(',', $spdbdb98))->delete(); return Response::success(); } }