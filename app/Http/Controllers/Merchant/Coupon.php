<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp179c14) { $sp78fbd3 = $this->authQuery($sp179c14, \App\Coupon::class)->with(array('category' => function ($sp78fbd3) { $sp78fbd3->select(array('id', 'name')); }))->with(array('product' => function ($sp78fbd3) { $sp78fbd3->select(array('id', 'name')); })); $sp2ae16a = $sp179c14->post('search', false); $sp2fe7b9 = $sp179c14->post('val', false); if ($sp2ae16a && $sp2fe7b9) { if ($sp2ae16a == 'id') { $sp78fbd3->where('id', $sp2fe7b9); } else { $sp78fbd3->where($sp2ae16a, 'like', '%' . $sp2fe7b9 . '%'); } } $sp2521ab = (int) $sp179c14->post('category_id'); $spc00b16 = $sp179c14->post('product_id', -1); if ($sp2521ab > 0) { if ($spc00b16 > 0) { $sp78fbd3->where('product_id', $spc00b16); } else { $sp78fbd3->where('category_id', $sp2521ab); } } $spf783c8 = $sp179c14->post('status'); if (strlen($spf783c8)) { $sp78fbd3->whereIn('status', explode(',', $spf783c8)); } $sp42feb1 = $sp179c14->post('type'); if (strlen($sp42feb1)) { $sp78fbd3->whereIn('type', explode(',', $sp42feb1)); } $sp78fbd3->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spababe9 = $sp179c14->post('current_page', 1); $sp4b1688 = $sp179c14->post('per_page', 20); $spe11c26 = $sp78fbd3->paginate($sp4b1688, array('*'), 'page', $spababe9); return Response::success($spe11c26); } function create(Request $sp179c14) { $spb37164 = $sp179c14->post('count', 0); $sp42feb1 = (int) $sp179c14->post('type', \App\Coupon::TYPE_ONETIME); $sp0d7011 = $sp179c14->post('expire_at'); $sp5814a8 = (int) $sp179c14->post('discount_val'); $spd1b5c0 = (int) $sp179c14->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp46d3b9 = $sp179c14->post('remark'); if ($spd1b5c0 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp5814a8 < 1 || $sp5814a8 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spd1b5c0 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp5814a8 < 1 || $sp5814a8 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp2521ab = (int) $sp179c14->post('category_id', -1); $spc00b16 = (int) $sp179c14->post('product_id', -1); if ($sp42feb1 === \App\Coupon::TYPE_REPEAT) { $sp7109e6 = $sp179c14->post('coupon'); if (!$sp7109e6) { $sp7109e6 = strtoupper(str_random()); } $spf5555a = new \App\Coupon(); $spf5555a->user_id = $this->getUserIdOrFail($sp179c14); $spf5555a->category_id = $sp2521ab; $spf5555a->product_id = $spc00b16; $spf5555a->coupon = $sp7109e6; $spf5555a->type = $sp42feb1; $spf5555a->discount_val = $sp5814a8; $spf5555a->discount_type = $spd1b5c0; $spf5555a->count_all = (int) $sp179c14->post('count_all', 1); if ($spf5555a->count_all < 1 || $spf5555a->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spf5555a->expire_at = $sp0d7011; $spf5555a->saveOrFail(); return Response::success(array($spf5555a->coupon)); } elseif ($sp42feb1 === \App\Coupon::TYPE_ONETIME) { if (!$spb37164) { return Response::forbidden('请输入生成数量'); } if ($spb37164 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp1618d0 = array(); $sp58feb8 = array(); $spf36aa8 = $this->getUserIdOrFail($sp179c14); $spc2039b = Carbon::now(); for ($sp133c87 = 0; $sp133c87 < $spb37164; $sp133c87++) { $spf5555a = strtoupper(str_random()); $sp58feb8[] = $spf5555a; $sp1618d0[] = array('user_id' => $spf36aa8, 'coupon' => $spf5555a, 'category_id' => $sp2521ab, 'product_id' => $spc00b16, 'type' => $sp42feb1, 'discount_val' => $sp5814a8, 'discount_type' => $spd1b5c0, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp46d3b9, 'created_at' => $spc2039b, 'expire_at' => $sp0d7011); } \App\Coupon::insert($sp1618d0); return Response::success($sp58feb8); } else { return Response::forbidden('unknown type: ' . $sp42feb1); } } function edit(Request $sp179c14) { $spadc22c = (int) $sp179c14->post('id'); $sp7109e6 = $sp179c14->post('coupon'); $sp2521ab = (int) $sp179c14->post('category_id', -1); $spc00b16 = (int) $sp179c14->post('product_id', -1); $sp0d7011 = $sp179c14->post('expire_at', NULL); $spf783c8 = (int) $sp179c14->post('status', \App\Coupon::STATUS_NORMAL); $sp42feb1 = (int) $sp179c14->post('type', \App\Coupon::TYPE_ONETIME); $sp5814a8 = (int) $sp179c14->post('discount_val'); $spd1b5c0 = (int) $sp179c14->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spd1b5c0 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp5814a8 < 1 || $sp5814a8 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spd1b5c0 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp5814a8 < 1 || $sp5814a8 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spf5555a = $this->authQuery($sp179c14, \App\Coupon::class)->find($spadc22c); if ($spf5555a) { $spf5555a->coupon = $sp7109e6; $spf5555a->category_id = $sp2521ab; $spf5555a->product_id = $spc00b16; $spf5555a->status = $spf783c8; $spf5555a->type = $sp42feb1; $spf5555a->discount_val = $sp5814a8; $spf5555a->discount_type = $spd1b5c0; if ($sp42feb1 === \App\Coupon::TYPE_REPEAT) { $spf5555a->count_all = (int) $sp179c14->post('count_all', 1); if ($spf5555a->count_all < 1 || $spf5555a->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp0d7011) { $spf5555a->expire_at = $sp0d7011; } $spf5555a->saveOrFail(); } else { $spec111a = explode('
', $sp7109e6); for ($sp133c87 = 0; $sp133c87 < count($spec111a); $sp133c87++) { $sp827da4 = str_replace('', '', trim($spec111a[$sp133c87])); $spf5555a = new \App\Coupon(); $spf5555a->coupon = $sp827da4; $spf5555a->category_id = $sp2521ab; $spf5555a->product_id = $spc00b16; $spf5555a->status = $spf783c8; $spf5555a->type = $sp42feb1; $spf5555a->discount_val = $sp5814a8; $spf5555a->discount_type = $spd1b5c0; $spec111a[$sp133c87] = $spf5555a; } \App\Product::find($spc00b16)->coupons()->saveMany($spec111a); } return Response::success(); } function enable(Request $sp179c14) { $this->validate($sp179c14, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp786967 = $sp179c14->post('ids'); $sp2cc7da = (int) $sp179c14->post('enabled'); $this->authQuery($sp179c14, \App\Coupon::class)->whereIn('id', explode(',', $sp786967))->update(array('enabled' => $sp2cc7da)); return Response::success(); } function delete(Request $sp179c14) { $this->validate($sp179c14, array('ids' => 'required|string')); $sp786967 = $sp179c14->post('ids'); $this->authQuery($sp179c14, \App\Coupon::class)->whereIn('id', explode(',', $sp786967))->delete(); return Response::success(); } }