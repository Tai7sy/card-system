<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp147552) { $spd10097 = $this->authQuery($sp147552, \App\Coupon::class)->with(array('category' => function ($spd10097) { $spd10097->select(array('id', 'name')); }))->with(array('product' => function ($spd10097) { $spd10097->select(array('id', 'name')); })); $spa1f2d3 = $sp147552->input('search', false); $spa55e11 = $sp147552->input('val', false); if ($spa1f2d3 && $spa55e11) { if ($spa1f2d3 == 'id') { $spd10097->where('id', $spa55e11); } else { $spd10097->where($spa1f2d3, 'like', '%' . $spa55e11 . '%'); } } $sp43c1c1 = (int) $sp147552->input('category_id'); $sp52cac1 = $sp147552->input('product_id', -1); if ($sp43c1c1 > 0) { if ($sp52cac1 > 0) { $spd10097->where('product_id', $sp52cac1); } else { $spd10097->where('category_id', $sp43c1c1); } } $sp415e3d = $sp147552->input('status'); if (strlen($sp415e3d)) { $spd10097->whereIn('status', explode(',', $sp415e3d)); } $sp4ad441 = $sp147552->input('type'); if (strlen($sp4ad441)) { $spd10097->whereIn('type', explode(',', $sp4ad441)); } $spd10097->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp95caec = (int) $sp147552->input('current_page', 1); $sp11fa7d = (int) $sp147552->input('per_page', 20); $sp8b8475 = $spd10097->paginate($sp11fa7d, array('*'), 'page', $sp95caec); return Response::success($sp8b8475); } function create(Request $sp147552) { $sp75f1cf = $sp147552->post('count', 0); $sp4ad441 = (int) $sp147552->post('type', \App\Coupon::TYPE_ONETIME); $spf55828 = $sp147552->post('expire_at'); $spe01983 = (int) $sp147552->post('discount_val'); $spa33eac = (int) $sp147552->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp8d25d5 = $sp147552->post('remark'); if ($spa33eac === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spe01983 < 1 || $spe01983 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spa33eac === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spe01983 < 1 || $spe01983 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp43c1c1 = (int) $sp147552->post('category_id', -1); $sp52cac1 = (int) $sp147552->post('product_id', -1); if ($sp4ad441 === \App\Coupon::TYPE_REPEAT) { $spb940a6 = $sp147552->post('coupon'); if (!$spb940a6) { $spb940a6 = strtoupper(str_random()); } $sp37c7df = new \App\Coupon(); $sp37c7df->user_id = $this->getUserIdOrFail($sp147552); $sp37c7df->category_id = $sp43c1c1; $sp37c7df->product_id = $sp52cac1; $sp37c7df->coupon = $spb940a6; $sp37c7df->type = $sp4ad441; $sp37c7df->discount_val = $spe01983; $sp37c7df->discount_type = $spa33eac; $sp37c7df->count_all = (int) $sp147552->post('count_all', 1); if ($sp37c7df->count_all < 1 || $sp37c7df->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp37c7df->expire_at = $spf55828; $sp37c7df->saveOrFail(); return Response::success(array($sp37c7df->coupon)); } elseif ($sp4ad441 === \App\Coupon::TYPE_ONETIME) { if (!$sp75f1cf) { return Response::forbidden('请输入生成数量'); } if ($sp75f1cf > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp76025f = array(); $sp3bc624 = array(); $spa27b73 = $this->getUserIdOrFail($sp147552); $sp0fd3d6 = Carbon::now(); for ($sp80b4fe = 0; $sp80b4fe < $sp75f1cf; $sp80b4fe++) { $sp37c7df = strtoupper(str_random()); $sp3bc624[] = $sp37c7df; $sp76025f[] = array('user_id' => $spa27b73, 'coupon' => $sp37c7df, 'category_id' => $sp43c1c1, 'product_id' => $sp52cac1, 'type' => $sp4ad441, 'discount_val' => $spe01983, 'discount_type' => $spa33eac, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp8d25d5, 'created_at' => $sp0fd3d6, 'expire_at' => $spf55828); } \App\Coupon::insert($sp76025f); return Response::success($sp3bc624); } else { return Response::forbidden('unknown type: ' . $sp4ad441); } } function edit(Request $sp147552) { $speb3ceb = (int) $sp147552->post('id'); $spb940a6 = $sp147552->post('coupon'); $sp43c1c1 = (int) $sp147552->post('category_id', -1); $sp52cac1 = (int) $sp147552->post('product_id', -1); $spf55828 = $sp147552->post('expire_at', NULL); $sp415e3d = (int) $sp147552->post('status', \App\Coupon::STATUS_NORMAL); $sp4ad441 = (int) $sp147552->post('type', \App\Coupon::TYPE_ONETIME); $spe01983 = (int) $sp147552->post('discount_val'); $spa33eac = (int) $sp147552->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spa33eac === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spe01983 < 1 || $spe01983 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spa33eac === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spe01983 < 1 || $spe01983 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp37c7df = $this->authQuery($sp147552, \App\Coupon::class)->find($speb3ceb); if ($sp37c7df) { $sp37c7df->coupon = $spb940a6; $sp37c7df->category_id = $sp43c1c1; $sp37c7df->product_id = $sp52cac1; $sp37c7df->status = $sp415e3d; $sp37c7df->type = $sp4ad441; $sp37c7df->discount_val = $spe01983; $sp37c7df->discount_type = $spa33eac; if ($sp4ad441 === \App\Coupon::TYPE_REPEAT) { $sp37c7df->count_all = (int) $sp147552->post('count_all', 1); if ($sp37c7df->count_all < 1 || $sp37c7df->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spf55828) { $sp37c7df->expire_at = $spf55828; } $sp37c7df->saveOrFail(); } else { $sp92d0f5 = explode('
', $spb940a6); for ($sp80b4fe = 0; $sp80b4fe < count($sp92d0f5); $sp80b4fe++) { $spff0fc9 = str_replace('', '', trim($sp92d0f5[$sp80b4fe])); $sp37c7df = new \App\Coupon(); $sp37c7df->coupon = $spff0fc9; $sp37c7df->category_id = $sp43c1c1; $sp37c7df->product_id = $sp52cac1; $sp37c7df->status = $sp415e3d; $sp37c7df->type = $sp4ad441; $sp37c7df->discount_val = $spe01983; $sp37c7df->discount_type = $spa33eac; $sp92d0f5[$sp80b4fe] = $sp37c7df; } \App\Product::find($sp52cac1)->coupons()->saveMany($sp92d0f5); } return Response::success(); } function enable(Request $sp147552) { $this->validate($sp147552, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp548f2b = $sp147552->post('ids'); $sp23f506 = (int) $sp147552->post('enabled'); $this->authQuery($sp147552, \App\Coupon::class)->whereIn('id', explode(',', $sp548f2b))->update(array('enabled' => $sp23f506)); return Response::success(); } function delete(Request $sp147552) { $this->validate($sp147552, array('ids' => 'required|string')); $sp548f2b = $sp147552->post('ids'); $this->authQuery($sp147552, \App\Coupon::class)->whereIn('id', explode(',', $sp548f2b))->delete(); return Response::success(); } }