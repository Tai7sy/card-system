<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spfb41ce) { $sp61dd0f = $this->authQuery($spfb41ce, \App\Coupon::class)->with(array('category' => function ($sp61dd0f) { $sp61dd0f->select(array('id', 'name')); }))->with(array('product' => function ($sp61dd0f) { $sp61dd0f->select(array('id', 'name')); })); $sp2e420a = $spfb41ce->post('search', false); $sp286c56 = $spfb41ce->post('val', false); if ($sp2e420a && $sp286c56) { if ($sp2e420a == 'id') { $sp61dd0f->where('id', $sp286c56); } else { $sp61dd0f->where($sp2e420a, 'like', '%' . $sp286c56 . '%'); } } $spf9ba01 = (int) $spfb41ce->post('category_id'); $sp2fece4 = $spfb41ce->post('product_id', -1); if ($spf9ba01 > 0) { if ($sp2fece4 > 0) { $sp61dd0f->where('product_id', $sp2fece4); } else { $sp61dd0f->where('category_id', $spf9ba01); } } $spd2b17f = $spfb41ce->post('status'); if (strlen($spd2b17f)) { $sp61dd0f->whereIn('status', explode(',', $spd2b17f)); } $spc5c8dd = $spfb41ce->post('type'); if (strlen($spc5c8dd)) { $sp61dd0f->whereIn('type', explode(',', $spc5c8dd)); } $sp61dd0f->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp91e8e3 = $spfb41ce->post('current_page', 1); $sp3cad87 = $spfb41ce->post('per_page', 20); $sp32d442 = $sp61dd0f->paginate($sp3cad87, array('*'), 'page', $sp91e8e3); return Response::success($sp32d442); } function create(Request $spfb41ce) { $sp2150fd = $spfb41ce->post('count', 0); $spc5c8dd = (int) $spfb41ce->post('type', \App\Coupon::TYPE_ONETIME); $sp97a99e = $spfb41ce->post('expire_at'); $spa8c973 = (int) $spfb41ce->post('discount_val'); $sp1578cc = (int) $spfb41ce->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $spd4d093 = $spfb41ce->post('remark'); if ($sp1578cc === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spa8c973 < 1 || $spa8c973 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp1578cc === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spa8c973 < 1 || $spa8c973 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spf9ba01 = (int) $spfb41ce->post('category_id', -1); $sp2fece4 = (int) $spfb41ce->post('product_id', -1); if ($spc5c8dd === \App\Coupon::TYPE_REPEAT) { $spe30c7d = $spfb41ce->post('coupon'); if (!$spe30c7d) { $spe30c7d = strtoupper(str_random()); } $sp22a7c0 = new \App\Coupon(); $sp22a7c0->user_id = $this->getUserIdOrFail($spfb41ce); $sp22a7c0->category_id = $spf9ba01; $sp22a7c0->product_id = $sp2fece4; $sp22a7c0->coupon = $spe30c7d; $sp22a7c0->type = $spc5c8dd; $sp22a7c0->discount_val = $spa8c973; $sp22a7c0->discount_type = $sp1578cc; $sp22a7c0->count_all = (int) $spfb41ce->post('count_all', 1); if ($sp22a7c0->count_all < 1 || $sp22a7c0->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp22a7c0->expire_at = $sp97a99e; $sp22a7c0->saveOrFail(); return Response::success(array($sp22a7c0->coupon)); } elseif ($spc5c8dd === \App\Coupon::TYPE_ONETIME) { if (!$sp2150fd) { return Response::forbidden('请输入生成数量'); } if ($sp2150fd > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp832c5d = array(); $sp4d92a4 = array(); $sp1e2a07 = $this->getUserIdOrFail($spfb41ce); $spc92697 = Carbon::now(); for ($spdb14d1 = 0; $spdb14d1 < $sp2150fd; $spdb14d1++) { $sp22a7c0 = strtoupper(str_random()); $sp4d92a4[] = $sp22a7c0; $sp832c5d[] = array('user_id' => $sp1e2a07, 'coupon' => $sp22a7c0, 'category_id' => $spf9ba01, 'product_id' => $sp2fece4, 'type' => $spc5c8dd, 'discount_val' => $spa8c973, 'discount_type' => $sp1578cc, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $spd4d093, 'created_at' => $spc92697, 'expire_at' => $sp97a99e); } \App\Coupon::insert($sp832c5d); return Response::success($sp4d92a4); } else { return Response::forbidden('unknown type: ' . $spc5c8dd); } } function edit(Request $spfb41ce) { $sp1e9761 = (int) $spfb41ce->post('id'); $spe30c7d = $spfb41ce->post('coupon'); $spf9ba01 = (int) $spfb41ce->post('category_id', -1); $sp2fece4 = (int) $spfb41ce->post('product_id', -1); $sp97a99e = $spfb41ce->post('expire_at', NULL); $spd2b17f = (int) $spfb41ce->post('status', \App\Coupon::STATUS_NORMAL); $spc5c8dd = (int) $spfb41ce->post('type', \App\Coupon::TYPE_ONETIME); $spa8c973 = (int) $spfb41ce->post('discount_val'); $sp1578cc = (int) $spfb41ce->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp1578cc === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spa8c973 < 1 || $spa8c973 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp1578cc === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spa8c973 < 1 || $spa8c973 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp22a7c0 = $this->authQuery($spfb41ce, \App\Coupon::class)->find($sp1e9761); if ($sp22a7c0) { $sp22a7c0->coupon = $spe30c7d; $sp22a7c0->category_id = $spf9ba01; $sp22a7c0->product_id = $sp2fece4; $sp22a7c0->status = $spd2b17f; $sp22a7c0->type = $spc5c8dd; $sp22a7c0->discount_val = $spa8c973; $sp22a7c0->discount_type = $sp1578cc; if ($spc5c8dd === \App\Coupon::TYPE_REPEAT) { $sp22a7c0->count_all = (int) $spfb41ce->post('count_all', 1); if ($sp22a7c0->count_all < 1 || $sp22a7c0->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp97a99e) { $sp22a7c0->expire_at = $sp97a99e; } $sp22a7c0->saveOrFail(); } else { $sp29c5d1 = explode('
', $spe30c7d); for ($spdb14d1 = 0; $spdb14d1 < count($sp29c5d1); $spdb14d1++) { $spc72fd4 = str_replace('', '', trim($sp29c5d1[$spdb14d1])); $sp22a7c0 = new \App\Coupon(); $sp22a7c0->coupon = $spc72fd4; $sp22a7c0->category_id = $spf9ba01; $sp22a7c0->product_id = $sp2fece4; $sp22a7c0->status = $spd2b17f; $sp22a7c0->type = $spc5c8dd; $sp22a7c0->discount_val = $spa8c973; $sp22a7c0->discount_type = $sp1578cc; $sp29c5d1[$spdb14d1] = $sp22a7c0; } \App\Product::find($sp2fece4)->coupons()->saveMany($sp29c5d1); } return Response::success(); } function enable(Request $spfb41ce) { $this->validate($spfb41ce, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp87851e = $spfb41ce->post('ids'); $sp691786 = (int) $spfb41ce->post('enabled'); $this->authQuery($spfb41ce, \App\Coupon::class)->whereIn('id', explode(',', $sp87851e))->update(array('enabled' => $sp691786)); return Response::success(); } function delete(Request $spfb41ce) { $this->validate($spfb41ce, array('ids' => 'required|string')); $sp87851e = $spfb41ce->post('ids'); $this->authQuery($spfb41ce, \App\Coupon::class)->whereIn('id', explode(',', $sp87851e))->delete(); return Response::success(); } }