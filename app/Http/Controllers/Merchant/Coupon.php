<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spfb5ae3) { $sp32b0d3 = $this->authQuery($spfb5ae3, \App\Coupon::class)->with(array('category' => function ($sp32b0d3) { $sp32b0d3->select(array('id', 'name')); }))->with(array('product' => function ($sp32b0d3) { $sp32b0d3->select(array('id', 'name')); })); $spb59184 = $spfb5ae3->post('search', false); $sp809177 = $spfb5ae3->post('val', false); if ($spb59184 && $sp809177) { if ($spb59184 == 'id') { $sp32b0d3->where('id', $sp809177); } else { $sp32b0d3->where($spb59184, 'like', '%' . $sp809177 . '%'); } } $sp66458a = (int) $spfb5ae3->post('category_id'); $sp3edfae = $spfb5ae3->post('product_id', -1); if ($sp66458a > 0) { if ($sp3edfae > 0) { $sp32b0d3->where('product_id', $sp3edfae); } else { $sp32b0d3->where('category_id', $sp66458a); } } $spb35169 = $spfb5ae3->post('status'); if (strlen($spb35169)) { $sp32b0d3->whereIn('status', explode(',', $spb35169)); } $sp0e721b = $spfb5ae3->post('type'); if (strlen($sp0e721b)) { $sp32b0d3->whereIn('type', explode(',', $sp0e721b)); } $sp32b0d3->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spd43f26 = $spfb5ae3->post('current_page', 1); $spce7281 = $spfb5ae3->post('per_page', 20); $spfa99a5 = $sp32b0d3->paginate($spce7281, array('*'), 'page', $spd43f26); return Response::success($spfa99a5); } function create(Request $spfb5ae3) { $sp10fb8e = $spfb5ae3->post('count', 0); $sp0e721b = (int) $spfb5ae3->post('type', \App\Coupon::TYPE_ONETIME); $sp97ed44 = $spfb5ae3->post('expire_at'); $sp204b34 = (int) $spfb5ae3->post('discount_val'); $spc29385 = (int) $spfb5ae3->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp14a4d4 = $spfb5ae3->post('remark'); if ($spc29385 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp204b34 < 1 || $sp204b34 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spc29385 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp204b34 < 1 || $sp204b34 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp66458a = (int) $spfb5ae3->post('category_id', -1); $sp3edfae = (int) $spfb5ae3->post('product_id', -1); if ($sp0e721b === \App\Coupon::TYPE_REPEAT) { $sp81431c = $spfb5ae3->post('coupon'); if (!$sp81431c) { $sp81431c = strtoupper(str_random()); } $sp7bd94d = new \App\Coupon(); $sp7bd94d->user_id = $this->getUserIdOrFail($spfb5ae3); $sp7bd94d->category_id = $sp66458a; $sp7bd94d->product_id = $sp3edfae; $sp7bd94d->coupon = $sp81431c; $sp7bd94d->type = $sp0e721b; $sp7bd94d->discount_val = $sp204b34; $sp7bd94d->discount_type = $spc29385; $sp7bd94d->count_all = (int) $spfb5ae3->post('count_all', 1); if ($sp7bd94d->count_all < 1 || $sp7bd94d->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp7bd94d->expire_at = $sp97ed44; $sp7bd94d->saveOrFail(); return Response::success(array($sp7bd94d->coupon)); } elseif ($sp0e721b === \App\Coupon::TYPE_ONETIME) { if (!$sp10fb8e) { return Response::forbidden('请输入生成数量'); } if ($sp10fb8e > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp7cc331 = array(); $sp2a9a20 = array(); $sp134e80 = $this->getUserIdOrFail($spfb5ae3); $sp229fc5 = Carbon::now(); for ($sp53b67d = 0; $sp53b67d < $sp10fb8e; $sp53b67d++) { $sp7bd94d = strtoupper(str_random()); $sp2a9a20[] = $sp7bd94d; $sp7cc331[] = array('user_id' => $sp134e80, 'coupon' => $sp7bd94d, 'category_id' => $sp66458a, 'product_id' => $sp3edfae, 'type' => $sp0e721b, 'discount_val' => $sp204b34, 'discount_type' => $spc29385, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp14a4d4, 'created_at' => $sp229fc5, 'expire_at' => $sp97ed44); } \App\Coupon::insert($sp7cc331); return Response::success($sp2a9a20); } else { return Response::forbidden('unknown type: ' . $sp0e721b); } } function edit(Request $spfb5ae3) { $sp0cebcc = (int) $spfb5ae3->post('id'); $sp81431c = $spfb5ae3->post('coupon'); $sp66458a = (int) $spfb5ae3->post('category_id', -1); $sp3edfae = (int) $spfb5ae3->post('product_id', -1); $sp97ed44 = $spfb5ae3->post('expire_at', NULL); $spb35169 = (int) $spfb5ae3->post('status', \App\Coupon::STATUS_NORMAL); $sp0e721b = (int) $spfb5ae3->post('type', \App\Coupon::TYPE_ONETIME); $sp204b34 = (int) $spfb5ae3->post('discount_val'); $spc29385 = (int) $spfb5ae3->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spc29385 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp204b34 < 1 || $sp204b34 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spc29385 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp204b34 < 1 || $sp204b34 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp7bd94d = $this->authQuery($spfb5ae3, \App\Coupon::class)->find($sp0cebcc); if ($sp7bd94d) { $sp7bd94d->coupon = $sp81431c; $sp7bd94d->category_id = $sp66458a; $sp7bd94d->product_id = $sp3edfae; $sp7bd94d->status = $spb35169; $sp7bd94d->type = $sp0e721b; $sp7bd94d->discount_val = $sp204b34; $sp7bd94d->discount_type = $spc29385; if ($sp0e721b === \App\Coupon::TYPE_REPEAT) { $sp7bd94d->count_all = (int) $spfb5ae3->post('count_all', 1); if ($sp7bd94d->count_all < 1 || $sp7bd94d->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp97ed44) { $sp7bd94d->expire_at = $sp97ed44; } $sp7bd94d->saveOrFail(); } else { $sp40958c = explode('
', $sp81431c); for ($sp53b67d = 0; $sp53b67d < count($sp40958c); $sp53b67d++) { $spea3c92 = str_replace('', '', trim($sp40958c[$sp53b67d])); $sp7bd94d = new \App\Coupon(); $sp7bd94d->coupon = $spea3c92; $sp7bd94d->category_id = $sp66458a; $sp7bd94d->product_id = $sp3edfae; $sp7bd94d->status = $spb35169; $sp7bd94d->type = $sp0e721b; $sp7bd94d->discount_val = $sp204b34; $sp7bd94d->discount_type = $spc29385; $sp40958c[$sp53b67d] = $sp7bd94d; } \App\Product::find($sp3edfae)->coupons()->saveMany($sp40958c); } return Response::success(); } function enable(Request $spfb5ae3) { $this->validate($spfb5ae3, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $speab0da = $spfb5ae3->post('ids'); $sp607943 = (int) $spfb5ae3->post('enabled'); $this->authQuery($spfb5ae3, \App\Coupon::class)->whereIn('id', explode(',', $speab0da))->update(array('enabled' => $sp607943)); return Response::success(); } function delete(Request $spfb5ae3) { $this->validate($spfb5ae3, array('ids' => 'required|string')); $speab0da = $spfb5ae3->post('ids'); $this->authQuery($spfb5ae3, \App\Coupon::class)->whereIn('id', explode(',', $speab0da))->delete(); return Response::success(); } }