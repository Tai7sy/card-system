<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spd5cc4d) { $spe440a8 = $this->authQuery($spd5cc4d, \App\Coupon::class)->with(array('category' => function ($spe440a8) { $spe440a8->select(array('id', 'name')); }))->with(array('product' => function ($spe440a8) { $spe440a8->select(array('id', 'name')); })); $spc9965c = $spd5cc4d->post('search', false); $spee86b9 = $spd5cc4d->post('val', false); if ($spc9965c && $spee86b9) { if ($spc9965c == 'id') { $spe440a8->where('id', $spee86b9); } else { $spe440a8->where($spc9965c, 'like', '%' . $spee86b9 . '%'); } } $sp7b7cc9 = (int) $spd5cc4d->post('category_id'); $spad8100 = $spd5cc4d->post('product_id', -1); if ($sp7b7cc9 > 0) { if ($spad8100 > 0) { $spe440a8->where('product_id', $spad8100); } else { $spe440a8->where('category_id', $sp7b7cc9); } } $spc3ee59 = $spd5cc4d->post('status'); if (strlen($spc3ee59)) { $spe440a8->whereIn('status', explode(',', $spc3ee59)); } $spdc3fe5 = $spd5cc4d->post('type'); if (strlen($spdc3fe5)) { $spe440a8->whereIn('type', explode(',', $spdc3fe5)); } $spe440a8->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp707577 = $spd5cc4d->post('current_page', 1); $sp82c87f = $spd5cc4d->post('per_page', 20); $sp78c70b = $spe440a8->paginate($sp82c87f, array('*'), 'page', $sp707577); return Response::success($sp78c70b); } function create(Request $spd5cc4d) { $sp058528 = $spd5cc4d->post('count', 0); $spdc3fe5 = (int) $spd5cc4d->post('type', \App\Coupon::TYPE_ONETIME); $sp906db8 = $spd5cc4d->post('expire_at'); $spe6bab3 = (int) $spd5cc4d->post('discount_val'); $spf449f1 = (int) $spd5cc4d->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $spf420e3 = $spd5cc4d->post('remark'); if ($spf449f1 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spe6bab3 < 1 || $spe6bab3 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spf449f1 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spe6bab3 < 1 || $spe6bab3 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp7b7cc9 = (int) $spd5cc4d->post('category_id', -1); $spad8100 = (int) $spd5cc4d->post('product_id', -1); if ($spdc3fe5 === \App\Coupon::TYPE_REPEAT) { $sp8c149f = $spd5cc4d->post('coupon'); if (!$sp8c149f) { $sp8c149f = strtoupper(str_random()); } $spdd957a = new \App\Coupon(); $spdd957a->user_id = $this->getUserIdOrFail($spd5cc4d); $spdd957a->category_id = $sp7b7cc9; $spdd957a->product_id = $spad8100; $spdd957a->coupon = $sp8c149f; $spdd957a->type = $spdc3fe5; $spdd957a->discount_val = $spe6bab3; $spdd957a->discount_type = $spf449f1; $spdd957a->count_all = (int) $spd5cc4d->post('count_all', 1); if ($spdd957a->count_all < 1 || $spdd957a->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spdd957a->expire_at = $sp906db8; $spdd957a->saveOrFail(); return Response::success(array($spdd957a->coupon)); } elseif ($spdc3fe5 === \App\Coupon::TYPE_ONETIME) { if (!$sp058528) { return Response::forbidden('请输入生成数量'); } if ($sp058528 > 100) { return Response::forbidden('每次生成不能大于100张'); } $spa0d41d = array(); $sp73deea = array(); $spfaef2f = $this->getUserIdOrFail($spd5cc4d); $sp87a90e = Carbon::now(); for ($spb75665 = 0; $spb75665 < $sp058528; $spb75665++) { $spdd957a = strtoupper(str_random()); $sp73deea[] = $spdd957a; $spa0d41d[] = array('user_id' => $spfaef2f, 'coupon' => $spdd957a, 'category_id' => $sp7b7cc9, 'product_id' => $spad8100, 'type' => $spdc3fe5, 'discount_val' => $spe6bab3, 'discount_type' => $spf449f1, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $spf420e3, 'created_at' => $sp87a90e, 'expire_at' => $sp906db8); } \App\Coupon::insert($spa0d41d); return Response::success($sp73deea); } else { return Response::forbidden('unknown type: ' . $spdc3fe5); } } function edit(Request $spd5cc4d) { $spe00284 = (int) $spd5cc4d->post('id'); $sp8c149f = $spd5cc4d->post('coupon'); $sp7b7cc9 = (int) $spd5cc4d->post('category_id', -1); $spad8100 = (int) $spd5cc4d->post('product_id', -1); $sp906db8 = $spd5cc4d->post('expire_at', NULL); $spc3ee59 = (int) $spd5cc4d->post('status', \App\Coupon::STATUS_NORMAL); $spdc3fe5 = (int) $spd5cc4d->post('type', \App\Coupon::TYPE_ONETIME); $spe6bab3 = (int) $spd5cc4d->post('discount_val'); $spf449f1 = (int) $spd5cc4d->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spf449f1 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spe6bab3 < 1 || $spe6bab3 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spf449f1 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spe6bab3 < 1 || $spe6bab3 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spdd957a = $this->authQuery($spd5cc4d, \App\Coupon::class)->find($spe00284); if ($spdd957a) { $spdd957a->coupon = $sp8c149f; $spdd957a->category_id = $sp7b7cc9; $spdd957a->product_id = $spad8100; $spdd957a->status = $spc3ee59; $spdd957a->type = $spdc3fe5; $spdd957a->discount_val = $spe6bab3; $spdd957a->discount_type = $spf449f1; if ($spdc3fe5 === \App\Coupon::TYPE_REPEAT) { $spdd957a->count_all = (int) $spd5cc4d->post('count_all', 1); if ($spdd957a->count_all < 1 || $spdd957a->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp906db8) { $spdd957a->expire_at = $sp906db8; } $spdd957a->saveOrFail(); } else { $sp011b8f = explode('
', $sp8c149f); for ($spb75665 = 0; $spb75665 < count($sp011b8f); $spb75665++) { $sp24364e = str_replace('', '', trim($sp011b8f[$spb75665])); $spdd957a = new \App\Coupon(); $spdd957a->coupon = $sp24364e; $spdd957a->category_id = $sp7b7cc9; $spdd957a->product_id = $spad8100; $spdd957a->status = $spc3ee59; $spdd957a->type = $spdc3fe5; $spdd957a->discount_val = $spe6bab3; $spdd957a->discount_type = $spf449f1; $sp011b8f[$spb75665] = $spdd957a; } \App\Product::find($spad8100)->coupons()->saveMany($sp011b8f); } return Response::success(); } function enable(Request $spd5cc4d) { $this->validate($spd5cc4d, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spf46353 = $spd5cc4d->post('ids'); $spd508cb = (int) $spd5cc4d->post('enabled'); $this->authQuery($spd5cc4d, \App\Coupon::class)->whereIn('id', explode(',', $spf46353))->update(array('enabled' => $spd508cb)); return Response::success(); } function delete(Request $spd5cc4d) { $this->validate($spd5cc4d, array('ids' => 'required|string')); $spf46353 = $spd5cc4d->post('ids'); $this->authQuery($spd5cc4d, \App\Coupon::class)->whereIn('id', explode(',', $spf46353))->delete(); return Response::success(); } }