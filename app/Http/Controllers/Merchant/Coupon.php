<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spfeab54) { $sp5786ca = $this->authQuery($spfeab54, \App\Coupon::class)->with(array('category' => function ($sp5786ca) { $sp5786ca->select(array('id', 'name')); }))->with(array('product' => function ($sp5786ca) { $sp5786ca->select(array('id', 'name')); })); $sped0aef = $spfeab54->post('search', false); $sp86d9ea = $spfeab54->post('val', false); if ($sped0aef && $sp86d9ea) { if ($sped0aef == 'id') { $sp5786ca->where('id', $sp86d9ea); } else { $sp5786ca->where($sped0aef, 'like', '%' . $sp86d9ea . '%'); } } $sp790613 = (int) $spfeab54->post('category_id'); $sp0e30a6 = $spfeab54->post('product_id', -1); if ($sp790613 > 0) { if ($sp0e30a6 > 0) { $sp5786ca->where('product_id', $sp0e30a6); } else { $sp5786ca->where('category_id', $sp790613); } } $sp7a9982 = $spfeab54->post('status'); if (strlen($sp7a9982)) { $sp5786ca->whereIn('status', explode(',', $sp7a9982)); } $sp8f5ac7 = $spfeab54->post('type'); if (strlen($sp8f5ac7)) { $sp5786ca->whereIn('type', explode(',', $sp8f5ac7)); } $sp5786ca->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spd5ff21 = $spfeab54->post('current_page', 1); $sp372a98 = $spfeab54->post('per_page', 20); $spaff91c = $sp5786ca->paginate($sp372a98, array('*'), 'page', $spd5ff21); return Response::success($spaff91c); } function create(Request $spfeab54) { $spfdb02a = $spfeab54->post('count', 0); $sp8f5ac7 = (int) $spfeab54->post('type', \App\Coupon::TYPE_ONETIME); $spfd6415 = $spfeab54->post('expire_at'); $sp4f286e = (int) $spfeab54->post('discount_val'); $spe83774 = (int) $spfeab54->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp894a06 = $spfeab54->post('remark'); if ($spe83774 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp4f286e < 1 || $sp4f286e > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spe83774 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp4f286e < 1 || $sp4f286e > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp790613 = (int) $spfeab54->post('category_id', -1); $sp0e30a6 = (int) $spfeab54->post('product_id', -1); if ($sp8f5ac7 === \App\Coupon::TYPE_REPEAT) { $spd5c9d2 = $spfeab54->post('coupon'); if (!$spd5c9d2) { $spd5c9d2 = strtoupper(str_random()); } $sp6fac42 = new \App\Coupon(); $sp6fac42->user_id = $this->getUserIdOrFail($spfeab54); $sp6fac42->category_id = $sp790613; $sp6fac42->product_id = $sp0e30a6; $sp6fac42->coupon = $spd5c9d2; $sp6fac42->type = $sp8f5ac7; $sp6fac42->discount_val = $sp4f286e; $sp6fac42->discount_type = $spe83774; $sp6fac42->count_all = (int) $spfeab54->post('count_all', 1); if ($sp6fac42->count_all < 1 || $sp6fac42->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp6fac42->expire_at = $spfd6415; $sp6fac42->saveOrFail(); return Response::success(array($sp6fac42->coupon)); } elseif ($sp8f5ac7 === \App\Coupon::TYPE_ONETIME) { if (!$spfdb02a) { return Response::forbidden('请输入生成数量'); } if ($spfdb02a > 100) { return Response::forbidden('每次生成不能大于100张'); } $spdacc62 = array(); $sp7d188b = array(); $spfa021e = $this->getUserIdOrFail($spfeab54); $sp3df13f = Carbon::now(); for ($spea591f = 0; $spea591f < $spfdb02a; $spea591f++) { $sp6fac42 = strtoupper(str_random()); $sp7d188b[] = $sp6fac42; $spdacc62[] = array('user_id' => $spfa021e, 'coupon' => $sp6fac42, 'category_id' => $sp790613, 'product_id' => $sp0e30a6, 'type' => $sp8f5ac7, 'discount_val' => $sp4f286e, 'discount_type' => $spe83774, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp894a06, 'created_at' => $sp3df13f, 'expire_at' => $spfd6415); } \App\Coupon::insert($spdacc62); return Response::success($sp7d188b); } else { return Response::forbidden('unknown type: ' . $sp8f5ac7); } } function edit(Request $spfeab54) { $sp53f8aa = (int) $spfeab54->post('id'); $spd5c9d2 = $spfeab54->post('coupon'); $sp790613 = (int) $spfeab54->post('category_id', -1); $sp0e30a6 = (int) $spfeab54->post('product_id', -1); $spfd6415 = $spfeab54->post('expire_at', NULL); $sp7a9982 = (int) $spfeab54->post('status', \App\Coupon::STATUS_NORMAL); $sp8f5ac7 = (int) $spfeab54->post('type', \App\Coupon::TYPE_ONETIME); $sp4f286e = (int) $spfeab54->post('discount_val'); $spe83774 = (int) $spfeab54->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spe83774 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp4f286e < 1 || $sp4f286e > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spe83774 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp4f286e < 1 || $sp4f286e > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp6fac42 = $this->authQuery($spfeab54, \App\Coupon::class)->find($sp53f8aa); if ($sp6fac42) { $sp6fac42->coupon = $spd5c9d2; $sp6fac42->category_id = $sp790613; $sp6fac42->product_id = $sp0e30a6; $sp6fac42->status = $sp7a9982; $sp6fac42->type = $sp8f5ac7; $sp6fac42->discount_val = $sp4f286e; $sp6fac42->discount_type = $spe83774; if ($sp8f5ac7 === \App\Coupon::TYPE_REPEAT) { $sp6fac42->count_all = (int) $spfeab54->post('count_all', 1); if ($sp6fac42->count_all < 1 || $sp6fac42->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spfd6415) { $sp6fac42->expire_at = $spfd6415; } $sp6fac42->saveOrFail(); } else { $spab71bc = explode('
', $spd5c9d2); for ($spea591f = 0; $spea591f < count($spab71bc); $spea591f++) { $spa388e1 = str_replace('', '', trim($spab71bc[$spea591f])); $sp6fac42 = new \App\Coupon(); $sp6fac42->coupon = $spa388e1; $sp6fac42->category_id = $sp790613; $sp6fac42->product_id = $sp0e30a6; $sp6fac42->status = $sp7a9982; $sp6fac42->type = $sp8f5ac7; $sp6fac42->discount_val = $sp4f286e; $sp6fac42->discount_type = $spe83774; $spab71bc[$spea591f] = $sp6fac42; } \App\Product::find($sp0e30a6)->coupons()->saveMany($spab71bc); } return Response::success(); } function enable(Request $spfeab54) { $this->validate($spfeab54, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spbd9db0 = $spfeab54->post('ids'); $sp17fe52 = (int) $spfeab54->post('enabled'); $this->authQuery($spfeab54, \App\Coupon::class)->whereIn('id', explode(',', $spbd9db0))->update(array('enabled' => $sp17fe52)); return Response::success(); } function delete(Request $spfeab54) { $this->validate($spfeab54, array('ids' => 'required|string')); $spbd9db0 = $spfeab54->post('ids'); $this->authQuery($spfeab54, \App\Coupon::class)->whereIn('id', explode(',', $spbd9db0))->delete(); return Response::success(); } }