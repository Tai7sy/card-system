<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spbaac90) { $sp50919b = $this->authQuery($spbaac90, \App\Coupon::class)->with(array('category' => function ($sp50919b) { $sp50919b->select(array('id', 'name')); }))->with(array('product' => function ($sp50919b) { $sp50919b->select(array('id', 'name')); })); $sp4d9eeb = $spbaac90->post('search', false); $spbd7375 = $spbaac90->post('val', false); if ($sp4d9eeb && $spbd7375) { if ($sp4d9eeb == 'id') { $sp50919b->where('id', $spbd7375); } else { $sp50919b->where($sp4d9eeb, 'like', '%' . $spbd7375 . '%'); } } $sp35f37e = (int) $spbaac90->post('category_id'); $sp1849cc = $spbaac90->post('product_id', -1); if ($sp35f37e > 0) { if ($sp1849cc > 0) { $sp50919b->where('product_id', $sp1849cc); } else { $sp50919b->where('category_id', $sp35f37e); } } $sp646c5e = $spbaac90->post('status'); if (strlen($sp646c5e)) { $sp50919b->whereIn('status', explode(',', $sp646c5e)); } $sp53ba26 = $spbaac90->post('type'); if (strlen($sp53ba26)) { $sp50919b->whereIn('type', explode(',', $sp53ba26)); } $sp50919b->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spb32f8f = $spbaac90->post('current_page', 1); $sp731c42 = $spbaac90->post('per_page', 20); $spd5d914 = $sp50919b->paginate($sp731c42, array('*'), 'page', $spb32f8f); return Response::success($spd5d914); } function create(Request $spbaac90) { $spe71595 = $spbaac90->post('count', 0); $sp53ba26 = (int) $spbaac90->post('type', \App\Coupon::TYPE_ONETIME); $sp43aaea = $spbaac90->post('expire_at'); $sp14e43b = (int) $spbaac90->post('discount_val'); $sp35b7fc = (int) $spbaac90->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp35802c = $spbaac90->post('remark'); if ($sp35b7fc === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp14e43b < 1 || $sp14e43b > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp35b7fc === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp14e43b < 1 || $sp14e43b > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp35f37e = (int) $spbaac90->post('category_id', -1); $sp1849cc = (int) $spbaac90->post('product_id', -1); if ($sp53ba26 === \App\Coupon::TYPE_REPEAT) { $spdfcf19 = $spbaac90->post('coupon'); if (!$spdfcf19) { $spdfcf19 = strtoupper(str_random()); } $spcfdfcc = new \App\Coupon(); $spcfdfcc->user_id = $this->getUserIdOrFail($spbaac90); $spcfdfcc->category_id = $sp35f37e; $spcfdfcc->product_id = $sp1849cc; $spcfdfcc->coupon = $spdfcf19; $spcfdfcc->type = $sp53ba26; $spcfdfcc->discount_val = $sp14e43b; $spcfdfcc->discount_type = $sp35b7fc; $spcfdfcc->count_all = (int) $spbaac90->post('count_all', 1); if ($spcfdfcc->count_all < 1 || $spcfdfcc->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spcfdfcc->expire_at = $sp43aaea; $spcfdfcc->saveOrFail(); return Response::success(array($spcfdfcc->coupon)); } elseif ($sp53ba26 === \App\Coupon::TYPE_ONETIME) { if (!$spe71595) { return Response::forbidden('请输入生成数量'); } if ($spe71595 > 100) { return Response::forbidden('每次生成不能大于100张'); } $spb38f3f = array(); $spb1cd62 = array(); $sp45cf7f = $this->getUserIdOrFail($spbaac90); $sp7b3ab6 = Carbon::now(); for ($sp626673 = 0; $sp626673 < $spe71595; $sp626673++) { $spcfdfcc = strtoupper(str_random()); $spb1cd62[] = $spcfdfcc; $spb38f3f[] = array('user_id' => $sp45cf7f, 'coupon' => $spcfdfcc, 'category_id' => $sp35f37e, 'product_id' => $sp1849cc, 'type' => $sp53ba26, 'discount_val' => $sp14e43b, 'discount_type' => $sp35b7fc, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp35802c, 'created_at' => $sp7b3ab6, 'expire_at' => $sp43aaea); } \App\Coupon::insert($spb38f3f); return Response::success($spb1cd62); } else { return Response::forbidden('unknown type: ' . $sp53ba26); } } function edit(Request $spbaac90) { $sp1ffc0e = (int) $spbaac90->post('id'); $spdfcf19 = $spbaac90->post('coupon'); $sp35f37e = (int) $spbaac90->post('category_id', -1); $sp1849cc = (int) $spbaac90->post('product_id', -1); $sp43aaea = $spbaac90->post('expire_at', NULL); $sp646c5e = (int) $spbaac90->post('status', \App\Coupon::STATUS_NORMAL); $sp53ba26 = (int) $spbaac90->post('type', \App\Coupon::TYPE_ONETIME); $sp14e43b = (int) $spbaac90->post('discount_val'); $sp35b7fc = (int) $spbaac90->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp35b7fc === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp14e43b < 1 || $sp14e43b > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp35b7fc === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp14e43b < 1 || $sp14e43b > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spcfdfcc = $this->authQuery($spbaac90, \App\Coupon::class)->find($sp1ffc0e); if ($spcfdfcc) { $spcfdfcc->coupon = $spdfcf19; $spcfdfcc->category_id = $sp35f37e; $spcfdfcc->product_id = $sp1849cc; $spcfdfcc->status = $sp646c5e; $spcfdfcc->type = $sp53ba26; $spcfdfcc->discount_val = $sp14e43b; $spcfdfcc->discount_type = $sp35b7fc; if ($sp53ba26 === \App\Coupon::TYPE_REPEAT) { $spcfdfcc->count_all = (int) $spbaac90->post('count_all', 1); if ($spcfdfcc->count_all < 1 || $spcfdfcc->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp43aaea) { $spcfdfcc->expire_at = $sp43aaea; } $spcfdfcc->saveOrFail(); } else { $spcc7537 = explode('
', $spdfcf19); for ($sp626673 = 0; $sp626673 < count($spcc7537); $sp626673++) { $sp845b48 = str_replace('', '', trim($spcc7537[$sp626673])); $spcfdfcc = new \App\Coupon(); $spcfdfcc->coupon = $sp845b48; $spcfdfcc->category_id = $sp35f37e; $spcfdfcc->product_id = $sp1849cc; $spcfdfcc->status = $sp646c5e; $spcfdfcc->type = $sp53ba26; $spcfdfcc->discount_val = $sp14e43b; $spcfdfcc->discount_type = $sp35b7fc; $spcc7537[$sp626673] = $spcfdfcc; } \App\Product::find($sp1849cc)->coupons()->saveMany($spcc7537); } return Response::success(); } function enable(Request $spbaac90) { $this->validate($spbaac90, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp2d798e = $spbaac90->post('ids'); $sped8f24 = (int) $spbaac90->post('enabled'); $this->authQuery($spbaac90, \App\Coupon::class)->whereIn('id', explode(',', $sp2d798e))->update(array('enabled' => $sped8f24)); return Response::success(); } function delete(Request $spbaac90) { $this->validate($spbaac90, array('ids' => 'required|string')); $sp2d798e = $spbaac90->post('ids'); $this->authQuery($spbaac90, \App\Coupon::class)->whereIn('id', explode(',', $sp2d798e))->delete(); return Response::success(); } }