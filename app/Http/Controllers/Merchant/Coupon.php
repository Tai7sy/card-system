<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spe5a184) { $spa8a4ff = $this->authQuery($spe5a184, \App\Coupon::class)->with(array('category' => function ($spa8a4ff) { $spa8a4ff->select(array('id', 'name')); }))->with(array('product' => function ($spa8a4ff) { $spa8a4ff->select(array('id', 'name')); })); $sp8336a0 = $spe5a184->input('search', false); $spdbda3a = $spe5a184->input('val', false); if ($sp8336a0 && $spdbda3a) { if ($sp8336a0 == 'id') { $spa8a4ff->where('id', $spdbda3a); } else { $spa8a4ff->where($sp8336a0, 'like', '%' . $spdbda3a . '%'); } } $sp23779d = (int) $spe5a184->input('category_id'); $sp89bb44 = $spe5a184->input('product_id', -1); if ($sp23779d > 0) { if ($sp89bb44 > 0) { $spa8a4ff->where('product_id', $sp89bb44); } else { $spa8a4ff->where('category_id', $sp23779d); } } $spaa7124 = $spe5a184->input('status'); if (strlen($spaa7124)) { $spa8a4ff->whereIn('status', explode(',', $spaa7124)); } $sp22f15e = $spe5a184->input('type'); if (strlen($sp22f15e)) { $spa8a4ff->whereIn('type', explode(',', $sp22f15e)); } $spa8a4ff->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp32b355 = (int) $spe5a184->input('current_page', 1); $sp048014 = (int) $spe5a184->input('per_page', 20); $spdf0cee = $spa8a4ff->paginate($sp048014, array('*'), 'page', $sp32b355); return Response::success($spdf0cee); } function create(Request $spe5a184) { $sp9154dd = $spe5a184->post('count', 0); $sp22f15e = (int) $spe5a184->post('type', \App\Coupon::TYPE_ONETIME); $sp3ee1ee = $spe5a184->post('expire_at'); $spfa3dd0 = (int) $spe5a184->post('discount_val'); $sp6b6e79 = (int) $spe5a184->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp267df6 = $spe5a184->post('remark'); if ($sp6b6e79 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spfa3dd0 < 1 || $spfa3dd0 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp6b6e79 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spfa3dd0 < 1 || $spfa3dd0 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp23779d = (int) $spe5a184->post('category_id', -1); $sp89bb44 = (int) $spe5a184->post('product_id', -1); if ($sp22f15e === \App\Coupon::TYPE_REPEAT) { $sp133cc3 = $spe5a184->post('coupon'); if (!$sp133cc3) { $sp133cc3 = strtoupper(str_random()); } $sp9cdc9f = new \App\Coupon(); $sp9cdc9f->user_id = $this->getUserIdOrFail($spe5a184); $sp9cdc9f->category_id = $sp23779d; $sp9cdc9f->product_id = $sp89bb44; $sp9cdc9f->coupon = $sp133cc3; $sp9cdc9f->type = $sp22f15e; $sp9cdc9f->discount_val = $spfa3dd0; $sp9cdc9f->discount_type = $sp6b6e79; $sp9cdc9f->count_all = (int) $spe5a184->post('count_all', 1); if ($sp9cdc9f->count_all < 1 || $sp9cdc9f->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp9cdc9f->expire_at = $sp3ee1ee; $sp9cdc9f->saveOrFail(); return Response::success(array($sp9cdc9f->coupon)); } elseif ($sp22f15e === \App\Coupon::TYPE_ONETIME) { if (!$sp9154dd) { return Response::forbidden('请输入生成数量'); } if ($sp9154dd > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp6219a1 = array(); $sp6eafb5 = array(); $sp7aa9af = $this->getUserIdOrFail($spe5a184); $sp4400c6 = Carbon::now(); for ($sp03f985 = 0; $sp03f985 < $sp9154dd; $sp03f985++) { $sp9cdc9f = strtoupper(str_random()); $sp6eafb5[] = $sp9cdc9f; $sp6219a1[] = array('user_id' => $sp7aa9af, 'coupon' => $sp9cdc9f, 'category_id' => $sp23779d, 'product_id' => $sp89bb44, 'type' => $sp22f15e, 'discount_val' => $spfa3dd0, 'discount_type' => $sp6b6e79, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp267df6, 'created_at' => $sp4400c6, 'expire_at' => $sp3ee1ee); } \App\Coupon::insert($sp6219a1); return Response::success($sp6eafb5); } else { return Response::forbidden('unknown type: ' . $sp22f15e); } } function edit(Request $spe5a184) { $spb3d6c6 = (int) $spe5a184->post('id'); $sp133cc3 = $spe5a184->post('coupon'); $sp23779d = (int) $spe5a184->post('category_id', -1); $sp89bb44 = (int) $spe5a184->post('product_id', -1); $sp3ee1ee = $spe5a184->post('expire_at', NULL); $spaa7124 = (int) $spe5a184->post('status', \App\Coupon::STATUS_NORMAL); $sp22f15e = (int) $spe5a184->post('type', \App\Coupon::TYPE_ONETIME); $spfa3dd0 = (int) $spe5a184->post('discount_val'); $sp6b6e79 = (int) $spe5a184->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp6b6e79 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spfa3dd0 < 1 || $spfa3dd0 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp6b6e79 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spfa3dd0 < 1 || $spfa3dd0 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp9cdc9f = $this->authQuery($spe5a184, \App\Coupon::class)->find($spb3d6c6); if ($sp9cdc9f) { $sp9cdc9f->coupon = $sp133cc3; $sp9cdc9f->category_id = $sp23779d; $sp9cdc9f->product_id = $sp89bb44; $sp9cdc9f->status = $spaa7124; $sp9cdc9f->type = $sp22f15e; $sp9cdc9f->discount_val = $spfa3dd0; $sp9cdc9f->discount_type = $sp6b6e79; if ($sp22f15e === \App\Coupon::TYPE_REPEAT) { $sp9cdc9f->count_all = (int) $spe5a184->post('count_all', 1); if ($sp9cdc9f->count_all < 1 || $sp9cdc9f->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp3ee1ee) { $sp9cdc9f->expire_at = $sp3ee1ee; } $sp9cdc9f->saveOrFail(); } else { $sp4aab01 = explode('
', $sp133cc3); for ($sp03f985 = 0; $sp03f985 < count($sp4aab01); $sp03f985++) { $sp37ccc0 = str_replace('', '', trim($sp4aab01[$sp03f985])); $sp9cdc9f = new \App\Coupon(); $sp9cdc9f->coupon = $sp37ccc0; $sp9cdc9f->category_id = $sp23779d; $sp9cdc9f->product_id = $sp89bb44; $sp9cdc9f->status = $spaa7124; $sp9cdc9f->type = $sp22f15e; $sp9cdc9f->discount_val = $spfa3dd0; $sp9cdc9f->discount_type = $sp6b6e79; $sp4aab01[$sp03f985] = $sp9cdc9f; } \App\Product::find($sp89bb44)->coupons()->saveMany($sp4aab01); } return Response::success(); } function enable(Request $spe5a184) { $this->validate($spe5a184, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp8152f4 = $spe5a184->post('ids'); $sp89bdae = (int) $spe5a184->post('enabled'); $this->authQuery($spe5a184, \App\Coupon::class)->whereIn('id', explode(',', $sp8152f4))->update(array('enabled' => $sp89bdae)); return Response::success(); } function delete(Request $spe5a184) { $this->validate($spe5a184, array('ids' => 'required|string')); $sp8152f4 = $spe5a184->post('ids'); $this->authQuery($spe5a184, \App\Coupon::class)->whereIn('id', explode(',', $sp8152f4))->delete(); return Response::success(); } }