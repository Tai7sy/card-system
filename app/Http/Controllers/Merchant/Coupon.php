<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp0aae4c) { $spb0a50e = $this->authQuery($sp0aae4c, \App\Coupon::class)->with(array('category' => function ($spb0a50e) { $spb0a50e->select(array('id', 'name')); }))->with(array('product' => function ($spb0a50e) { $spb0a50e->select(array('id', 'name')); })); $spb66be1 = $sp0aae4c->post('search', false); $spc82c62 = $sp0aae4c->post('val', false); if ($spb66be1 && $spc82c62) { if ($spb66be1 == 'id') { $spb0a50e->where('id', $spc82c62); } else { $spb0a50e->where($spb66be1, 'like', '%' . $spc82c62 . '%'); } } $sp18887c = (int) $sp0aae4c->post('category_id'); $sp2baf03 = $sp0aae4c->post('product_id', -1); if ($sp18887c > 0) { if ($sp2baf03 > 0) { $spb0a50e->where('product_id', $sp2baf03); } else { $spb0a50e->where('category_id', $sp18887c); } } $sp2e8268 = $sp0aae4c->post('status'); if (strlen($sp2e8268)) { $spb0a50e->whereIn('status', explode(',', $sp2e8268)); } $spaabe45 = $sp0aae4c->post('type'); if (strlen($spaabe45)) { $spb0a50e->whereIn('type', explode(',', $spaabe45)); } $spb0a50e->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp35a866 = $sp0aae4c->post('current_page', 1); $spa0426f = $sp0aae4c->post('per_page', 20); $sp4e4cfe = $spb0a50e->paginate($spa0426f, array('*'), 'page', $sp35a866); return Response::success($sp4e4cfe); } function create(Request $sp0aae4c) { $sp3bfbd2 = $sp0aae4c->post('count', 0); $spaabe45 = (int) $sp0aae4c->post('type', \App\Coupon::TYPE_ONETIME); $spe59183 = $sp0aae4c->post('expire_at'); $sp6fc075 = (int) $sp0aae4c->post('discount_val'); $spbcb319 = (int) $sp0aae4c->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $spf6348e = $sp0aae4c->post('remark'); if ($spbcb319 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp6fc075 < 1 || $sp6fc075 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spbcb319 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp6fc075 < 1 || $sp6fc075 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp18887c = (int) $sp0aae4c->post('category_id', -1); $sp2baf03 = (int) $sp0aae4c->post('product_id', -1); if ($spaabe45 === \App\Coupon::TYPE_REPEAT) { $spe01d85 = $sp0aae4c->post('coupon'); if (!$spe01d85) { $spe01d85 = strtoupper(str_random()); } $sp396447 = new \App\Coupon(); $sp396447->user_id = $this->getUserIdOrFail($sp0aae4c); $sp396447->category_id = $sp18887c; $sp396447->product_id = $sp2baf03; $sp396447->coupon = $spe01d85; $sp396447->type = $spaabe45; $sp396447->discount_val = $sp6fc075; $sp396447->discount_type = $spbcb319; $sp396447->count_all = (int) $sp0aae4c->post('count_all', 1); if ($sp396447->count_all < 1 || $sp396447->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp396447->expire_at = $spe59183; $sp396447->saveOrFail(); return Response::success(array($sp396447->coupon)); } elseif ($spaabe45 === \App\Coupon::TYPE_ONETIME) { if (!$sp3bfbd2) { return Response::forbidden('请输入生成数量'); } if ($sp3bfbd2 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp124ce4 = array(); $sp6bcb6a = array(); $sp9935c9 = $this->getUserIdOrFail($sp0aae4c); $spc00587 = Carbon::now(); for ($spda68a1 = 0; $spda68a1 < $sp3bfbd2; $spda68a1++) { $sp396447 = strtoupper(str_random()); $sp6bcb6a[] = $sp396447; $sp124ce4[] = array('user_id' => $sp9935c9, 'coupon' => $sp396447, 'category_id' => $sp18887c, 'product_id' => $sp2baf03, 'type' => $spaabe45, 'discount_val' => $sp6fc075, 'discount_type' => $spbcb319, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $spf6348e, 'created_at' => $spc00587, 'expire_at' => $spe59183); } \App\Coupon::insert($sp124ce4); return Response::success($sp6bcb6a); } else { return Response::forbidden('unknown type: ' . $spaabe45); } } function edit(Request $sp0aae4c) { $spaaa5c2 = (int) $sp0aae4c->post('id'); $spe01d85 = $sp0aae4c->post('coupon'); $sp18887c = (int) $sp0aae4c->post('category_id', -1); $sp2baf03 = (int) $sp0aae4c->post('product_id', -1); $spe59183 = $sp0aae4c->post('expire_at', NULL); $sp2e8268 = (int) $sp0aae4c->post('status', \App\Coupon::STATUS_NORMAL); $spaabe45 = (int) $sp0aae4c->post('type', \App\Coupon::TYPE_ONETIME); $sp6fc075 = (int) $sp0aae4c->post('discount_val'); $spbcb319 = (int) $sp0aae4c->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spbcb319 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp6fc075 < 1 || $sp6fc075 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spbcb319 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp6fc075 < 1 || $sp6fc075 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp396447 = $this->authQuery($sp0aae4c, \App\Coupon::class)->find($spaaa5c2); if ($sp396447) { $sp396447->coupon = $spe01d85; $sp396447->category_id = $sp18887c; $sp396447->product_id = $sp2baf03; $sp396447->status = $sp2e8268; $sp396447->type = $spaabe45; $sp396447->discount_val = $sp6fc075; $sp396447->discount_type = $spbcb319; if ($spaabe45 === \App\Coupon::TYPE_REPEAT) { $sp396447->count_all = (int) $sp0aae4c->post('count_all', 1); if ($sp396447->count_all < 1 || $sp396447->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spe59183) { $sp396447->expire_at = $spe59183; } $sp396447->saveOrFail(); } else { $speefede = explode('
', $spe01d85); for ($spda68a1 = 0; $spda68a1 < count($speefede); $spda68a1++) { $spb3a7be = str_replace('', '', trim($speefede[$spda68a1])); $sp396447 = new \App\Coupon(); $sp396447->coupon = $spb3a7be; $sp396447->category_id = $sp18887c; $sp396447->product_id = $sp2baf03; $sp396447->status = $sp2e8268; $sp396447->type = $spaabe45; $sp396447->discount_val = $sp6fc075; $sp396447->discount_type = $spbcb319; $speefede[$spda68a1] = $sp396447; } \App\Product::find($sp2baf03)->coupons()->saveMany($speefede); } return Response::success(); } function enable(Request $sp0aae4c) { $this->validate($sp0aae4c, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spcffd00 = $sp0aae4c->post('ids'); $sp22895e = (int) $sp0aae4c->post('enabled'); $this->authQuery($sp0aae4c, \App\Coupon::class)->whereIn('id', explode(',', $spcffd00))->update(array('enabled' => $sp22895e)); return Response::success(); } function delete(Request $sp0aae4c) { $this->validate($sp0aae4c, array('ids' => 'required|string')); $spcffd00 = $sp0aae4c->post('ids'); $this->authQuery($sp0aae4c, \App\Coupon::class)->whereIn('id', explode(',', $spcffd00))->delete(); return Response::success(); } }