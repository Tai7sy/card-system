<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spf066f3) { $sp5044a7 = $this->authQuery($spf066f3, \App\Coupon::class)->with(array('category' => function ($sp5044a7) { $sp5044a7->select(array('id', 'name')); }))->with(array('product' => function ($sp5044a7) { $sp5044a7->select(array('id', 'name')); })); $spca736c = $spf066f3->post('search', false); $sp56dec1 = $spf066f3->post('val', false); if ($spca736c && $sp56dec1) { if ($spca736c == 'id') { $sp5044a7->where('id', $sp56dec1); } else { $sp5044a7->where($spca736c, 'like', '%' . $sp56dec1 . '%'); } } $spe478dd = (int) $spf066f3->post('category_id'); $spbb5d29 = $spf066f3->post('product_id', -1); if ($spe478dd > 0) { if ($spbb5d29 > 0) { $sp5044a7->where('product_id', $spbb5d29); } else { $sp5044a7->where('category_id', $spe478dd); } } $sp27b58d = $spf066f3->post('status'); if (strlen($sp27b58d)) { $sp5044a7->whereIn('status', explode(',', $sp27b58d)); } $sp4f56c1 = $spf066f3->post('type'); if (strlen($sp4f56c1)) { $sp5044a7->whereIn('type', explode(',', $sp4f56c1)); } $sp5044a7->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp72b123 = $spf066f3->post('current_page', 1); $spcfcad4 = $spf066f3->post('per_page', 20); $sp293456 = $sp5044a7->paginate($spcfcad4, array('*'), 'page', $sp72b123); return Response::success($sp293456); } function create(Request $spf066f3) { $spdd51cd = $spf066f3->post('count', 0); $sp4f56c1 = (int) $spf066f3->post('type', \App\Coupon::TYPE_ONETIME); $spe84656 = $spf066f3->post('expire_at'); $spa6d6f0 = (int) $spf066f3->post('discount_val'); $spf42f1f = (int) $spf066f3->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp615115 = $spf066f3->post('remark'); if ($spf42f1f === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spa6d6f0 < 1 || $spa6d6f0 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spf42f1f === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spa6d6f0 < 1 || $spa6d6f0 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spe478dd = (int) $spf066f3->post('category_id', -1); $spbb5d29 = (int) $spf066f3->post('product_id', -1); if ($sp4f56c1 === \App\Coupon::TYPE_REPEAT) { $sp38c2cc = $spf066f3->post('coupon'); if (!$sp38c2cc) { $sp38c2cc = strtoupper(str_random()); } $sp9f96c5 = new \App\Coupon(); $sp9f96c5->user_id = $this->getUserIdOrFail($spf066f3); $sp9f96c5->category_id = $spe478dd; $sp9f96c5->product_id = $spbb5d29; $sp9f96c5->coupon = $sp38c2cc; $sp9f96c5->type = $sp4f56c1; $sp9f96c5->discount_val = $spa6d6f0; $sp9f96c5->discount_type = $spf42f1f; $sp9f96c5->count_all = (int) $spf066f3->post('count_all', 1); if ($sp9f96c5->count_all < 1 || $sp9f96c5->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp9f96c5->expire_at = $spe84656; $sp9f96c5->saveOrFail(); return Response::success(array($sp9f96c5->coupon)); } elseif ($sp4f56c1 === \App\Coupon::TYPE_ONETIME) { if (!$spdd51cd) { return Response::forbidden('请输入生成数量'); } if ($spdd51cd > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp659504 = array(); $sp3d4029 = array(); $sp15a746 = $this->getUserIdOrFail($spf066f3); $spdfb5de = Carbon::now(); for ($sp6b283c = 0; $sp6b283c < $spdd51cd; $sp6b283c++) { $sp9f96c5 = strtoupper(str_random()); $sp3d4029[] = $sp9f96c5; $sp659504[] = array('user_id' => $sp15a746, 'coupon' => $sp9f96c5, 'category_id' => $spe478dd, 'product_id' => $spbb5d29, 'type' => $sp4f56c1, 'discount_val' => $spa6d6f0, 'discount_type' => $spf42f1f, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp615115, 'created_at' => $spdfb5de, 'expire_at' => $spe84656); } \App\Coupon::insert($sp659504); return Response::success($sp3d4029); } else { return Response::forbidden('unknown type: ' . $sp4f56c1); } } function edit(Request $spf066f3) { $sp3c46ab = (int) $spf066f3->post('id'); $sp38c2cc = $spf066f3->post('coupon'); $spe478dd = (int) $spf066f3->post('category_id', -1); $spbb5d29 = (int) $spf066f3->post('product_id', -1); $spe84656 = $spf066f3->post('expire_at', NULL); $sp27b58d = (int) $spf066f3->post('status', \App\Coupon::STATUS_NORMAL); $sp4f56c1 = (int) $spf066f3->post('type', \App\Coupon::TYPE_ONETIME); $spa6d6f0 = (int) $spf066f3->post('discount_val'); $spf42f1f = (int) $spf066f3->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spf42f1f === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spa6d6f0 < 1 || $spa6d6f0 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spf42f1f === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spa6d6f0 < 1 || $spa6d6f0 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp9f96c5 = $this->authQuery($spf066f3, \App\Coupon::class)->find($sp3c46ab); if ($sp9f96c5) { $sp9f96c5->coupon = $sp38c2cc; $sp9f96c5->category_id = $spe478dd; $sp9f96c5->product_id = $spbb5d29; $sp9f96c5->status = $sp27b58d; $sp9f96c5->type = $sp4f56c1; $sp9f96c5->discount_val = $spa6d6f0; $sp9f96c5->discount_type = $spf42f1f; if ($sp4f56c1 === \App\Coupon::TYPE_REPEAT) { $sp9f96c5->count_all = (int) $spf066f3->post('count_all', 1); if ($sp9f96c5->count_all < 1 || $sp9f96c5->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spe84656) { $sp9f96c5->expire_at = $spe84656; } $sp9f96c5->saveOrFail(); } else { $spc3e8c0 = explode('
', $sp38c2cc); for ($sp6b283c = 0; $sp6b283c < count($spc3e8c0); $sp6b283c++) { $sp6fb42e = str_replace('', '', trim($spc3e8c0[$sp6b283c])); $sp9f96c5 = new \App\Coupon(); $sp9f96c5->coupon = $sp6fb42e; $sp9f96c5->category_id = $spe478dd; $sp9f96c5->product_id = $spbb5d29; $sp9f96c5->status = $sp27b58d; $sp9f96c5->type = $sp4f56c1; $sp9f96c5->discount_val = $spa6d6f0; $sp9f96c5->discount_type = $spf42f1f; $spc3e8c0[$sp6b283c] = $sp9f96c5; } \App\Product::find($spbb5d29)->coupons()->saveMany($spc3e8c0); } return Response::success(); } function enable(Request $spf066f3) { $this->validate($spf066f3, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp1f71d9 = $spf066f3->post('ids'); $sp4ec09d = (int) $spf066f3->post('enabled'); $this->authQuery($spf066f3, \App\Coupon::class)->whereIn('id', explode(',', $sp1f71d9))->update(array('enabled' => $sp4ec09d)); return Response::success(); } function delete(Request $spf066f3) { $this->validate($spf066f3, array('ids' => 'required|string')); $sp1f71d9 = $spf066f3->post('ids'); $this->authQuery($spf066f3, \App\Coupon::class)->whereIn('id', explode(',', $sp1f71d9))->delete(); return Response::success(); } }