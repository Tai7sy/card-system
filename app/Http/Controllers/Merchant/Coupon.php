<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spf09a96) { $sp40bc20 = $this->authQuery($spf09a96, \App\Coupon::class)->with(array('category' => function ($sp40bc20) { $sp40bc20->select(array('id', 'name')); }))->with(array('product' => function ($sp40bc20) { $sp40bc20->select(array('id', 'name')); })); $sp5974e9 = $spf09a96->input('search', false); $spc265e8 = $spf09a96->input('val', false); if ($sp5974e9 && $spc265e8) { if ($sp5974e9 == 'id') { $sp40bc20->where('id', $spc265e8); } else { $sp40bc20->where($sp5974e9, 'like', '%' . $spc265e8 . '%'); } } $sp8e3d37 = (int) $spf09a96->input('category_id'); $spb43b27 = $spf09a96->input('product_id', -1); if ($sp8e3d37 > 0) { if ($spb43b27 > 0) { $sp40bc20->where('product_id', $spb43b27); } else { $sp40bc20->where('category_id', $sp8e3d37); } } $spef96f9 = $spf09a96->input('status'); if (strlen($spef96f9)) { $sp40bc20->whereIn('status', explode(',', $spef96f9)); } $sp2add78 = $spf09a96->input('type'); if (strlen($sp2add78)) { $sp40bc20->whereIn('type', explode(',', $sp2add78)); } $sp40bc20->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp5b4065 = (int) $spf09a96->input('current_page', 1); $spe24165 = (int) $spf09a96->input('per_page', 20); $sp3fe1fa = $sp40bc20->paginate($spe24165, array('*'), 'page', $sp5b4065); return Response::success($sp3fe1fa); } function create(Request $spf09a96) { $sp88dd02 = $spf09a96->post('count', 0); $sp2add78 = (int) $spf09a96->post('type', \App\Coupon::TYPE_ONETIME); $spa0591e = $spf09a96->post('expire_at'); $spced654 = (int) $spf09a96->post('discount_val'); $spd0783e = (int) $spf09a96->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp92ada3 = $spf09a96->post('remark'); if ($spd0783e === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spced654 < 1 || $spced654 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spd0783e === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spced654 < 1 || $spced654 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp8e3d37 = (int) $spf09a96->post('category_id', -1); $spb43b27 = (int) $spf09a96->post('product_id', -1); if ($sp2add78 === \App\Coupon::TYPE_REPEAT) { $sp14e5be = $spf09a96->post('coupon'); if (!$sp14e5be) { $sp14e5be = strtoupper(str_random()); } $sp0b0874 = new \App\Coupon(); $sp0b0874->user_id = $this->getUserIdOrFail($spf09a96); $sp0b0874->category_id = $sp8e3d37; $sp0b0874->product_id = $spb43b27; $sp0b0874->coupon = $sp14e5be; $sp0b0874->type = $sp2add78; $sp0b0874->discount_val = $spced654; $sp0b0874->discount_type = $spd0783e; $sp0b0874->count_all = (int) $spf09a96->post('count_all', 1); if ($sp0b0874->count_all < 1 || $sp0b0874->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp0b0874->expire_at = $spa0591e; $sp0b0874->saveOrFail(); return Response::success(array($sp0b0874->coupon)); } elseif ($sp2add78 === \App\Coupon::TYPE_ONETIME) { if (!$sp88dd02) { return Response::forbidden('请输入生成数量'); } if ($sp88dd02 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp21c0b9 = array(); $sp37be22 = array(); $sp6738b1 = $this->getUserIdOrFail($spf09a96); $spa24ed0 = Carbon::now(); for ($sp02b863 = 0; $sp02b863 < $sp88dd02; $sp02b863++) { $sp0b0874 = strtoupper(str_random()); $sp37be22[] = $sp0b0874; $sp21c0b9[] = array('user_id' => $sp6738b1, 'coupon' => $sp0b0874, 'category_id' => $sp8e3d37, 'product_id' => $spb43b27, 'type' => $sp2add78, 'discount_val' => $spced654, 'discount_type' => $spd0783e, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp92ada3, 'created_at' => $spa24ed0, 'expire_at' => $spa0591e); } \App\Coupon::insert($sp21c0b9); return Response::success($sp37be22); } else { return Response::forbidden('unknown type: ' . $sp2add78); } } function edit(Request $spf09a96) { $spe8e527 = (int) $spf09a96->post('id'); $sp14e5be = $spf09a96->post('coupon'); $sp8e3d37 = (int) $spf09a96->post('category_id', -1); $spb43b27 = (int) $spf09a96->post('product_id', -1); $spa0591e = $spf09a96->post('expire_at', NULL); $spef96f9 = (int) $spf09a96->post('status', \App\Coupon::STATUS_NORMAL); $sp2add78 = (int) $spf09a96->post('type', \App\Coupon::TYPE_ONETIME); $spced654 = (int) $spf09a96->post('discount_val'); $spd0783e = (int) $spf09a96->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spd0783e === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($spced654 < 1 || $spced654 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spd0783e === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($spced654 < 1 || $spced654 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp0b0874 = $this->authQuery($spf09a96, \App\Coupon::class)->find($spe8e527); if ($sp0b0874) { $sp0b0874->coupon = $sp14e5be; $sp0b0874->category_id = $sp8e3d37; $sp0b0874->product_id = $spb43b27; $sp0b0874->status = $spef96f9; $sp0b0874->type = $sp2add78; $sp0b0874->discount_val = $spced654; $sp0b0874->discount_type = $spd0783e; if ($sp2add78 === \App\Coupon::TYPE_REPEAT) { $sp0b0874->count_all = (int) $spf09a96->post('count_all', 1); if ($sp0b0874->count_all < 1 || $sp0b0874->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($spa0591e) { $sp0b0874->expire_at = $spa0591e; } $sp0b0874->saveOrFail(); } else { $sp58a80a = explode('
', $sp14e5be); for ($sp02b863 = 0; $sp02b863 < count($sp58a80a); $sp02b863++) { $sp328eb9 = str_replace('', '', trim($sp58a80a[$sp02b863])); $sp0b0874 = new \App\Coupon(); $sp0b0874->coupon = $sp328eb9; $sp0b0874->category_id = $sp8e3d37; $sp0b0874->product_id = $spb43b27; $sp0b0874->status = $spef96f9; $sp0b0874->type = $sp2add78; $sp0b0874->discount_val = $spced654; $sp0b0874->discount_type = $spd0783e; $sp58a80a[$sp02b863] = $sp0b0874; } \App\Product::find($spb43b27)->coupons()->saveMany($sp58a80a); } return Response::success(); } function enable(Request $spf09a96) { $this->validate($spf09a96, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp864000 = $spf09a96->post('ids'); $spc7c736 = (int) $spf09a96->post('enabled'); $this->authQuery($spf09a96, \App\Coupon::class)->whereIn('id', explode(',', $sp864000))->update(array('enabled' => $spc7c736)); return Response::success(); } function delete(Request $spf09a96) { $this->validate($spf09a96, array('ids' => 'required|string')); $sp864000 = $spf09a96->post('ids'); $this->authQuery($spf09a96, \App\Coupon::class)->whereIn('id', explode(',', $sp864000))->delete(); return Response::success(); } }