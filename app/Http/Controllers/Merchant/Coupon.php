<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp517903) { $sp30241a = $this->authQuery($sp517903, \App\Coupon::class)->with(array('category' => function ($sp30241a) { $sp30241a->select(array('id', 'name')); }))->with(array('product' => function ($sp30241a) { $sp30241a->select(array('id', 'name')); })); $spee2f3d = $sp517903->input('search', false); $sp5d286a = $sp517903->input('val', false); if ($spee2f3d && $sp5d286a) { if ($spee2f3d == 'id') { $sp30241a->where('id', $sp5d286a); } else { $sp30241a->where($spee2f3d, 'like', '%' . $sp5d286a . '%'); } } $spc4a21e = (int) $sp517903->input('category_id'); $spb429e3 = $sp517903->input('product_id', -1); if ($spc4a21e > 0) { if ($spb429e3 > 0) { $sp30241a->where('product_id', $spb429e3); } else { $sp30241a->where('category_id', $spc4a21e); } } $sp0194a7 = $sp517903->input('status'); if (strlen($sp0194a7)) { $sp30241a->whereIn('status', explode(',', $sp0194a7)); } $sp22c639 = $sp517903->input('type'); if (strlen($sp22c639)) { $sp30241a->whereIn('type', explode(',', $sp22c639)); } $sp30241a->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp542adc = (int) $sp517903->input('current_page', 1); $spf40cb2 = (int) $sp517903->input('per_page', 20); $sp38cdfb = $sp30241a->paginate($spf40cb2, array('*'), 'page', $sp542adc); return Response::success($sp38cdfb); } function create(Request $sp517903) { $sp7aa4d7 = $sp517903->post('count', 0); $sp22c639 = (int) $sp517903->post('type', \App\Coupon::TYPE_ONETIME); $sp7f59c0 = $sp517903->post('expire_at'); $sp39f056 = (int) $sp517903->post('discount_val'); $sp3f34a2 = (int) $sp517903->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp178a23 = $sp517903->post('remark'); if ($sp3f34a2 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp39f056 < 1 || $sp39f056 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp3f34a2 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp39f056 < 1 || $sp39f056 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spc4a21e = (int) $sp517903->post('category_id', -1); $spb429e3 = (int) $sp517903->post('product_id', -1); if ($sp22c639 === \App\Coupon::TYPE_REPEAT) { $sp53e03c = $sp517903->post('coupon'); if (!$sp53e03c) { $sp53e03c = strtoupper(str_random()); } $spe4da60 = new \App\Coupon(); $spe4da60->user_id = $this->getUserIdOrFail($sp517903); $spe4da60->category_id = $spc4a21e; $spe4da60->product_id = $spb429e3; $spe4da60->coupon = $sp53e03c; $spe4da60->type = $sp22c639; $spe4da60->discount_val = $sp39f056; $spe4da60->discount_type = $sp3f34a2; $spe4da60->count_all = (int) $sp517903->post('count_all', 1); if ($spe4da60->count_all < 1 || $spe4da60->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spe4da60->expire_at = $sp7f59c0; $spe4da60->saveOrFail(); return Response::success(array($spe4da60->coupon)); } elseif ($sp22c639 === \App\Coupon::TYPE_ONETIME) { if (!$sp7aa4d7) { return Response::forbidden('请输入生成数量'); } if ($sp7aa4d7 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp1da1a4 = array(); $sp465240 = array(); $spacf00d = $this->getUserIdOrFail($sp517903); $spd6e1d6 = Carbon::now(); for ($sp1148f5 = 0; $sp1148f5 < $sp7aa4d7; $sp1148f5++) { $spe4da60 = strtoupper(str_random()); $sp465240[] = $spe4da60; $sp1da1a4[] = array('user_id' => $spacf00d, 'coupon' => $spe4da60, 'category_id' => $spc4a21e, 'product_id' => $spb429e3, 'type' => $sp22c639, 'discount_val' => $sp39f056, 'discount_type' => $sp3f34a2, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp178a23, 'created_at' => $spd6e1d6, 'expire_at' => $sp7f59c0); } \App\Coupon::insert($sp1da1a4); return Response::success($sp465240); } else { return Response::forbidden('unknown type: ' . $sp22c639); } } function edit(Request $sp517903) { $spd5afc6 = (int) $sp517903->post('id'); $sp53e03c = $sp517903->post('coupon'); $spc4a21e = (int) $sp517903->post('category_id', -1); $spb429e3 = (int) $sp517903->post('product_id', -1); $sp7f59c0 = $sp517903->post('expire_at', NULL); $sp0194a7 = (int) $sp517903->post('status', \App\Coupon::STATUS_NORMAL); $sp22c639 = (int) $sp517903->post('type', \App\Coupon::TYPE_ONETIME); $sp39f056 = (int) $sp517903->post('discount_val'); $sp3f34a2 = (int) $sp517903->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp3f34a2 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp39f056 < 1 || $sp39f056 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp3f34a2 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp39f056 < 1 || $sp39f056 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spe4da60 = $this->authQuery($sp517903, \App\Coupon::class)->find($spd5afc6); if ($spe4da60) { $spe4da60->coupon = $sp53e03c; $spe4da60->category_id = $spc4a21e; $spe4da60->product_id = $spb429e3; $spe4da60->status = $sp0194a7; $spe4da60->type = $sp22c639; $spe4da60->discount_val = $sp39f056; $spe4da60->discount_type = $sp3f34a2; if ($sp22c639 === \App\Coupon::TYPE_REPEAT) { $spe4da60->count_all = (int) $sp517903->post('count_all', 1); if ($spe4da60->count_all < 1 || $spe4da60->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp7f59c0) { $spe4da60->expire_at = $sp7f59c0; } $spe4da60->saveOrFail(); } else { $sp9b1a57 = explode('
', $sp53e03c); for ($sp1148f5 = 0; $sp1148f5 < count($sp9b1a57); $sp1148f5++) { $spbc885b = str_replace('', '', trim($sp9b1a57[$sp1148f5])); $spe4da60 = new \App\Coupon(); $spe4da60->coupon = $spbc885b; $spe4da60->category_id = $spc4a21e; $spe4da60->product_id = $spb429e3; $spe4da60->status = $sp0194a7; $spe4da60->type = $sp22c639; $spe4da60->discount_val = $sp39f056; $spe4da60->discount_type = $sp3f34a2; $sp9b1a57[$sp1148f5] = $spe4da60; } \App\Product::find($spb429e3)->coupons()->saveMany($sp9b1a57); } return Response::success(); } function enable(Request $sp517903) { $this->validate($sp517903, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp315ad7 = $sp517903->post('ids'); $spb38401 = (int) $sp517903->post('enabled'); $this->authQuery($sp517903, \App\Coupon::class)->whereIn('id', explode(',', $sp315ad7))->update(array('enabled' => $spb38401)); return Response::success(); } function delete(Request $sp517903) { $this->validate($sp517903, array('ids' => 'required|string')); $sp315ad7 = $sp517903->post('ids'); $this->authQuery($sp517903, \App\Coupon::class)->whereIn('id', explode(',', $sp315ad7))->delete(); return Response::success(); } }