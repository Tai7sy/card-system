<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $spccbfb6) { $sp479bde = $this->authQuery($spccbfb6, \App\Coupon::class)->with(array('category' => function ($sp479bde) { $sp479bde->select(array('id', 'name')); }))->with(array('product' => function ($sp479bde) { $sp479bde->select(array('id', 'name')); })); $sp6f5fd7 = $spccbfb6->input('search', false); $spc4b2f5 = $spccbfb6->input('val', false); if ($sp6f5fd7 && $spc4b2f5) { if ($sp6f5fd7 == 'id') { $sp479bde->where('id', $spc4b2f5); } else { $sp479bde->where($sp6f5fd7, 'like', '%' . $spc4b2f5 . '%'); } } $sp76eadf = (int) $spccbfb6->input('category_id'); $spa981f6 = $spccbfb6->input('product_id', -1); if ($sp76eadf > 0) { if ($spa981f6 > 0) { $sp479bde->where('product_id', $spa981f6); } else { $sp479bde->where('category_id', $sp76eadf); } } $spfe6f53 = $spccbfb6->input('status'); if (strlen($spfe6f53)) { $sp479bde->whereIn('status', explode(',', $spfe6f53)); } $sp55be16 = $spccbfb6->input('type'); if (strlen($sp55be16)) { $sp479bde->whereIn('type', explode(',', $sp55be16)); } $sp479bde->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp1e473f = (int) $spccbfb6->input('current_page', 1); $sped1e1d = (int) $spccbfb6->input('per_page', 20); $sp7d3bbd = $sp479bde->paginate($sped1e1d, array('*'), 'page', $sp1e473f); return Response::success($sp7d3bbd); } function create(Request $spccbfb6) { $spc2ebcd = $spccbfb6->post('count', 0); $sp55be16 = (int) $spccbfb6->post('type', \App\Coupon::TYPE_ONETIME); $speceee6 = $spccbfb6->post('expire_at'); $sp21b5bd = (int) $spccbfb6->post('discount_val'); $spcfe3b6 = (int) $spccbfb6->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp84159d = $spccbfb6->post('remark'); if ($spcfe3b6 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp21b5bd < 1 || $sp21b5bd > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spcfe3b6 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp21b5bd < 1 || $sp21b5bd > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp76eadf = (int) $spccbfb6->post('category_id', -1); $spa981f6 = (int) $spccbfb6->post('product_id', -1); if ($sp55be16 === \App\Coupon::TYPE_REPEAT) { $spa389e8 = $spccbfb6->post('coupon'); if (!$spa389e8) { $spa389e8 = strtoupper(str_random()); } $spbae5bf = new \App\Coupon(); $spbae5bf->user_id = $this->getUserIdOrFail($spccbfb6); $spbae5bf->category_id = $sp76eadf; $spbae5bf->product_id = $spa981f6; $spbae5bf->coupon = $spa389e8; $spbae5bf->type = $sp55be16; $spbae5bf->discount_val = $sp21b5bd; $spbae5bf->discount_type = $spcfe3b6; $spbae5bf->count_all = (int) $spccbfb6->post('count_all', 1); if ($spbae5bf->count_all < 1 || $spbae5bf->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spbae5bf->expire_at = $speceee6; $spbae5bf->saveOrFail(); return Response::success(array($spbae5bf->coupon)); } elseif ($sp55be16 === \App\Coupon::TYPE_ONETIME) { if (!$spc2ebcd) { return Response::forbidden('请输入生成数量'); } if ($spc2ebcd > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp44a76a = array(); $sp6e6f91 = array(); $spe58da5 = $this->getUserIdOrFail($spccbfb6); $spf04881 = Carbon::now(); for ($spa4cc2a = 0; $spa4cc2a < $spc2ebcd; $spa4cc2a++) { $spbae5bf = strtoupper(str_random()); $sp6e6f91[] = $spbae5bf; $sp44a76a[] = array('user_id' => $spe58da5, 'coupon' => $spbae5bf, 'category_id' => $sp76eadf, 'product_id' => $spa981f6, 'type' => $sp55be16, 'discount_val' => $sp21b5bd, 'discount_type' => $spcfe3b6, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp84159d, 'created_at' => $spf04881, 'expire_at' => $speceee6); } \App\Coupon::insert($sp44a76a); return Response::success($sp6e6f91); } else { return Response::forbidden('unknown type: ' . $sp55be16); } } function edit(Request $spccbfb6) { $spbf68a1 = (int) $spccbfb6->post('id'); $spa389e8 = $spccbfb6->post('coupon'); $sp76eadf = (int) $spccbfb6->post('category_id', -1); $spa981f6 = (int) $spccbfb6->post('product_id', -1); $speceee6 = $spccbfb6->post('expire_at', NULL); $spfe6f53 = (int) $spccbfb6->post('status', \App\Coupon::STATUS_NORMAL); $sp55be16 = (int) $spccbfb6->post('type', \App\Coupon::TYPE_ONETIME); $sp21b5bd = (int) $spccbfb6->post('discount_val'); $spcfe3b6 = (int) $spccbfb6->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($spcfe3b6 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp21b5bd < 1 || $sp21b5bd > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($spcfe3b6 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp21b5bd < 1 || $sp21b5bd > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spbae5bf = $this->authQuery($spccbfb6, \App\Coupon::class)->find($spbf68a1); if ($spbae5bf) { $spbae5bf->coupon = $spa389e8; $spbae5bf->category_id = $sp76eadf; $spbae5bf->product_id = $spa981f6; $spbae5bf->status = $spfe6f53; $spbae5bf->type = $sp55be16; $spbae5bf->discount_val = $sp21b5bd; $spbae5bf->discount_type = $spcfe3b6; if ($sp55be16 === \App\Coupon::TYPE_REPEAT) { $spbae5bf->count_all = (int) $spccbfb6->post('count_all', 1); if ($spbae5bf->count_all < 1 || $spbae5bf->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($speceee6) { $spbae5bf->expire_at = $speceee6; } $spbae5bf->saveOrFail(); } else { $spebcf33 = explode('
', $spa389e8); for ($spa4cc2a = 0; $spa4cc2a < count($spebcf33); $spa4cc2a++) { $sp1405ff = str_replace('', '', trim($spebcf33[$spa4cc2a])); $spbae5bf = new \App\Coupon(); $spbae5bf->coupon = $sp1405ff; $spbae5bf->category_id = $sp76eadf; $spbae5bf->product_id = $spa981f6; $spbae5bf->status = $spfe6f53; $spbae5bf->type = $sp55be16; $spbae5bf->discount_val = $sp21b5bd; $spbae5bf->discount_type = $spcfe3b6; $spebcf33[$spa4cc2a] = $spbae5bf; } \App\Product::find($spa981f6)->coupons()->saveMany($spebcf33); } return Response::success(); } function enable(Request $spccbfb6) { $this->validate($spccbfb6, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spdf2438 = $spccbfb6->post('ids'); $sp64a3d6 = (int) $spccbfb6->post('enabled'); $this->authQuery($spccbfb6, \App\Coupon::class)->whereIn('id', explode(',', $spdf2438))->update(array('enabled' => $sp64a3d6)); return Response::success(); } function delete(Request $spccbfb6) { $this->validate($spccbfb6, array('ids' => 'required|string')); $spdf2438 = $spccbfb6->post('ids'); $this->authQuery($spccbfb6, \App\Coupon::class)->whereIn('id', explode(',', $spdf2438))->delete(); return Response::success(); } }