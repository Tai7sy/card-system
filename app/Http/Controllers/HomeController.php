<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp21e2d0, $sp0ff930 = null, $sp7eba0d = null) { $speeef4e = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $speeef4e['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $speeef4e['functions'][] = 'mail_send_order'; if (System::_getInt('mail_send_order_use_contact')) { $speeef4e['functions'][] = 'mail_send_order_use_contact'; } } if (System::_getInt('sms_send_order')) { $speeef4e['functions'][] = 'sms_send_order'; $speeef4e['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $speeef4e['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($sp7eba0d) { $sp0ff930->setVisible(array('id', 'name', 'password_open')); if ($sp0ff930->password_open) { $sp0ff930->setAttribute('password', $sp0ff930->getTmpPassword()); $sp0ff930->addVisible(array('password')); } $sp7eba0d->setForShop($sp21e2d0); $speeef4e['categories'] = array($sp0ff930); $speeef4e['product'] = $sp7eba0d; $sp4c25fd = $sp7eba0d->name . ' - ' . $speeef4e['name']; $sp4ba6f8 = $sp7eba0d->description; if (@$sp4ba6f8[0] === '{') { $sp27278d = array(); preg_match_all('/"insert":"(.+?)"/', $sp4ba6f8, $sp27278d); $sp4ba6f8 = str_replace('\\n', ' ', @join(' ', $sp27278d[1])); } } elseif ($sp0ff930) { $sp0ff930->setVisible(array('id', 'name', 'password_open')); $speeef4e['categories'] = array($sp0ff930); $speeef4e['product'] = null; $sp4c25fd = $sp0ff930->name . ' - ' . $speeef4e['name']; $sp4ba6f8 = $sp0ff930->name; } else { $sp65839b = Category::where('user_id', $sp21e2d0->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp65839b as $sp0ff930) { $sp0ff930->setVisible(array('id', 'name', 'password_open')); } $speeef4e['categories'] = $sp65839b; $sp4c25fd = $speeef4e['name']; $sp4ba6f8 = $speeef4e['shop']['ann']; if (@$sp4ba6f8[0] === '{') { $sp27278d = array(); preg_match_all('/"insert":"(.+?)"/', $sp4ba6f8, $sp27278d); $sp4ba6f8 = str_replace('\\n', ' ', @join(' ', $sp27278d[1])); } } $speeef4e['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($speeef4e['vcode']['driver'] === 'geetest' && ($speeef4e['vcode'] || $speeef4e['search'])) { $speeef4e['vcode']['geetest'] = Geetest\API::get(); } $speeef4e['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $spddaf27 = Cookie::get('customer'); $spcf0e4b = Cookie::make('customer', strlen($spddaf27) !== 32 ? md5(str_random(16)) : $spddaf27, 43200, null, null, false, false); $spd76f17 = null; if (isset($_GET['theme'])) { $spd76f17 = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$spd76f17) { $spd76f17 = \App\ShopTheme::defaultTheme(); } $speeef4e['theme'] = $sp21e2d0->theme_config && isset($sp21e2d0->theme_config[$spd76f17->name]) ? $sp21e2d0->theme_config[$spd76f17->name] : $spd76f17->config; if (isset($speeef4e['theme']['background']) && $speeef4e['theme']['background'] === '内置1') { $speeef4e['theme']['background'] = Helper::b1_rand_background(); } if ($sp7eba0d === null) { if (@$speeef4e['theme']['list_type'] === 'list') { foreach ($speeef4e['categories'] as $spb3303f) { if (!$spb3303f->password_open) { $spb3303f->getProductsForShop(); } } } else { if (count($speeef4e['categories']) === 1) { $spb3303f = $speeef4e['categories'][0]; if (!$spb3303f->password_open) { $spb3303f->getProductsForShop(); } } } } return response()->view('shop_theme.' . $spd76f17->name . '.index', array('name' => $sp4c25fd, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp4c25fd), 'description' => $sp4ba6f8, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $speeef4e))->cookie($spcf0e4b); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $spfb5ae3) { $sp4d0492 = $spfb5ae3->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $sp4d0492); } public function shop_category($sp8b3dd4) { $this->checkIsInMaintain(); $sp0ff930 = Category::whereId(Helper::id_decode($sp8b3dd4, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$sp0ff930 && is_numeric($sp0ff930)) { $sp0ff930 = Category::whereId($sp8b3dd4)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp0ff930) { return $this->_shop_404(); } return $this->_shop_render($sp0ff930->user, $sp0ff930); } public function shop_product(Request $spfb5ae3, $sp7c6a3f) { $this->checkIsInMaintain(); $sp7eba0d = Product::whereId(Helper::id_decode($sp7c6a3f, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$sp7eba0d && is_numeric($sp7c6a3f)) { $sp7eba0d = Product::whereId($sp7c6a3f)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$sp7eba0d || !$sp7eba0d->category) { return $this->_shop_404(); } if ($sp7eba0d->password_open && $sp7eba0d->password !== $spfb5ae3->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($spfb5ae3->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($sp7eba0d->user, $sp7eba0d->category, $sp7eba0d); } public function shop() { $this->checkIsInMaintain(); $sp21e2d0 = User::firstOrFail(); return $this->_shop_render($sp21e2d0); } public function admin() { $speeef4e = array(); $speeef4e['url'] = config('app.url'); if (System::_getInt('product_manual')) { $speeef4e['functions'] = array('product_manual'); } $speeef4e['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($speeef4e['vcode']['driver'] === 'geetest') { $speeef4e['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $speeef4e)); } }