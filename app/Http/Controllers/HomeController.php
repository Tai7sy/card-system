<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spafa70b, $spb7fea4 = null, $sp71cb0c = null) { $spbe80b7 = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $spbe80b7['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $spbe80b7['functions'][] = 'mail_send_order'; } if (System::_getInt('sms_send_order')) { $spbe80b7['functions'][] = 'sms_send_order'; $spbe80b7['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $spbe80b7['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($sp71cb0c) { $spb7fea4->setVisible(array('id', 'name', 'password_open')); if ($spb7fea4->password_open) { $spb7fea4->setAttribute('password', $spb7fea4->getTmpPassword()); $spb7fea4->addVisible(array('password')); } $sp71cb0c->setForShop($spafa70b); $spbe80b7['categories'] = array($spb7fea4); $spbe80b7['product'] = $sp71cb0c; $sp505b52 = $sp71cb0c->name . ' - ' . $spbe80b7['name']; $sp86f371 = $sp71cb0c->description; if (@$sp86f371[0] === '{') { $sp14bc95 = array(); preg_match_all('/"insert":"(.+?)"/', $sp86f371, $sp14bc95); $sp86f371 = str_replace('\\n', ' ', @join(' ', $sp14bc95[1])); } } elseif ($spb7fea4) { $spb7fea4->setVisible(array('id', 'name', 'password_open')); $spbe80b7['categories'] = array($spb7fea4); $spbe80b7['product'] = null; $sp505b52 = $spb7fea4->name . ' - ' . $spbe80b7['name']; $sp86f371 = $spb7fea4->name; } else { $sp9d81c0 = Category::where('user_id', $spafa70b->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp9d81c0 as $spb7fea4) { $spb7fea4->setVisible(array('id', 'name', 'password_open')); } $spbe80b7['categories'] = $sp9d81c0; $sp505b52 = $spbe80b7['name']; $sp86f371 = $spbe80b7['shop']['ann']; if (@$sp86f371[0] === '{') { $sp14bc95 = array(); preg_match_all('/"insert":"(.+?)"/', $sp86f371, $sp14bc95); $sp86f371 = str_replace('\\n', ' ', @join(' ', $sp14bc95[1])); } } $spbe80b7['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($spbe80b7['vcode']['driver'] === 'geetest' && ($spbe80b7['vcode'] || $spbe80b7['search'])) { $spbe80b7['vcode']['geetest'] = Geetest\API::get(); } $spbe80b7['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp0daafb = Cookie::get('customer'); $spe0ae41 = Cookie::make('customer', strlen($sp0daafb) !== 32 ? md5(str_random(16)) : $sp0daafb, 43200, null, null, false, false); $sp1f7915 = null; if (isset($_GET['theme'])) { $sp1f7915 = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$sp1f7915) { $sp1f7915 = \App\ShopTheme::defaultTheme(); } $spbe80b7['theme'] = $spafa70b->theme_config && isset($spafa70b->theme_config[$sp1f7915->name]) ? $spafa70b->theme_config[$sp1f7915->name] : $sp1f7915->config; if (isset($spbe80b7['theme']['background']) && $spbe80b7['theme']['background'] === '内置1') { $spbe80b7['theme']['background'] = Helper::b1_rand_background(); } if ($sp71cb0c === null) { if (@$spbe80b7['theme']['list_type'] === 'list') { foreach ($spbe80b7['categories'] as $sp654541) { if (!$sp654541->password_open) { $sp654541->getProductsForShop(); } } } else { if (count($spbe80b7['categories']) === 1) { $sp654541 = $spbe80b7['categories'][0]; if (!$sp654541->password_open) { $sp654541->getProductsForShop(); } } } } return response()->view('shop_theme.' . $sp1f7915->name . '.index', array('name' => $sp505b52, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp505b52), 'description' => $sp86f371, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $spbe80b7))->cookie($spe0ae41); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $spfeab54) { $spbdce12 = $spfeab54->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $spbdce12); } public function shop_category($spf7b7a7) { $this->checkIsInMaintain(); $spb7fea4 = Category::whereId(Helper::id_decode($spf7b7a7, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$spb7fea4 && is_numeric($spb7fea4)) { $spb7fea4 = Category::whereId($spf7b7a7)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$spb7fea4) { return $this->_shop_404(); } return $this->_shop_render($spb7fea4->user, $spb7fea4); } public function shop_product(Request $spfeab54, $spcf462f) { $this->checkIsInMaintain(); $sp71cb0c = Product::whereId(Helper::id_decode($spcf462f, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$sp71cb0c && is_numeric($spcf462f)) { $sp71cb0c = Product::whereId($spcf462f)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$sp71cb0c || !$sp71cb0c->category) { return $this->_shop_404(); } if ($sp71cb0c->password_open && $sp71cb0c->password !== $spfeab54->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($spfeab54->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($sp71cb0c->user, $sp71cb0c->category, $sp71cb0c); } public function shop() { $this->checkIsInMaintain(); $spafa70b = User::firstOrFail(); return $this->_shop_render($spafa70b); } public function admin() { $spbe80b7 = array(); $spbe80b7['url'] = config('app.url'); if (System::_getInt('product_manual')) { $spbe80b7['functions'] = array('product_manual'); } $spbe80b7['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($spbe80b7['vcode']['driver'] === 'geetest') { $spbe80b7['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $spbe80b7)); } }