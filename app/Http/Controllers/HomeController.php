<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp85e034, $spbbde80 = null, $spb0646a = null) { $sp8b174b = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $sp8b174b['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $sp8b174b['functions'][] = 'mail_send_order'; if (System::_getInt('mail_send_order_use_contact')) { $sp8b174b['functions'][] = 'mail_send_order_use_contact'; } } if (System::_getInt('sms_send_order')) { $sp8b174b['functions'][] = 'sms_send_order'; $sp8b174b['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $sp8b174b['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($spb0646a) { $spbbde80->setVisible(array('id', 'name', 'password_open')); if ($spbbde80->password_open) { $spbbde80->setAttribute('password', $spbbde80->getTmpPassword()); $spbbde80->addVisible(array('password')); } $spb0646a->setForShop($sp85e034); $sp8b174b['categories'] = array($spbbde80); $sp8b174b['product'] = $spb0646a; $sp7961e5 = $spb0646a->name . ' - ' . $sp8b174b['name']; $sp7d858c = $spb0646a->description; if (@$sp7d858c[0] === '{') { $sp2dae6f = array(); preg_match_all('/"insert":"(.+?)"/', $sp7d858c, $sp2dae6f); $sp7d858c = str_replace('\\n', ' ', @join(' ', $sp2dae6f[1])); } } elseif ($spbbde80) { $spbbde80->setVisible(array('id', 'name', 'password_open')); $sp8b174b['categories'] = array($spbbde80); $sp8b174b['product'] = null; $sp7961e5 = $spbbde80->name . ' - ' . $sp8b174b['name']; $sp7d858c = $spbbde80->name; } else { $sp5ff6c9 = Category::where('user_id', $sp85e034->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp5ff6c9 as $spbbde80) { $spbbde80->setVisible(array('id', 'name', 'password_open')); } $sp8b174b['categories'] = $sp5ff6c9; $sp7961e5 = $sp8b174b['name']; $sp7d858c = $sp8b174b['shop']['ann']; if (@$sp7d858c[0] === '{') { $sp2dae6f = array(); preg_match_all('/"insert":"(.+?)"/', $sp7d858c, $sp2dae6f); $sp7d858c = str_replace('\\n', ' ', @join(' ', $sp2dae6f[1])); } } $sp8b174b['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp8b174b['vcode']['driver'] === 'geetest' && ($sp8b174b['vcode'] || $sp8b174b['search'])) { $sp8b174b['vcode']['geetest'] = Geetest\API::get(); } $sp8b174b['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp2cdf6e = Cookie::get('customer'); $spb6e91a = Cookie::make('customer', strlen($sp2cdf6e) !== 32 ? md5(str_random(16)) : $sp2cdf6e, 43200, null, null, false, false); $sp3655b5 = null; if (isset($_GET['theme'])) { $sp3655b5 = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$sp3655b5) { $sp3655b5 = \App\ShopTheme::defaultTheme(); } $sp8b174b['theme'] = $sp85e034->theme_config && isset($sp85e034->theme_config[$sp3655b5->name]) ? $sp85e034->theme_config[$sp3655b5->name] : $sp3655b5->config; if (isset($sp8b174b['theme']['background']) && $sp8b174b['theme']['background'] === '内置1') { $sp8b174b['theme']['background'] = Helper::b1_rand_background(); } if ($spb0646a === null) { if (@$sp8b174b['theme']['list_type'] === 'list') { foreach ($sp8b174b['categories'] as $spcb837b) { if (!$spcb837b->password_open) { $spcb837b->getProductsForShop(); } } } else { if (count($sp8b174b['categories']) === 1) { $spcb837b = $sp8b174b['categories'][0]; if (!$spcb837b->password_open) { $spcb837b->getProductsForShop(); } } } } return response()->view('shop_theme.' . $sp3655b5->name . '.index', array('name' => $sp7961e5, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp7961e5), 'description' => $sp7d858c, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp8b174b))->cookie($spb6e91a); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $sp7fb11a) { $sp6d898e = $sp7fb11a->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $sp6d898e); } public function shop_category($sp4dcf50) { $this->checkIsInMaintain(); $spbbde80 = Category::whereId(Helper::id_decode($sp4dcf50, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$spbbde80 && is_numeric($spbbde80)) { $spbbde80 = Category::whereId($sp4dcf50)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$spbbde80) { return $this->_shop_404(); } return $this->_shop_render($spbbde80->user, $spbbde80); } public function shop_product(Request $sp7fb11a, $sp962cee) { $this->checkIsInMaintain(); $spb0646a = Product::whereId(Helper::id_decode($sp962cee, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$spb0646a && is_numeric($sp962cee)) { $spb0646a = Product::whereId($sp962cee)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$spb0646a || !$spb0646a->category) { return $this->_shop_404(); } if ($spb0646a->password_open && $spb0646a->password !== $sp7fb11a->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($sp7fb11a->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($spb0646a->user, $spb0646a->category, $spb0646a); } public function shop() { $this->checkIsInMaintain(); $sp85e034 = User::firstOrFail(); return $this->_shop_render($sp85e034); } public function admin() { $sp8b174b = array(); $sp8b174b['url'] = config('app.url'); if (System::_getInt('product_manual')) { $sp8b174b['functions'] = array('product_manual'); } $sp8b174b['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($sp8b174b['vcode']['driver'] === 'geetest') { $sp8b174b['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp8b174b)); } }