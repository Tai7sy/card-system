<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp16b781, $sp1012fd = null, $sp48b1b0 = null) { $sp8ba223 = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $sp8ba223['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $sp8ba223['functions'][] = 'mail_send_order'; if (System::_getInt('mail_send_order_use_contact')) { $sp8ba223['functions'][] = 'mail_send_order_use_contact'; } } if (System::_getInt('sms_send_order')) { $sp8ba223['functions'][] = 'sms_send_order'; $sp8ba223['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $sp8ba223['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($sp48b1b0) { $sp1012fd->setVisible(array('id', 'name', 'password_open')); if ($sp1012fd->password_open) { $sp1012fd->setAttribute('password', $sp1012fd->getTmpPassword()); $sp1012fd->addVisible(array('password')); } $sp48b1b0->setForShop($sp16b781); $sp8ba223['categories'] = array($sp1012fd); $sp8ba223['product'] = $sp48b1b0; $spb6a91a = $sp48b1b0->name . ' - ' . $sp8ba223['name']; $sp3d7128 = $sp48b1b0->description; if (@$sp3d7128[0] === '{') { $sp962149 = array(); preg_match_all('/"insert":"(.+?)"/', $sp3d7128, $sp962149); $sp3d7128 = str_replace('\\n', ' ', @join(' ', $sp962149[1])); } } elseif ($sp1012fd) { $sp1012fd->setVisible(array('id', 'name', 'password_open')); $sp8ba223['categories'] = array($sp1012fd); $sp8ba223['product'] = null; $spb6a91a = $sp1012fd->name . ' - ' . $sp8ba223['name']; $sp3d7128 = $sp1012fd->name; } else { $sp088977 = Category::where('user_id', $sp16b781->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp088977 as $sp1012fd) { $sp1012fd->setVisible(array('id', 'name', 'password_open')); } $sp8ba223['categories'] = $sp088977; $spb6a91a = $sp8ba223['name']; $sp3d7128 = $sp8ba223['shop']['ann']; if (@$sp3d7128[0] === '{') { $sp962149 = array(); preg_match_all('/"insert":"(.+?)"/', $sp3d7128, $sp962149); $sp3d7128 = str_replace('\\n', ' ', @join(' ', $sp962149[1])); } } $sp8ba223['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp8ba223['vcode']['driver'] === 'geetest' && ($sp8ba223['vcode'] || $sp8ba223['search'])) { $sp8ba223['vcode']['geetest'] = Geetest\API::get(); } $sp8ba223['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp2ff1c9 = Cookie::get('customer'); $sp776967 = Cookie::make('customer', strlen($sp2ff1c9) !== 32 ? md5(str_random(16)) : $sp2ff1c9, 43200, null, null, false, false); $spc3ccbe = null; if (isset($_GET['theme'])) { $spc3ccbe = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$spc3ccbe) { $spc3ccbe = \App\ShopTheme::defaultTheme(); } $sp8ba223['theme'] = $sp16b781->theme_config && isset($sp16b781->theme_config[$spc3ccbe->name]) ? $sp16b781->theme_config[$spc3ccbe->name] : $spc3ccbe->config; if (isset($sp8ba223['theme']['background']) && $sp8ba223['theme']['background'] === '内置1') { $sp8ba223['theme']['background'] = Helper::b1_rand_background(); } if ($sp48b1b0 === null) { if (@$sp8ba223['theme']['list_type'] === 'list') { foreach ($sp8ba223['categories'] as $sp4c441f) { if (!$sp4c441f->password_open) { $sp4c441f->getProductsForShop(); } } } else { if (count($sp8ba223['categories']) === 1) { $sp4c441f = $sp8ba223['categories'][0]; if (!$sp4c441f->password_open) { $sp4c441f->getProductsForShop(); } } } } return response()->view('shop_theme.' . $spc3ccbe->name . '.index', array('name' => $spb6a91a, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $spb6a91a), 'description' => $sp3d7128, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp8ba223))->cookie($sp776967); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $sp16eb02) { $spe23f6f = $sp16eb02->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $spe23f6f); } public function shop_category($spffb6bc) { $this->checkIsInMaintain(); $sp1012fd = Category::whereId(Helper::id_decode($spffb6bc, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$sp1012fd && is_numeric($sp1012fd)) { $sp1012fd = Category::whereId($spffb6bc)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp1012fd) { return $this->_shop_404(); } return $this->_shop_render($sp1012fd->user, $sp1012fd); } public function shop_product(Request $sp16eb02, $sp124835) { $this->checkIsInMaintain(); $sp48b1b0 = Product::whereId(Helper::id_decode($sp124835, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$sp48b1b0 && is_numeric($sp124835)) { $sp48b1b0 = Product::whereId($sp124835)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$sp48b1b0 || !$sp48b1b0->category) { return $this->_shop_404(); } if ($sp48b1b0->password_open && $sp48b1b0->password !== $sp16eb02->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($sp16eb02->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($sp48b1b0->user, $sp48b1b0->category, $sp48b1b0); } public function shop() { $this->checkIsInMaintain(); $sp16b781 = User::firstOrFail(); return $this->_shop_render($sp16b781); } public function admin() { $sp8ba223 = array(); $sp8ba223['url'] = config('app.url'); if (System::_getInt('product_manual')) { $sp8ba223['functions'] = array('product_manual'); } $sp8ba223['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($sp8ba223['vcode']['driver'] === 'geetest') { $sp8ba223['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp8ba223)); } }