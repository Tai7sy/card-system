<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spb14cf0, $spa74819 = null, $spe7d79d = null) { $sp8a1f10 = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $sp8a1f10['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $sp8a1f10['functions'][] = 'mail_send_order'; if (System::_getInt('mail_send_order_use_contact')) { $sp8a1f10['functions'][] = 'mail_send_order_use_contact'; } } if (System::_getInt('sms_send_order')) { $sp8a1f10['functions'][] = 'sms_send_order'; $sp8a1f10['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $sp8a1f10['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($spe7d79d) { $spa74819->setVisible(array('id', 'name', 'password_open')); if ($spa74819->password_open) { $spa74819->setAttribute('password', $spa74819->getTmpPassword()); $spa74819->addVisible(array('password')); } $spe7d79d->setForShop($spb14cf0); $sp8a1f10['categories'] = array($spa74819); $sp8a1f10['product'] = $spe7d79d; $sp6b4dc2 = $spe7d79d->name . ' - ' . $sp8a1f10['name']; $spdab1b1 = $spe7d79d->description; if (@$spdab1b1[0] === '{') { $sp7e4469 = array(); preg_match_all('/"insert":"(.+?)"/', $spdab1b1, $sp7e4469); $spdab1b1 = str_replace('\\n', ' ', @join(' ', $sp7e4469[1])); } } elseif ($spa74819) { $spa74819->setVisible(array('id', 'name', 'password_open')); $sp8a1f10['categories'] = array($spa74819); $sp8a1f10['product'] = null; $sp6b4dc2 = $spa74819->name . ' - ' . $sp8a1f10['name']; $spdab1b1 = $spa74819->name; } else { $sp0f87c6 = Category::where('user_id', $spb14cf0->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp0f87c6 as $spa74819) { $spa74819->setVisible(array('id', 'name', 'password_open')); } $sp8a1f10['categories'] = $sp0f87c6; $sp6b4dc2 = $sp8a1f10['name']; $spdab1b1 = $sp8a1f10['shop']['ann']; if (@$spdab1b1[0] === '{') { $sp7e4469 = array(); preg_match_all('/"insert":"(.+?)"/', $spdab1b1, $sp7e4469); $spdab1b1 = str_replace('\\n', ' ', @join(' ', $sp7e4469[1])); } } $sp8a1f10['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp8a1f10['vcode']['driver'] === 'geetest' && ($sp8a1f10['vcode'] || $sp8a1f10['search'])) { $sp8a1f10['vcode']['geetest'] = Geetest\API::get(); } $sp8a1f10['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp7eb55c = Cookie::get('customer'); $sp4bbe0a = Cookie::make('customer', strlen($sp7eb55c) !== 32 ? md5(str_random(16)) : $sp7eb55c, 43200, null, null, false, false); $spf85c53 = null; if (isset($_GET['theme'])) { $spf85c53 = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$spf85c53) { $spf85c53 = \App\ShopTheme::defaultTheme(); } $sp8a1f10['theme'] = $spb14cf0->theme_config && isset($spb14cf0->theme_config[$spf85c53->name]) ? $spb14cf0->theme_config[$spf85c53->name] : $spf85c53->config; if (isset($sp8a1f10['theme']['background']) && $sp8a1f10['theme']['background'] === '内置1') { $sp8a1f10['theme']['background'] = Helper::b1_rand_background(); } if ($spe7d79d === null) { if (@$sp8a1f10['theme']['list_type'] === 'list') { foreach ($sp8a1f10['categories'] as $spb8b025) { if (!$spb8b025->password_open) { $spb8b025->getProductsForShop(); } } } else { if (count($sp8a1f10['categories']) === 1) { $spb8b025 = $sp8a1f10['categories'][0]; if (!$spb8b025->password_open) { $spb8b025->getProductsForShop(); } } } } return response()->view('shop_theme.' . $spf85c53->name . '.index', array('name' => $sp6b4dc2, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp6b4dc2), 'description' => $spdab1b1, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp8a1f10))->cookie($sp4bbe0a); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $sp3c91bd) { $spc996e3 = $sp3c91bd->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $spc996e3); } public function shop_category($sp5aaeda) { $this->checkIsInMaintain(); $spa74819 = Category::whereId(Helper::id_decode($sp5aaeda, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$spa74819 && is_numeric($spa74819)) { $spa74819 = Category::whereId($sp5aaeda)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$spa74819) { return $this->_shop_404(); } return $this->_shop_render($spa74819->user, $spa74819); } public function shop_product(Request $sp3c91bd, $spb3db9e) { $this->checkIsInMaintain(); $spe7d79d = Product::whereId(Helper::id_decode($spb3db9e, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$spe7d79d && is_numeric($spb3db9e)) { $spe7d79d = Product::whereId($spb3db9e)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$spe7d79d || !$spe7d79d->category) { return $this->_shop_404(); } if ($spe7d79d->password_open && $spe7d79d->password !== $sp3c91bd->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($sp3c91bd->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($spe7d79d->user, $spe7d79d->category, $spe7d79d); } public function shop() { $this->checkIsInMaintain(); $spb14cf0 = User::firstOrFail(); return $this->_shop_render($spb14cf0); } public function admin() { $sp8a1f10 = array(); $sp8a1f10['url'] = config('app.url'); if (System::_getInt('product_manual')) { $sp8a1f10['functions'] = array('product_manual'); } $sp8a1f10['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($sp8a1f10['vcode']['driver'] === 'geetest') { $sp8a1f10['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp8a1f10)); } }