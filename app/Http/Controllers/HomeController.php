<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spac34b1, $sp1cd1e4 = null, $sp9dfc99 = null) { $spf3616d = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo'), 'functions' => array()); if (System::_getInt('product_manual')) { $spf3616d['functions'][] = 'product_manual'; } if (System::_getInt('mail_send_order')) { $spf3616d['functions'][] = 'mail_send_order'; if (System::_getInt('mail_send_order_use_contact')) { $spf3616d['functions'][] = 'mail_send_order_use_contact'; } } if (System::_getInt('sms_send_order')) { $spf3616d['functions'][] = 'sms_send_order'; $spf3616d['sms_send_order'] = array('sms_price' => System::_getInt('sms_price')); } $spf3616d['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($sp9dfc99) { $sp1cd1e4->setVisible(array('id', 'name', 'password_open')); if ($sp1cd1e4->password_open) { $sp1cd1e4->setAttribute('password', $sp1cd1e4->getTmpPassword()); $sp1cd1e4->addVisible(array('password')); } $sp9dfc99->setForShop($spac34b1); $spf3616d['categories'] = array($sp1cd1e4); $spf3616d['product'] = $sp9dfc99; $sp387f04 = $sp9dfc99->name . ' - ' . $spf3616d['name']; $spfed9d4 = $sp9dfc99->description; if (@$spfed9d4[0] === '{') { $sp8e1538 = array(); preg_match_all('/"insert":"(.+?)"/', $spfed9d4, $sp8e1538); $spfed9d4 = str_replace('\\n', ' ', @join(' ', $sp8e1538[1])); } } elseif ($sp1cd1e4) { $sp1cd1e4->setVisible(array('id', 'name', 'password_open')); $spf3616d['categories'] = array($sp1cd1e4); $spf3616d['product'] = null; $sp387f04 = $sp1cd1e4->name . ' - ' . $spf3616d['name']; $spfed9d4 = $sp1cd1e4->name; } else { $sp3cda33 = Category::where('user_id', $spac34b1->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp3cda33 as $sp1cd1e4) { $sp1cd1e4->setVisible(array('id', 'name', 'password_open')); } $spf3616d['categories'] = $sp3cda33; $sp387f04 = $spf3616d['name']; $spfed9d4 = $spf3616d['shop']['ann']; if (@$spfed9d4[0] === '{') { $sp8e1538 = array(); preg_match_all('/"insert":"(.+?)"/', $spfed9d4, $sp8e1538); $spfed9d4 = str_replace('\\n', ' ', @join(' ', $sp8e1538[1])); } } $spf3616d['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($spf3616d['vcode']['driver'] === 'geetest' && ($spf3616d['vcode'] || $spf3616d['search'])) { $spf3616d['vcode']['geetest'] = Geetest\API::get(); } $spf3616d['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp5ac530 = Cookie::get('customer'); $speed4bf = Cookie::make('customer', strlen($sp5ac530) !== 32 ? md5(str_random(16)) : $sp5ac530, 43200, null, null, false, false); $spf289bd = null; if (isset($_GET['theme'])) { $spf289bd = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$spf289bd) { $spf289bd = \App\ShopTheme::defaultTheme(); } $spf3616d['theme'] = $spac34b1->theme_config && isset($spac34b1->theme_config[$spf289bd->name]) ? $spac34b1->theme_config[$spf289bd->name] : $spf289bd->config; if (isset($spf3616d['theme']['background']) && $spf3616d['theme']['background'] === '内置1') { $spf3616d['theme']['background'] = Helper::b1_rand_background(); } if ($sp9dfc99 === null) { if (@$spf3616d['theme']['list_type'] === 'list') { foreach ($spf3616d['categories'] as $spd2ab5e) { if (!$spd2ab5e->password_open) { $spd2ab5e->getProductsForShop(); } } } else { if (count($spf3616d['categories']) === 1) { $spd2ab5e = $spf3616d['categories'][0]; if (!$spd2ab5e->password_open) { $spd2ab5e->getProductsForShop(); } } } } return response()->view('shop_theme.' . $spf289bd->name . '.index', array('name' => $sp387f04, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp387f04), 'description' => $spfed9d4, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $spf3616d))->cookie($speed4bf); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $spba756f) { $sp8625c0 = $spba756f->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $sp8625c0); } public function shop_category($sp2a05ea) { $this->checkIsInMaintain(); $sp1cd1e4 = Category::whereId(Helper::id_decode($sp2a05ea, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$sp1cd1e4 && is_numeric($sp1cd1e4)) { $sp1cd1e4 = Category::whereId($sp2a05ea)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp1cd1e4) { return $this->_shop_404(); } return $this->_shop_render($sp1cd1e4->user, $sp1cd1e4); } public function shop_product(Request $spba756f, $sp057c0e) { $this->checkIsInMaintain(); $sp9dfc99 = Product::whereId(Helper::id_decode($sp057c0e, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$sp9dfc99 && is_numeric($sp057c0e)) { $sp9dfc99 = Product::whereId($sp057c0e)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$sp9dfc99 || !$sp9dfc99->category) { return $this->_shop_404(); } if ($sp9dfc99->password_open && $sp9dfc99->password !== $spba756f->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($spba756f->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($sp9dfc99->user, $sp9dfc99->category, $sp9dfc99); } public function shop() { $this->checkIsInMaintain(); $spac34b1 = User::firstOrFail(); return $this->_shop_render($spac34b1); } public function admin() { $spf3616d = array(); $spf3616d['url'] = config('app.url'); if (System::_getInt('product_manual')) { $spf3616d['functions'] = array('product_manual'); } $spf3616d['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($spf3616d['vcode']['driver'] === 'geetest') { $spf3616d['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $spf3616d)); } }