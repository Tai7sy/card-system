<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spdf16c9) { $spc64cdd = \App\Pay::query(); $sp0bc006 = $spdf16c9->input('enabled'); if (strlen($sp0bc006)) { $spc64cdd->whereIn('enabled', explode(',', $sp0bc006)); } $spdb3063 = $spdf16c9->input('search', false); $sp085db7 = $spdf16c9->input('val', false); if ($spdb3063 && $sp085db7) { if ($spdb3063 == 'simple') { return Response::success($spc64cdd->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($spdb3063 == 'id') { $spc64cdd->where('id', $sp085db7); } else { $spc64cdd->where($spdb3063, 'like', '%' . $sp085db7 . '%'); } } $sp61ff14 = $spc64cdd->get(); return Response::success(array('list' => $sp61ff14, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spdf16c9) { $this->validate($spdf16c9, array('day' => 'required|integer|between:1,30')); $sp4f640c = (int) $spdf16c9->input('day'); if ($sp4f640c === 30) { $sp69bdaa = Carbon::now()->addMonths(-1)->toDateString() . ' 00:00:00'; } else { $sp69bdaa = Carbon::now()->addDays(-$sp4f640c)->toDateString() . ' 00:00:00'; } $sp61ff14 = $this->authQuery($spdf16c9, \App\Order::class)->where(function ($spc64cdd) { $spc64cdd->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp69bdaa)->with(array('pay' => function ($spc64cdd) { $spc64cdd->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp8ee8d3 = array(); foreach ($sp61ff14 as $sp442f8b) { if (isset($sp442f8b['pay']) && isset($sp442f8b['pay']['name'])) { $spb5b8e1 = $sp442f8b['pay']['name']; } else { $spb5b8e1 = '未知方式#' . $sp442f8b['pay_id']; } $sp8ee8d3[$spb5b8e1] = array((int) $sp442f8b['count'], (int) $sp442f8b['sum']); } return Response::success($sp8ee8d3); } function edit(Request $spdf16c9) { $this->validate($spdf16c9, array('id' => 'sometimes|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $sp74e49b = \App\Pay::find((int) $spdf16c9->post('id')); if (!$sp74e49b) { $sp74e49b = new \App\Pay(); } $sp74e49b->name = $spdf16c9->post('name'); $sp74e49b->comment = $spdf16c9->post('comment'); $sp74e49b->driver = $spdf16c9->post('driver'); $sp74e49b->way = $spdf16c9->post('way'); $sp74e49b->config = $spdf16c9->post('config'); $sp74e49b->enabled = (int) $spdf16c9->post('enabled'); $sp74e49b->fee_system = $spdf16c9->post('fee_system'); $sp74e49b->saveOrFail(); return Response::success(); } function comment(Request $spdf16c9) { $this->validate($spdf16c9, array('id' => 'required|integer')); $spaacfde = (int) $spdf16c9->post('id'); $sp74e49b = \App\Pay::findOrFail($spaacfde); $sp74e49b->comment = $spdf16c9->post('comment'); $sp74e49b->save(); return Response::success(); } function fee_system(Request $spdf16c9) { $this->validate($spdf16c9, array('id' => 'required|integer')); $spaacfde = (int) $spdf16c9->post('id'); $sp74e49b = \App\Pay::findOrFail($spaacfde); $sp74e49b->fee_system = $spdf16c9->post('fee_system'); $sp74e49b->saveOrFail(); return Response::success(); } function enable(Request $spdf16c9) { $this->validate($spdf16c9, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spb19a2c = $spdf16c9->post('ids'); $sp0bc006 = (int) $spdf16c9->post('enabled'); \App\Pay::whereIn('id', explode(',', $spb19a2c))->update(array('enabled' => $sp0bc006)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $spdf16c9) { $this->validate($spdf16c9, array('ids' => 'required|string')); $spb19a2c = $spdf16c9->post('ids'); \App\Pay::whereIn('id', explode(',', $spb19a2c))->delete(); \App\Pay::flushCache(); return Response::success(); } }