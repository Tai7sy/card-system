<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spa27895) { $sp7e6fa3 = \App\Pay::orderBy('sort'); $sp2a8f09 = $spa27895->post('enabled'); if (strlen($sp2a8f09)) { $sp7e6fa3->whereIn('enabled', explode(',', $sp2a8f09)); } $spfe451d = $spa27895->post('search', false); $sp0edb8f = $spa27895->post('val', false); if ($spfe451d && $sp0edb8f) { if ($spfe451d == 'simple') { return Response::success($sp7e6fa3->get(array('id', 'name'))); } elseif ($spfe451d == 'id') { $sp7e6fa3->where('id', $sp0edb8f); } else { $sp7e6fa3->where($spfe451d, 'like', '%' . $sp0edb8f . '%'); } } $sp966ae1 = $sp7e6fa3->get(); return Response::success(array('list' => $sp966ae1, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spa27895) { $this->validate($spa27895, array('day' => 'required|integer|between:1,30')); $spcb4d2f = (int) $spa27895->input('day'); if ($spcb4d2f === 30) { $sp118ccb = Carbon::now()->addMonths(-1); } else { $sp118ccb = Carbon::now()->addDays(-$spcb4d2f); } $sp966ae1 = $this->authQuery($spa27895, \App\Order::class)->where(function ($sp7e6fa3) { $sp7e6fa3->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp118ccb)->with(array('pay' => function ($sp7e6fa3) { $sp7e6fa3->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp786169 = array(); foreach ($sp966ae1 as $spc6f905) { if (isset($spc6f905['pay']) && isset($spc6f905['pay']['name'])) { $spf5edea = $spc6f905['pay']['name']; } else { $spf5edea = '未知方式#' . $spc6f905['pay_id']; } $sp786169[$spf5edea] = array((int) $spc6f905['count'], (int) $spc6f905['sum']); } return Response::success($sp786169); } function edit(Request $spa27895) { $this->validate($spa27895, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp746ee1 = (int) $spa27895->post('id'); $sp104c39 = $spa27895->post('name'); $sp6df6df = $spa27895->post('img'); $sp5d4c60 = $spa27895->post('comment'); $sp1f9a35 = $spa27895->post('driver'); $spd04a61 = $spa27895->post('way'); $spfd6e52 = $spa27895->post('config'); $sp2a8f09 = (int) $spa27895->post('enabled'); $sp1d1f3d = \App\Pay::find($sp746ee1); if (!$sp1d1f3d) { $sp1d1f3d = new \App\Pay(); } $sp1d1f3d->name = $sp104c39; $sp1d1f3d->img = $sp6df6df; $sp1d1f3d->comment = $sp5d4c60; $sp1d1f3d->driver = $sp1f9a35; $sp1d1f3d->way = $spd04a61; $sp1d1f3d->config = $spfd6e52; $sp1d1f3d->enabled = $sp2a8f09; $sp1d1f3d->fee_system = $spa27895->post('fee_system'); $sp1d1f3d->saveOrFail(); return Response::success(); } function comment(Request $spa27895) { $this->validate($spa27895, array('id' => 'required|integer')); $sp746ee1 = (int) $spa27895->post('id'); $sp1d1f3d = \App\Pay::findOrFail($sp746ee1); $sp1d1f3d->comment = $spa27895->post('comment'); $sp1d1f3d->save(); return Response::success(); } function sort(Request $spa27895) { $this->validate($spa27895, array('id' => 'required|integer')); $sp746ee1 = (int) $spa27895->post('id'); $sp1d1f3d = \App\Pay::findOrFail($sp746ee1); $sp1d1f3d->sort = (int) $spa27895->post('sort', 1000); $sp1d1f3d->save(); return Response::success(); } function fee_system(Request $spa27895) { $this->validate($spa27895, array('id' => 'required|integer')); $sp746ee1 = (int) $spa27895->post('id'); $sp1d1f3d = \App\Pay::findOrFail($sp746ee1); $sp1d1f3d->fee_system = $spa27895->post('fee_system'); $sp1d1f3d->saveOrFail(); return Response::success(); } function enable(Request $spa27895) { $this->validate($spa27895, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp8e4c06 = $spa27895->post('ids'); $sp2a8f09 = (int) $spa27895->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp8e4c06))->update(array('enabled' => $sp2a8f09)); return Response::success(); } function delete(Request $spa27895) { $this->validate($spa27895, array('id' => 'required|integer')); $sp746ee1 = (int) $spa27895->post('id'); \App\Pay::whereId($sp746ee1)->delete(); return Response::success(); } }