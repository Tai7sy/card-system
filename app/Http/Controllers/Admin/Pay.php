<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp7fb11a) { $spbea74d = \App\Pay::orderBy('sort'); $spbd6fea = $sp7fb11a->post('enabled'); if (strlen($spbd6fea)) { $spbea74d->whereIn('enabled', explode(',', $spbd6fea)); } $sp952760 = $sp7fb11a->post('search', false); $sp574a8e = $sp7fb11a->post('val', false); if ($sp952760 && $sp574a8e) { if ($sp952760 == 'simple') { return Response::success($spbea74d->get(array('id', 'name'))); } elseif ($sp952760 == 'id') { $spbea74d->where('id', $sp574a8e); } else { $spbea74d->where($sp952760, 'like', '%' . $sp574a8e . '%'); } } $sp90a30c = $spbea74d->get(); return Response::success(array('list' => $sp90a30c, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp7fb11a) { $this->validate($sp7fb11a, array('day' => 'required|integer|between:1,30')); $sp4254ed = (int) $sp7fb11a->input('day'); if ($sp4254ed === 30) { $specdb6e = Carbon::now()->addMonths(-1); } else { $specdb6e = Carbon::now()->addDays(-$sp4254ed); } $sp90a30c = $this->authQuery($sp7fb11a, \App\Order::class)->where(function ($spbea74d) { $spbea74d->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $specdb6e)->with(array('pay' => function ($spbea74d) { $spbea74d->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp44edeb = array(); foreach ($sp90a30c as $sp52b00a) { if (isset($sp52b00a['pay']) && isset($sp52b00a['pay']['name'])) { $sp1683e1 = $sp52b00a['pay']['name']; } else { $sp1683e1 = '未知方式#' . $sp52b00a['pay_id']; } $sp44edeb[$sp1683e1] = array((int) $sp52b00a['count'], (int) $sp52b00a['sum']); } return Response::success($sp44edeb); } function edit(Request $sp7fb11a) { $this->validate($sp7fb11a, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $spf448d5 = (int) $sp7fb11a->post('id'); $sp7961e5 = $sp7fb11a->post('name'); $sp79a637 = $sp7fb11a->post('img'); $sp7b71be = $sp7fb11a->post('comment'); $sp35bad9 = $sp7fb11a->post('driver'); $sp2e3b9c = $sp7fb11a->post('way'); $sp8b174b = $sp7fb11a->post('config'); $spbd6fea = (int) $sp7fb11a->post('enabled'); $sp7fc279 = \App\Pay::find($spf448d5); if (!$sp7fc279) { $sp7fc279 = new \App\Pay(); } $sp7fc279->name = $sp7961e5; $sp7fc279->img = $sp79a637; $sp7fc279->comment = $sp7b71be; $sp7fc279->driver = $sp35bad9; $sp7fc279->way = $sp2e3b9c; $sp7fc279->config = $sp8b174b; $sp7fc279->enabled = $spbd6fea; $sp7fc279->fee_system = $sp7fb11a->post('fee_system'); $sp7fc279->saveOrFail(); return Response::success(); } function comment(Request $sp7fb11a) { $this->validate($sp7fb11a, array('id' => 'required|integer')); $spf448d5 = (int) $sp7fb11a->post('id'); $sp7fc279 = \App\Pay::findOrFail($spf448d5); $sp7fc279->comment = $sp7fb11a->post('comment'); $sp7fc279->save(); return Response::success(); } function sort(Request $sp7fb11a) { $this->validate($sp7fb11a, array('id' => 'required|integer')); $spf448d5 = (int) $sp7fb11a->post('id'); $sp7fc279 = \App\Pay::findOrFail($spf448d5); $sp7fc279->sort = (int) $sp7fb11a->post('sort', 1000); $sp7fc279->save(); return Response::success(); } function fee_system(Request $sp7fb11a) { $this->validate($sp7fb11a, array('id' => 'required|integer')); $spf448d5 = (int) $sp7fb11a->post('id'); $sp7fc279 = \App\Pay::findOrFail($spf448d5); $sp7fc279->fee_system = $sp7fb11a->post('fee_system'); $sp7fc279->saveOrFail(); return Response::success(); } function enable(Request $sp7fb11a) { $this->validate($sp7fb11a, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spee7cac = $sp7fb11a->post('ids'); $spbd6fea = (int) $sp7fb11a->post('enabled'); \App\Pay::whereIn('id', explode(',', $spee7cac))->update(array('enabled' => $spbd6fea)); return Response::success(); } function delete(Request $sp7fb11a) { $this->validate($sp7fb11a, array('id' => 'required|integer')); $spf448d5 = (int) $sp7fb11a->post('id'); \App\Pay::whereId($spf448d5)->delete(); return Response::success(); } }