<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spa20801) { $sp6c3275 = \App\Pay::query(); $sp34b10a = $spa20801->input('enabled'); if (strlen($sp34b10a)) { $sp6c3275->whereIn('enabled', explode(',', $sp34b10a)); } $sp50974d = $spa20801->input('search', false); $sp7a8e14 = $spa20801->input('val', false); if ($sp50974d && $sp7a8e14) { if ($sp50974d == 'simple') { return Response::success($sp6c3275->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($sp50974d == 'id') { $sp6c3275->where('id', $sp7a8e14); } else { $sp6c3275->where($sp50974d, 'like', '%' . $sp7a8e14 . '%'); } } $spa79e9a = $sp6c3275->get(); return Response::success(array('list' => $spa79e9a, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spa20801) { $this->validate($spa20801, array('day' => 'required|integer|between:1,30')); $sp769c7e = (int) $spa20801->input('day'); if ($sp769c7e === 30) { $sp670e6a = Carbon::now()->addMonths(-1); } else { $sp670e6a = Carbon::now()->addDays(-$sp769c7e); } $spa79e9a = $this->authQuery($spa20801, \App\Order::class)->where(function ($sp6c3275) { $sp6c3275->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp670e6a)->with(array('pay' => function ($sp6c3275) { $sp6c3275->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp179a17 = array(); foreach ($spa79e9a as $spc90bf2) { if (isset($spc90bf2['pay']) && isset($spc90bf2['pay']['name'])) { $spffe063 = $spc90bf2['pay']['name']; } else { $spffe063 = '未知方式#' . $spc90bf2['pay_id']; } $sp179a17[$spffe063] = array((int) $spc90bf2['count'], (int) $spc90bf2['sum']); } return Response::success($sp179a17); } function edit(Request $spa20801) { $this->validate($spa20801, array('id' => 'required|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $sp243273 = \App\Pay::find((int) $spa20801->post('id')); if (!$sp243273) { $sp243273 = new \App\Pay(); } $sp243273->name = $spa20801->post('name'); $sp243273->comment = $spa20801->post('comment'); $sp243273->driver = $spa20801->post('driver'); $sp243273->way = $spa20801->post('way'); $sp243273->config = $spa20801->post('config'); $sp243273->enabled = (int) $spa20801->post('enabled'); $sp243273->fee_system = $spa20801->post('fee_system'); $sp243273->saveOrFail(); return Response::success(); } function comment(Request $spa20801) { $this->validate($spa20801, array('id' => 'required|integer')); $spbc2f9d = (int) $spa20801->post('id'); $sp243273 = \App\Pay::findOrFail($spbc2f9d); $sp243273->comment = $spa20801->post('comment'); $sp243273->save(); return Response::success(); } function fee_system(Request $spa20801) { $this->validate($spa20801, array('id' => 'required|integer')); $spbc2f9d = (int) $spa20801->post('id'); $sp243273 = \App\Pay::findOrFail($spbc2f9d); $sp243273->fee_system = $spa20801->post('fee_system'); $sp243273->saveOrFail(); return Response::success(); } function enable(Request $spa20801) { $this->validate($spa20801, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp4a6f27 = $spa20801->post('ids'); $sp34b10a = (int) $spa20801->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp4a6f27))->update(array('enabled' => $sp34b10a)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $spa20801) { $this->validate($spa20801, array('ids' => 'required|string')); $sp4a6f27 = $spa20801->post('ids'); \App\Pay::whereIn('id', explode(',', $sp4a6f27))->delete(); \App\Pay::flushCache(); return Response::success(); } }