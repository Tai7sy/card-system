<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spe5a184) { $spa8a4ff = \App\Pay::query(); $sp89bdae = $spe5a184->input('enabled'); if (strlen($sp89bdae)) { $spa8a4ff->whereIn('enabled', explode(',', $sp89bdae)); } $sp8336a0 = $spe5a184->input('search', false); $spdbda3a = $spe5a184->input('val', false); if ($sp8336a0 && $spdbda3a) { if ($sp8336a0 == 'simple') { return Response::success($spa8a4ff->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($sp8336a0 == 'id') { $spa8a4ff->where('id', $spdbda3a); } else { $spa8a4ff->where($sp8336a0, 'like', '%' . $spdbda3a . '%'); } } $spdf0cee = $spa8a4ff->get(); return Response::success(array('list' => $spdf0cee, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spe5a184) { $this->validate($spe5a184, array('day' => 'required|integer|between:1,30')); $speb0111 = (int) $spe5a184->input('day'); if ($speb0111 === 30) { $sp705209 = Carbon::now()->addMonths(-1)->toDateString() . ' 00:00:00'; } else { $sp705209 = Carbon::now()->addDays(-$speb0111)->toDateString() . ' 00:00:00'; } $spdf0cee = $this->authQuery($spe5a184, \App\Order::class)->where(function ($spa8a4ff) { $spa8a4ff->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp705209)->with(array('pay' => function ($spa8a4ff) { $spa8a4ff->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spa64ee0 = array(); foreach ($spdf0cee as $sp415442) { if (isset($sp415442['pay']) && isset($sp415442['pay']['name'])) { $sp6f5168 = $sp415442['pay']['name']; } else { $sp6f5168 = '未知方式#' . $sp415442['pay_id']; } $spa64ee0[$sp6f5168] = array((int) $sp415442['count'], (int) $sp415442['sum']); } return Response::success($spa64ee0); } function edit(Request $spe5a184) { $this->validate($spe5a184, array('id' => 'sometimes|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $sp56e1de = \App\Pay::find((int) $spe5a184->post('id')); if (!$sp56e1de) { $sp56e1de = new \App\Pay(); } $sp56e1de->name = $spe5a184->post('name'); $sp56e1de->comment = $spe5a184->post('comment'); $sp56e1de->driver = $spe5a184->post('driver'); $sp56e1de->way = $spe5a184->post('way'); $sp56e1de->config = $spe5a184->post('config'); $sp56e1de->enabled = (int) $spe5a184->post('enabled'); $sp56e1de->fee_system = $spe5a184->post('fee_system'); $sp56e1de->saveOrFail(); return Response::success(); } function comment(Request $spe5a184) { $this->validate($spe5a184, array('id' => 'required|integer')); $spb3d6c6 = (int) $spe5a184->post('id'); $sp56e1de = \App\Pay::findOrFail($spb3d6c6); $sp56e1de->comment = $spe5a184->post('comment'); $sp56e1de->save(); return Response::success(); } function fee_system(Request $spe5a184) { $this->validate($spe5a184, array('id' => 'required|integer')); $spb3d6c6 = (int) $spe5a184->post('id'); $sp56e1de = \App\Pay::findOrFail($spb3d6c6); $sp56e1de->fee_system = $spe5a184->post('fee_system'); $sp56e1de->saveOrFail(); return Response::success(); } function enable(Request $spe5a184) { $this->validate($spe5a184, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp8152f4 = $spe5a184->post('ids'); $sp89bdae = (int) $spe5a184->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp8152f4))->update(array('enabled' => $sp89bdae)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $spe5a184) { $this->validate($spe5a184, array('ids' => 'required|string')); $sp8152f4 = $spe5a184->post('ids'); \App\Pay::whereIn('id', explode(',', $sp8152f4))->delete(); \App\Pay::flushCache(); return Response::success(); } }