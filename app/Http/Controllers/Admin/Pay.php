<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spbaac90) { $sp50919b = \App\Pay::orderBy('sort'); $sped8f24 = $spbaac90->post('enabled'); if (strlen($sped8f24)) { $sp50919b->whereIn('enabled', explode(',', $sped8f24)); } $sp4d9eeb = $spbaac90->post('search', false); $spbd7375 = $spbaac90->post('val', false); if ($sp4d9eeb && $spbd7375) { if ($sp4d9eeb == 'simple') { return Response::success($sp50919b->get(array('id', 'name'))); } elseif ($sp4d9eeb == 'id') { $sp50919b->where('id', $spbd7375); } else { $sp50919b->where($sp4d9eeb, 'like', '%' . $spbd7375 . '%'); } } $spd5d914 = $sp50919b->get(); return Response::success(array('list' => $spd5d914, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spbaac90) { $this->validate($spbaac90, array('day' => 'required|integer|between:1,30')); $spc79160 = (int) $spbaac90->input('day'); if ($spc79160 === 30) { $sp8d5de0 = Carbon::now()->addMonths(-1); } else { $sp8d5de0 = Carbon::now()->addDays(-$spc79160); } $spd5d914 = $this->authQuery($spbaac90, \App\Order::class)->where(function ($sp50919b) { $sp50919b->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp8d5de0)->with(array('pay' => function ($sp50919b) { $sp50919b->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp599084 = array(); foreach ($spd5d914 as $spdb8903) { if (isset($spdb8903['pay']) && isset($spdb8903['pay']['name'])) { $sp78c283 = $spdb8903['pay']['name']; } else { $sp78c283 = '未知方式#' . $spdb8903['pay_id']; } $sp599084[$sp78c283] = array((int) $spdb8903['count'], (int) $spdb8903['sum']); } return Response::success($sp599084); } function edit(Request $spbaac90) { $this->validate($spbaac90, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp1ffc0e = (int) $spbaac90->post('id'); $specbd57 = $spbaac90->post('name'); $sp063866 = $spbaac90->post('img'); $sp3d5fcc = $spbaac90->post('comment'); $spde903c = $spbaac90->post('driver'); $sp32574d = $spbaac90->post('way'); $sp4259fe = $spbaac90->post('config'); $sped8f24 = (int) $spbaac90->post('enabled'); $sp0aa32b = \App\Pay::find($sp1ffc0e); if (!$sp0aa32b) { $sp0aa32b = new \App\Pay(); } $sp0aa32b->name = $specbd57; $sp0aa32b->img = $sp063866; $sp0aa32b->comment = $sp3d5fcc; $sp0aa32b->driver = $spde903c; $sp0aa32b->way = $sp32574d; $sp0aa32b->config = $sp4259fe; $sp0aa32b->enabled = $sped8f24; $sp0aa32b->fee_system = $spbaac90->post('fee_system'); $sp0aa32b->saveOrFail(); return Response::success(); } function comment(Request $spbaac90) { $this->validate($spbaac90, array('id' => 'required|integer')); $sp1ffc0e = (int) $spbaac90->post('id'); $sp0aa32b = \App\Pay::findOrFail($sp1ffc0e); $sp0aa32b->comment = $spbaac90->post('comment'); $sp0aa32b->save(); return Response::success(); } function sort(Request $spbaac90) { $this->validate($spbaac90, array('id' => 'required|integer')); $sp1ffc0e = (int) $spbaac90->post('id'); $sp0aa32b = \App\Pay::findOrFail($sp1ffc0e); $sp0aa32b->sort = (int) $spbaac90->post('sort', 1000); $sp0aa32b->save(); return Response::success(); } function fee_system(Request $spbaac90) { $this->validate($spbaac90, array('id' => 'required|integer')); $sp1ffc0e = (int) $spbaac90->post('id'); $sp0aa32b = \App\Pay::findOrFail($sp1ffc0e); $sp0aa32b->fee_system = $spbaac90->post('fee_system'); $sp0aa32b->saveOrFail(); return Response::success(); } function enable(Request $spbaac90) { $this->validate($spbaac90, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp2d798e = $spbaac90->post('ids'); $sped8f24 = (int) $spbaac90->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp2d798e))->update(array('enabled' => $sped8f24)); return Response::success(); } function delete(Request $spbaac90) { $this->validate($spbaac90, array('id' => 'required|integer')); $sp1ffc0e = (int) $spbaac90->post('id'); \App\Pay::whereId($sp1ffc0e)->delete(); return Response::success(); } }