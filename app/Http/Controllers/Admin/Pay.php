<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp3c91bd) { $sp6cb35e = \App\Pay::orderBy('sort'); $spa20949 = $sp3c91bd->post('enabled'); if (strlen($spa20949)) { $sp6cb35e->whereIn('enabled', explode(',', $spa20949)); } $sp98fed8 = $sp3c91bd->post('search', false); $sp7f8b1d = $sp3c91bd->post('val', false); if ($sp98fed8 && $sp7f8b1d) { if ($sp98fed8 == 'simple') { return Response::success($sp6cb35e->get(array('id', 'name'))); } elseif ($sp98fed8 == 'id') { $sp6cb35e->where('id', $sp7f8b1d); } else { $sp6cb35e->where($sp98fed8, 'like', '%' . $sp7f8b1d . '%'); } } $spdecb4c = $sp6cb35e->get(); return Response::success(array('list' => $spdecb4c, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp3c91bd) { $this->validate($sp3c91bd, array('day' => 'required|integer|between:1,30')); $spcefb4d = (int) $sp3c91bd->input('day'); if ($spcefb4d === 30) { $spb62a88 = Carbon::now()->addMonths(-1); } else { $spb62a88 = Carbon::now()->addDays(-$spcefb4d); } $spdecb4c = $this->authQuery($sp3c91bd, \App\Order::class)->where(function ($sp6cb35e) { $sp6cb35e->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $spb62a88)->with(array('pay' => function ($sp6cb35e) { $sp6cb35e->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp6a22d6 = array(); foreach ($spdecb4c as $sp807bd0) { if (isset($sp807bd0['pay']) && isset($sp807bd0['pay']['name'])) { $spcbea9e = $sp807bd0['pay']['name']; } else { $spcbea9e = '未知方式#' . $sp807bd0['pay_id']; } $sp6a22d6[$spcbea9e] = array((int) $sp807bd0['count'], (int) $sp807bd0['sum']); } return Response::success($sp6a22d6); } function edit(Request $sp3c91bd) { $this->validate($sp3c91bd, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $spbabe1d = (int) $sp3c91bd->post('id'); $sp6b4dc2 = $sp3c91bd->post('name'); $sp379503 = $sp3c91bd->post('img'); $spa9508a = $sp3c91bd->post('comment'); $sp1feac0 = $sp3c91bd->post('driver'); $sp181543 = $sp3c91bd->post('way'); $sp8a1f10 = $sp3c91bd->post('config'); $spa20949 = (int) $sp3c91bd->post('enabled'); $sp1b768e = \App\Pay::find($spbabe1d); if (!$sp1b768e) { $sp1b768e = new \App\Pay(); } $sp1b768e->name = $sp6b4dc2; $sp1b768e->img = $sp379503; $sp1b768e->comment = $spa9508a; $sp1b768e->driver = $sp1feac0; $sp1b768e->way = $sp181543; $sp1b768e->config = $sp8a1f10; $sp1b768e->enabled = $spa20949; $sp1b768e->fee_system = $sp3c91bd->post('fee_system'); $sp1b768e->saveOrFail(); return Response::success(); } function comment(Request $sp3c91bd) { $this->validate($sp3c91bd, array('id' => 'required|integer')); $spbabe1d = (int) $sp3c91bd->post('id'); $sp1b768e = \App\Pay::findOrFail($spbabe1d); $sp1b768e->comment = $sp3c91bd->post('comment'); $sp1b768e->save(); return Response::success(); } function sort(Request $sp3c91bd) { $this->validate($sp3c91bd, array('id' => 'required|integer')); $spbabe1d = (int) $sp3c91bd->post('id'); $sp1b768e = \App\Pay::findOrFail($spbabe1d); $sp1b768e->sort = (int) $sp3c91bd->post('sort', 1000); $sp1b768e->save(); return Response::success(); } function fee_system(Request $sp3c91bd) { $this->validate($sp3c91bd, array('id' => 'required|integer')); $spbabe1d = (int) $sp3c91bd->post('id'); $sp1b768e = \App\Pay::findOrFail($spbabe1d); $sp1b768e->fee_system = $sp3c91bd->post('fee_system'); $sp1b768e->saveOrFail(); return Response::success(); } function enable(Request $sp3c91bd) { $this->validate($sp3c91bd, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spdbdb98 = $sp3c91bd->post('ids'); $spa20949 = (int) $sp3c91bd->post('enabled'); \App\Pay::whereIn('id', explode(',', $spdbdb98))->update(array('enabled' => $spa20949)); return Response::success(); } function delete(Request $sp3c91bd) { $this->validate($sp3c91bd, array('id' => 'required|integer')); $spbabe1d = (int) $sp3c91bd->post('id'); \App\Pay::whereId($spbabe1d)->delete(); return Response::success(); } }