<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp26e527) { $spcfdf85 = \App\Pay::query(); $spc9cacd = $sp26e527->input('enabled'); if (strlen($spc9cacd)) { $spcfdf85->whereIn('enabled', explode(',', $spc9cacd)); } $sp78cca0 = $sp26e527->input('search', false); $sp79e569 = $sp26e527->input('val', false); if ($sp78cca0 && $sp79e569) { if ($sp78cca0 == 'simple') { return Response::success($spcfdf85->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($sp78cca0 == 'id') { $spcfdf85->where('id', $sp79e569); } else { $spcfdf85->where($sp78cca0, 'like', '%' . $sp79e569 . '%'); } } $spccc256 = $spcfdf85->get(); return Response::success(array('list' => $spccc256, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp26e527) { $this->validate($sp26e527, array('day' => 'required|integer|between:1,30')); $spc9ad9e = (int) $sp26e527->input('day'); if ($spc9ad9e === 30) { $sp6bf7ca = Carbon::now()->addMonths(-1)->toDateString() . ' 00:00:00'; } else { $sp6bf7ca = Carbon::now()->addDays(-$spc9ad9e)->toDateString() . ' 00:00:00'; } $spccc256 = $this->authQuery($sp26e527, \App\Order::class)->where(function ($spcfdf85) { $spcfdf85->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp6bf7ca)->with(array('pay' => function ($spcfdf85) { $spcfdf85->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spa87332 = array(); foreach ($spccc256 as $sp9c771b) { if (isset($sp9c771b['pay']) && isset($sp9c771b['pay']['name'])) { $spd74535 = $sp9c771b['pay']['name']; } else { $spd74535 = '未知方式#' . $sp9c771b['pay_id']; } $spa87332[$spd74535] = array((int) $sp9c771b['count'], (int) $sp9c771b['sum']); } return Response::success($spa87332); } function edit(Request $sp26e527) { $this->validate($sp26e527, array('id' => 'sometimes|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $spade156 = \App\Pay::find((int) $sp26e527->post('id')); if (!$spade156) { $spade156 = new \App\Pay(); } $spade156->name = $sp26e527->post('name'); $spade156->comment = $sp26e527->post('comment'); $spade156->driver = $sp26e527->post('driver'); $spade156->way = $sp26e527->post('way'); $spade156->config = $sp26e527->post('config'); $spade156->enabled = (int) $sp26e527->post('enabled'); $spade156->fee_system = $sp26e527->post('fee_system'); $spade156->saveOrFail(); return Response::success(); } function comment(Request $sp26e527) { $this->validate($sp26e527, array('id' => 'required|integer')); $sp138835 = (int) $sp26e527->post('id'); $spade156 = \App\Pay::findOrFail($sp138835); $spade156->comment = $sp26e527->post('comment'); $spade156->save(); return Response::success(); } function fee_system(Request $sp26e527) { $this->validate($sp26e527, array('id' => 'required|integer')); $sp138835 = (int) $sp26e527->post('id'); $spade156 = \App\Pay::findOrFail($sp138835); $spade156->fee_system = $sp26e527->post('fee_system'); $spade156->saveOrFail(); return Response::success(); } function enable(Request $sp26e527) { $this->validate($sp26e527, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp892962 = $sp26e527->post('ids'); $spc9cacd = (int) $sp26e527->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp892962))->update(array('enabled' => $spc9cacd)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $sp26e527) { $this->validate($sp26e527, array('ids' => 'required|string')); $sp892962 = $sp26e527->post('ids'); \App\Pay::whereIn('id', explode(',', $sp892962))->delete(); \App\Pay::flushCache(); return Response::success(); } }