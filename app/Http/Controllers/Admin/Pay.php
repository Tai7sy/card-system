<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp13451b) { $sp8e2ceb = \App\Pay::query(); $sp6a3468 = $sp13451b->input('enabled'); if (strlen($sp6a3468)) { $sp8e2ceb->whereIn('enabled', explode(',', $sp6a3468)); } $sp54e0e6 = $sp13451b->input('search', false); $sp59b33b = $sp13451b->input('val', false); if ($sp54e0e6 && $sp59b33b) { if ($sp54e0e6 == 'simple') { return Response::success($sp8e2ceb->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($sp54e0e6 == 'id') { $sp8e2ceb->where('id', $sp59b33b); } else { $sp8e2ceb->where($sp54e0e6, 'like', '%' . $sp59b33b . '%'); } } $spa67529 = $sp8e2ceb->get(); return Response::success(array('list' => $spa67529, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp13451b) { $this->validate($sp13451b, array('day' => 'required|integer|between:1,30')); $spe595a6 = (int) $sp13451b->input('day'); if ($spe595a6 === 30) { $speeaf8a = Carbon::now()->addMonths(-1)->toDateString() . ' 00:00:00'; } else { $speeaf8a = Carbon::now()->addDays(-$spe595a6)->toDateString() . ' 00:00:00'; } $spa67529 = $this->authQuery($sp13451b, \App\Order::class)->where(function ($sp8e2ceb) { $sp8e2ceb->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $speeaf8a)->with(array('pay' => function ($sp8e2ceb) { $sp8e2ceb->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp00ac62 = array(); foreach ($spa67529 as $sp3f5c2c) { if (isset($sp3f5c2c['pay']) && isset($sp3f5c2c['pay']['name'])) { $sp07acf6 = $sp3f5c2c['pay']['name']; } else { $sp07acf6 = '未知方式#' . $sp3f5c2c['pay_id']; } $sp00ac62[$sp07acf6] = array((int) $sp3f5c2c['count'], (int) $sp3f5c2c['sum']); } return Response::success($sp00ac62); } function edit(Request $sp13451b) { $this->validate($sp13451b, array('id' => 'sometimes|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $sp2e6adb = \App\Pay::find((int) $sp13451b->post('id')); if (!$sp2e6adb) { $sp2e6adb = new \App\Pay(); } $sp2e6adb->name = $sp13451b->post('name'); $sp2e6adb->comment = $sp13451b->post('comment'); $sp2e6adb->driver = $sp13451b->post('driver'); $sp2e6adb->way = $sp13451b->post('way'); $sp2e6adb->config = $sp13451b->post('config'); $sp2e6adb->enabled = (int) $sp13451b->post('enabled'); $sp2e6adb->fee_system = $sp13451b->post('fee_system'); $sp2e6adb->saveOrFail(); return Response::success(); } function comment(Request $sp13451b) { $this->validate($sp13451b, array('id' => 'required|integer')); $sp7df839 = (int) $sp13451b->post('id'); $sp2e6adb = \App\Pay::findOrFail($sp7df839); $sp2e6adb->comment = $sp13451b->post('comment'); $sp2e6adb->save(); return Response::success(); } function fee_system(Request $sp13451b) { $this->validate($sp13451b, array('id' => 'required|integer')); $sp7df839 = (int) $sp13451b->post('id'); $sp2e6adb = \App\Pay::findOrFail($sp7df839); $sp2e6adb->fee_system = $sp13451b->post('fee_system'); $sp2e6adb->saveOrFail(); return Response::success(); } function enable(Request $sp13451b) { $this->validate($sp13451b, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp60bb7e = $sp13451b->post('ids'); $sp6a3468 = (int) $sp13451b->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp60bb7e))->update(array('enabled' => $sp6a3468)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $sp13451b) { $this->validate($sp13451b, array('ids' => 'required|string')); $sp60bb7e = $sp13451b->post('ids'); \App\Pay::whereIn('id', explode(',', $sp60bb7e))->delete(); \App\Pay::flushCache(); return Response::success(); } }