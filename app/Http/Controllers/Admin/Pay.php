<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spfb41ce) { $sp61dd0f = \App\Pay::orderBy('sort'); $sp691786 = $spfb41ce->post('enabled'); if (strlen($sp691786)) { $sp61dd0f->whereIn('enabled', explode(',', $sp691786)); } $sp2e420a = $spfb41ce->post('search', false); $sp286c56 = $spfb41ce->post('val', false); if ($sp2e420a && $sp286c56) { if ($sp2e420a == 'simple') { return Response::success($sp61dd0f->get(array('id', 'name'))); } elseif ($sp2e420a == 'id') { $sp61dd0f->where('id', $sp286c56); } else { $sp61dd0f->where($sp2e420a, 'like', '%' . $sp286c56 . '%'); } } $sp32d442 = $sp61dd0f->get(); return Response::success(array('list' => $sp32d442, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spfb41ce) { $this->validate($spfb41ce, array('day' => 'required|integer|between:1,30')); $sp0bb0c0 = (int) $spfb41ce->input('day'); if ($sp0bb0c0 === 30) { $sp174182 = Carbon::now()->addMonths(-1); } else { $sp174182 = Carbon::now()->addDays(-$sp0bb0c0); } $sp32d442 = $this->authQuery($spfb41ce, \App\Order::class)->where(function ($sp61dd0f) { $sp61dd0f->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp174182)->with(array('pay' => function ($sp61dd0f) { $sp61dd0f->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spd7b285 = array(); foreach ($sp32d442 as $sp64913d) { if (isset($sp64913d['pay']) && isset($sp64913d['pay']['name'])) { $spc457d4 = $sp64913d['pay']['name']; } else { $spc457d4 = '未知方式#' . $sp64913d['pay_id']; } $spd7b285[$spc457d4] = array((int) $sp64913d['count'], (int) $sp64913d['sum']); } return Response::success($spd7b285); } function edit(Request $spfb41ce) { $this->validate($spfb41ce, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp1e9761 = (int) $spfb41ce->post('id'); $spf4db88 = $spfb41ce->post('name'); $sp0a85c9 = $spfb41ce->post('img'); $spec9006 = $spfb41ce->post('comment'); $sp36af1a = $spfb41ce->post('driver'); $sp8c6cea = $spfb41ce->post('way'); $sp2c498e = $spfb41ce->post('config'); $sp691786 = (int) $spfb41ce->post('enabled'); $sp56a5d4 = \App\Pay::find($sp1e9761); if (!$sp56a5d4) { $sp56a5d4 = new \App\Pay(); } $sp56a5d4->name = $spf4db88; $sp56a5d4->img = $sp0a85c9; $sp56a5d4->comment = $spec9006; $sp56a5d4->driver = $sp36af1a; $sp56a5d4->way = $sp8c6cea; $sp56a5d4->config = $sp2c498e; $sp56a5d4->enabled = $sp691786; $sp56a5d4->fee_system = $spfb41ce->post('fee_system'); $sp56a5d4->saveOrFail(); return Response::success(); } function comment(Request $spfb41ce) { $this->validate($spfb41ce, array('id' => 'required|integer')); $sp1e9761 = (int) $spfb41ce->post('id'); $sp56a5d4 = \App\Pay::findOrFail($sp1e9761); $sp56a5d4->comment = $spfb41ce->post('comment'); $sp56a5d4->save(); return Response::success(); } function sort(Request $spfb41ce) { $this->validate($spfb41ce, array('id' => 'required|integer')); $sp1e9761 = (int) $spfb41ce->post('id'); $sp56a5d4 = \App\Pay::findOrFail($sp1e9761); $sp56a5d4->sort = (int) $spfb41ce->post('sort', 1000); $sp56a5d4->save(); return Response::success(); } function fee_system(Request $spfb41ce) { $this->validate($spfb41ce, array('id' => 'required|integer')); $sp1e9761 = (int) $spfb41ce->post('id'); $sp56a5d4 = \App\Pay::findOrFail($sp1e9761); $sp56a5d4->fee_system = $spfb41ce->post('fee_system'); $sp56a5d4->saveOrFail(); return Response::success(); } function enable(Request $spfb41ce) { $this->validate($spfb41ce, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp87851e = $spfb41ce->post('ids'); $sp691786 = (int) $spfb41ce->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp87851e))->update(array('enabled' => $sp691786)); return Response::success(); } function delete(Request $spfb41ce) { $this->validate($spfb41ce, array('id' => 'required|integer')); $sp1e9761 = (int) $spfb41ce->post('id'); \App\Pay::whereId($sp1e9761)->delete(); return Response::success(); } }