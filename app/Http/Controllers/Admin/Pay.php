<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spaa0004) { $sp3b6564 = \App\Pay::orderBy('sort'); $spee6fb0 = $spaa0004->post('enabled'); if (strlen($spee6fb0)) { $sp3b6564->whereIn('enabled', explode(',', $spee6fb0)); } $sp29e241 = $spaa0004->post('search', false); $sp1a6789 = $spaa0004->post('val', false); if ($sp29e241 && $sp1a6789) { if ($sp29e241 == 'simple') { return Response::success($sp3b6564->get(array('id', 'name'))); } elseif ($sp29e241 == 'id') { $sp3b6564->where('id', $sp1a6789); } else { $sp3b6564->where($sp29e241, 'like', '%' . $sp1a6789 . '%'); } } $sp94fc94 = $sp3b6564->get(); return Response::success(array('list' => $sp94fc94, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spaa0004) { $this->validate($spaa0004, array('day' => 'required|integer|between:1,30')); $spc33df7 = (int) $spaa0004->input('day'); if ($spc33df7 === 30) { $sp1d28b5 = Carbon::now()->addMonths(-1); } else { $sp1d28b5 = Carbon::now()->addDays(-$spc33df7); } $sp94fc94 = $this->authQuery($spaa0004, \App\Order::class)->where(function ($sp3b6564) { $sp3b6564->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp1d28b5)->with(array('pay' => function ($sp3b6564) { $sp3b6564->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp4e109c = array(); foreach ($sp94fc94 as $sp29b243) { if (isset($sp29b243['pay']) && isset($sp29b243['pay']['name'])) { $sp4d8a3d = $sp29b243['pay']['name']; } else { $sp4d8a3d = '未知方式#' . $sp29b243['pay_id']; } $sp4e109c[$sp4d8a3d] = array((int) $sp29b243['count'], (int) $sp29b243['sum']); } return Response::success($sp4e109c); } function edit(Request $spaa0004) { $this->validate($spaa0004, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp805277 = (int) $spaa0004->post('id'); $sp4fd574 = $spaa0004->post('name'); $spa39cdf = $spaa0004->post('img'); $sp2bd085 = $spaa0004->post('comment'); $sp68bc14 = $spaa0004->post('driver'); $sp8f1f51 = $spaa0004->post('way'); $sp47d7e2 = $spaa0004->post('config'); $spee6fb0 = (int) $spaa0004->post('enabled'); $sp680e79 = \App\Pay::find($sp805277); if (!$sp680e79) { $sp680e79 = new \App\Pay(); } $sp680e79->name = $sp4fd574; $sp680e79->img = $spa39cdf; $sp680e79->comment = $sp2bd085; $sp680e79->driver = $sp68bc14; $sp680e79->way = $sp8f1f51; $sp680e79->config = $sp47d7e2; $sp680e79->enabled = $spee6fb0; $sp680e79->fee_system = $spaa0004->post('fee_system'); $sp680e79->saveOrFail(); return Response::success(); } function comment(Request $spaa0004) { $this->validate($spaa0004, array('id' => 'required|integer')); $sp805277 = (int) $spaa0004->post('id'); $sp680e79 = \App\Pay::findOrFail($sp805277); $sp680e79->comment = $spaa0004->post('comment'); $sp680e79->save(); return Response::success(); } function sort(Request $spaa0004) { $this->validate($spaa0004, array('id' => 'required|integer')); $sp805277 = (int) $spaa0004->post('id'); $sp680e79 = \App\Pay::findOrFail($sp805277); $sp680e79->sort = (int) $spaa0004->post('sort', 1000); $sp680e79->save(); return Response::success(); } function fee_system(Request $spaa0004) { $this->validate($spaa0004, array('id' => 'required|integer')); $sp805277 = (int) $spaa0004->post('id'); $sp680e79 = \App\Pay::findOrFail($sp805277); $sp680e79->fee_system = $spaa0004->post('fee_system'); $sp680e79->saveOrFail(); return Response::success(); } function enable(Request $spaa0004) { $this->validate($spaa0004, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp5bbe0c = $spaa0004->post('ids'); $spee6fb0 = (int) $spaa0004->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp5bbe0c))->update(array('enabled' => $spee6fb0)); return Response::success(); } function delete(Request $spaa0004) { $this->validate($spaa0004, array('id' => 'required|integer')); $sp805277 = (int) $spaa0004->post('id'); \App\Pay::whereId($sp805277)->delete(); return Response::success(); } }