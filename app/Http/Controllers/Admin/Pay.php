<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spfeab54) { $sp5786ca = \App\Pay::orderBy('sort'); $sp17fe52 = $spfeab54->post('enabled'); if (strlen($sp17fe52)) { $sp5786ca->whereIn('enabled', explode(',', $sp17fe52)); } $sped0aef = $spfeab54->post('search', false); $sp86d9ea = $spfeab54->post('val', false); if ($sped0aef && $sp86d9ea) { if ($sped0aef == 'simple') { return Response::success($sp5786ca->get(array('id', 'name'))); } elseif ($sped0aef == 'id') { $sp5786ca->where('id', $sp86d9ea); } else { $sp5786ca->where($sped0aef, 'like', '%' . $sp86d9ea . '%'); } } $spaff91c = $sp5786ca->get(); return Response::success(array('list' => $spaff91c, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spfeab54) { $this->validate($spfeab54, array('day' => 'required|integer|between:1,30')); $sp842b0e = (int) $spfeab54->input('day'); if ($sp842b0e === 30) { $spa470da = Carbon::now()->addMonths(-1); } else { $spa470da = Carbon::now()->addDays(-$sp842b0e); } $spaff91c = $this->authQuery($spfeab54, \App\Order::class)->where(function ($sp5786ca) { $sp5786ca->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $spa470da)->with(array('pay' => function ($sp5786ca) { $sp5786ca->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spb9589c = array(); foreach ($spaff91c as $sp4a9ec3) { if (isset($sp4a9ec3['pay']) && isset($sp4a9ec3['pay']['name'])) { $sp6de9f7 = $sp4a9ec3['pay']['name']; } else { $sp6de9f7 = '未知方式#' . $sp4a9ec3['pay_id']; } $spb9589c[$sp6de9f7] = array((int) $sp4a9ec3['count'], (int) $sp4a9ec3['sum']); } return Response::success($spb9589c); } function edit(Request $spfeab54) { $this->validate($spfeab54, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp53f8aa = (int) $spfeab54->post('id'); $sp505b52 = $spfeab54->post('name'); $spa14ef6 = $spfeab54->post('img'); $sp5dfa6e = $spfeab54->post('comment'); $sp33ee9e = $spfeab54->post('driver'); $sp63b9f2 = $spfeab54->post('way'); $spbe80b7 = $spfeab54->post('config'); $sp17fe52 = (int) $spfeab54->post('enabled'); $spd46fd8 = \App\Pay::find($sp53f8aa); if (!$spd46fd8) { $spd46fd8 = new \App\Pay(); } $spd46fd8->name = $sp505b52; $spd46fd8->img = $spa14ef6; $spd46fd8->comment = $sp5dfa6e; $spd46fd8->driver = $sp33ee9e; $spd46fd8->way = $sp63b9f2; $spd46fd8->config = $spbe80b7; $spd46fd8->enabled = $sp17fe52; $spd46fd8->fee_system = $spfeab54->post('fee_system'); $spd46fd8->saveOrFail(); return Response::success(); } function comment(Request $spfeab54) { $this->validate($spfeab54, array('id' => 'required|integer')); $sp53f8aa = (int) $spfeab54->post('id'); $spd46fd8 = \App\Pay::findOrFail($sp53f8aa); $spd46fd8->comment = $spfeab54->post('comment'); $spd46fd8->save(); return Response::success(); } function sort(Request $spfeab54) { $this->validate($spfeab54, array('id' => 'required|integer')); $sp53f8aa = (int) $spfeab54->post('id'); $spd46fd8 = \App\Pay::findOrFail($sp53f8aa); $spd46fd8->sort = (int) $spfeab54->post('sort', 1000); $spd46fd8->save(); return Response::success(); } function fee_system(Request $spfeab54) { $this->validate($spfeab54, array('id' => 'required|integer')); $sp53f8aa = (int) $spfeab54->post('id'); $spd46fd8 = \App\Pay::findOrFail($sp53f8aa); $spd46fd8->fee_system = $spfeab54->post('fee_system'); $spd46fd8->saveOrFail(); return Response::success(); } function enable(Request $spfeab54) { $this->validate($spfeab54, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spbd9db0 = $spfeab54->post('ids'); $sp17fe52 = (int) $spfeab54->post('enabled'); \App\Pay::whereIn('id', explode(',', $spbd9db0))->update(array('enabled' => $sp17fe52)); return Response::success(); } function delete(Request $spfeab54) { $this->validate($spfeab54, array('id' => 'required|integer')); $sp53f8aa = (int) $spfeab54->post('id'); \App\Pay::whereId($sp53f8aa)->delete(); return Response::success(); } }