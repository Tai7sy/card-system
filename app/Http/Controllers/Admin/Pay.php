<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spccbfb6) { $sp479bde = \App\Pay::query(); $sp64a3d6 = $spccbfb6->input('enabled'); if (strlen($sp64a3d6)) { $sp479bde->whereIn('enabled', explode(',', $sp64a3d6)); } $sp6f5fd7 = $spccbfb6->input('search', false); $spc4b2f5 = $spccbfb6->input('val', false); if ($sp6f5fd7 && $spc4b2f5) { if ($sp6f5fd7 == 'simple') { return Response::success($sp479bde->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($sp6f5fd7 == 'id') { $sp479bde->where('id', $spc4b2f5); } else { $sp479bde->where($sp6f5fd7, 'like', '%' . $spc4b2f5 . '%'); } } $sp7d3bbd = $sp479bde->get(); return Response::success(array('list' => $sp7d3bbd, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spccbfb6) { $this->validate($spccbfb6, array('day' => 'required|integer|between:1,30')); $sp90b7ff = (int) $spccbfb6->input('day'); if ($sp90b7ff === 30) { $sp7e43bd = Carbon::now()->addMonths(-1); } else { $sp7e43bd = Carbon::now()->addDays(-$sp90b7ff); } $sp7d3bbd = $this->authQuery($spccbfb6, \App\Order::class)->where(function ($sp479bde) { $sp479bde->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp7e43bd)->with(array('pay' => function ($sp479bde) { $sp479bde->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spa51230 = array(); foreach ($sp7d3bbd as $sp222058) { if (isset($sp222058['pay']) && isset($sp222058['pay']['name'])) { $spda97c1 = $sp222058['pay']['name']; } else { $spda97c1 = '未知方式#' . $sp222058['pay_id']; } $spa51230[$spda97c1] = array((int) $sp222058['count'], (int) $sp222058['sum']); } return Response::success($spa51230); } function edit(Request $spccbfb6) { $this->validate($spccbfb6, array('id' => 'required|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $spec443a = \App\Pay::find((int) $spccbfb6->post('id')); if (!$spec443a) { $spec443a = new \App\Pay(); } $spec443a->name = $spccbfb6->post('name'); $spec443a->comment = $spccbfb6->post('comment'); $spec443a->driver = $spccbfb6->post('driver'); $spec443a->way = $spccbfb6->post('way'); $spec443a->config = $spccbfb6->post('config'); $spec443a->enabled = (int) $spccbfb6->post('enabled'); $spec443a->fee_system = $spccbfb6->post('fee_system'); $spec443a->saveOrFail(); return Response::success(); } function comment(Request $spccbfb6) { $this->validate($spccbfb6, array('id' => 'required|integer')); $spbf68a1 = (int) $spccbfb6->post('id'); $spec443a = \App\Pay::findOrFail($spbf68a1); $spec443a->comment = $spccbfb6->post('comment'); $spec443a->save(); return Response::success(); } function fee_system(Request $spccbfb6) { $this->validate($spccbfb6, array('id' => 'required|integer')); $spbf68a1 = (int) $spccbfb6->post('id'); $spec443a = \App\Pay::findOrFail($spbf68a1); $spec443a->fee_system = $spccbfb6->post('fee_system'); $spec443a->saveOrFail(); return Response::success(); } function enable(Request $spccbfb6) { $this->validate($spccbfb6, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spdf2438 = $spccbfb6->post('ids'); $sp64a3d6 = (int) $spccbfb6->post('enabled'); \App\Pay::whereIn('id', explode(',', $spdf2438))->update(array('enabled' => $sp64a3d6)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $spccbfb6) { $this->validate($spccbfb6, array('ids' => 'required|string')); $spdf2438 = $spccbfb6->post('ids'); \App\Pay::whereIn('id', explode(',', $spdf2438))->delete(); \App\Pay::flushCache(); return Response::success(); } }