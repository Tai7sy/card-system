<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp16eb02) { $spf5b559 = \App\Pay::orderBy('sort'); $sp66afb5 = $sp16eb02->post('enabled'); if (strlen($sp66afb5)) { $spf5b559->whereIn('enabled', explode(',', $sp66afb5)); } $sp420e7b = $sp16eb02->post('search', false); $spd3086f = $sp16eb02->post('val', false); if ($sp420e7b && $spd3086f) { if ($sp420e7b == 'simple') { return Response::success($spf5b559->get(array('id', 'name'))); } elseif ($sp420e7b == 'id') { $spf5b559->where('id', $spd3086f); } else { $spf5b559->where($sp420e7b, 'like', '%' . $spd3086f . '%'); } } $sp218bb0 = $spf5b559->get(); return Response::success(array('list' => $sp218bb0, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp16eb02) { $this->validate($sp16eb02, array('day' => 'required|integer|between:1,30')); $sp297f39 = (int) $sp16eb02->input('day'); if ($sp297f39 === 30) { $sp4f312b = Carbon::now()->addMonths(-1); } else { $sp4f312b = Carbon::now()->addDays(-$sp297f39); } $sp218bb0 = $this->authQuery($sp16eb02, \App\Order::class)->where(function ($spf5b559) { $spf5b559->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp4f312b)->with(array('pay' => function ($spf5b559) { $spf5b559->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $spc31330 = array(); foreach ($sp218bb0 as $spf6fea6) { if (isset($spf6fea6['pay']) && isset($spf6fea6['pay']['name'])) { $sp21e348 = $spf6fea6['pay']['name']; } else { $sp21e348 = '未知方式#' . $spf6fea6['pay_id']; } $spc31330[$sp21e348] = array((int) $spf6fea6['count'], (int) $spf6fea6['sum']); } return Response::success($spc31330); } function edit(Request $sp16eb02) { $this->validate($sp16eb02, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp0bf346 = (int) $sp16eb02->post('id'); $spb6a91a = $sp16eb02->post('name'); $sp873763 = $sp16eb02->post('img'); $sp9e4a5b = $sp16eb02->post('comment'); $spc37d26 = $sp16eb02->post('driver'); $spf2a0d6 = $sp16eb02->post('way'); $sp8ba223 = $sp16eb02->post('config'); $sp66afb5 = (int) $sp16eb02->post('enabled'); $spae3141 = \App\Pay::find($sp0bf346); if (!$spae3141) { $spae3141 = new \App\Pay(); } $spae3141->name = $spb6a91a; $spae3141->img = $sp873763; $spae3141->comment = $sp9e4a5b; $spae3141->driver = $spc37d26; $spae3141->way = $spf2a0d6; $spae3141->config = $sp8ba223; $spae3141->enabled = $sp66afb5; $spae3141->fee_system = $sp16eb02->post('fee_system'); $spae3141->saveOrFail(); return Response::success(); } function comment(Request $sp16eb02) { $this->validate($sp16eb02, array('id' => 'required|integer')); $sp0bf346 = (int) $sp16eb02->post('id'); $spae3141 = \App\Pay::findOrFail($sp0bf346); $spae3141->comment = $sp16eb02->post('comment'); $spae3141->save(); return Response::success(); } function sort(Request $sp16eb02) { $this->validate($sp16eb02, array('id' => 'required|integer')); $sp0bf346 = (int) $sp16eb02->post('id'); $spae3141 = \App\Pay::findOrFail($sp0bf346); $spae3141->sort = (int) $sp16eb02->post('sort', 1000); $spae3141->save(); return Response::success(); } function fee_system(Request $sp16eb02) { $this->validate($sp16eb02, array('id' => 'required|integer')); $sp0bf346 = (int) $sp16eb02->post('id'); $spae3141 = \App\Pay::findOrFail($sp0bf346); $spae3141->fee_system = $sp16eb02->post('fee_system'); $spae3141->saveOrFail(); return Response::success(); } function enable(Request $sp16eb02) { $this->validate($sp16eb02, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spf99fa0 = $sp16eb02->post('ids'); $sp66afb5 = (int) $sp16eb02->post('enabled'); \App\Pay::whereIn('id', explode(',', $spf99fa0))->update(array('enabled' => $sp66afb5)); return Response::success(); } function delete(Request $sp16eb02) { $this->validate($sp16eb02, array('id' => 'required|integer')); $sp0bf346 = (int) $sp16eb02->post('id'); \App\Pay::whereId($sp0bf346)->delete(); return Response::success(); } }