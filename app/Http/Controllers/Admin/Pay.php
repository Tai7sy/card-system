<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp375069) { $sped9569 = \App\Pay::query(); $spedd1a7 = $sp375069->input('enabled'); if (strlen($spedd1a7)) { $sped9569->whereIn('enabled', explode(',', $spedd1a7)); } $spca3671 = $sp375069->input('search', false); $spb689af = $sp375069->input('val', false); if ($spca3671 && $spb689af) { if ($spca3671 == 'simple') { return Response::success($sped9569->get(array('id', 'name', 'enabled', 'comment'))); } elseif ($spca3671 == 'id') { $sped9569->where('id', $spb689af); } else { $sped9569->where($spca3671, 'like', '%' . $spb689af . '%'); } } $sp3aa6bd = $sped9569->get(); return Response::success(array('list' => $sp3aa6bd, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $sp375069) { $this->validate($sp375069, array('day' => 'required|integer|between:1,30')); $spe5b6ad = (int) $sp375069->input('day'); if ($spe5b6ad === 30) { $sp16bc94 = Carbon::now()->addMonths(-1); } else { $sp16bc94 = Carbon::now()->addDays(-$spe5b6ad); } $sp3aa6bd = $this->authQuery($sp375069, \App\Order::class)->where(function ($sped9569) { $sped9569->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp16bc94)->with(array('pay' => function ($sped9569) { $sped9569->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp6706d8 = array(); foreach ($sp3aa6bd as $spb8bcdd) { if (isset($spb8bcdd['pay']) && isset($spb8bcdd['pay']['name'])) { $sp37a295 = $spb8bcdd['pay']['name']; } else { $sp37a295 = '未知方式#' . $spb8bcdd['pay_id']; } $sp6706d8[$sp37a295] = array((int) $spb8bcdd['count'], (int) $spb8bcdd['sum']); } return Response::success($sp6706d8); } function edit(Request $sp375069) { $this->validate($sp375069, array('id' => 'required|integer', 'name' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string', 'fee_system' => 'required|numeric')); $sp3c5b44 = \App\Pay::find((int) $sp375069->post('id')); if (!$sp3c5b44) { $sp3c5b44 = new \App\Pay(); } $sp3c5b44->name = $sp375069->post('name'); $sp3c5b44->comment = $sp375069->post('comment'); $sp3c5b44->driver = $sp375069->post('driver'); $sp3c5b44->way = $sp375069->post('way'); $sp3c5b44->config = $sp375069->post('config'); $sp3c5b44->enabled = (int) $sp375069->post('enabled'); $sp3c5b44->fee_system = $sp375069->post('fee_system'); $sp3c5b44->saveOrFail(); return Response::success(); } function comment(Request $sp375069) { $this->validate($sp375069, array('id' => 'required|integer')); $sp39113c = (int) $sp375069->post('id'); $sp3c5b44 = \App\Pay::findOrFail($sp39113c); $sp3c5b44->comment = $sp375069->post('comment'); $sp3c5b44->save(); return Response::success(); } function fee_system(Request $sp375069) { $this->validate($sp375069, array('id' => 'required|integer')); $sp39113c = (int) $sp375069->post('id'); $sp3c5b44 = \App\Pay::findOrFail($sp39113c); $sp3c5b44->fee_system = $sp375069->post('fee_system'); $sp3c5b44->saveOrFail(); return Response::success(); } function enable(Request $sp375069) { $this->validate($sp375069, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp630e91 = $sp375069->post('ids'); $spedd1a7 = (int) $sp375069->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp630e91))->update(array('enabled' => $spedd1a7)); \App\Pay::flushCache(); return Response::success(); } function delete(Request $sp375069) { $this->validate($sp375069, array('ids' => 'required|string')); $sp630e91 = $sp375069->post('ids'); \App\Pay::whereIn('id', explode(',', $sp630e91))->delete(); \App\Pay::flushCache(); return Response::success(); } }