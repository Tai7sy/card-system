<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $spba756f) { $spca8acc = \App\Pay::orderBy('sort'); $spc7c4ac = $spba756f->post('enabled'); if (strlen($spc7c4ac)) { $spca8acc->whereIn('enabled', explode(',', $spc7c4ac)); } $speeddd9 = $spba756f->post('search', false); $spe1fc85 = $spba756f->post('val', false); if ($speeddd9 && $spe1fc85) { if ($speeddd9 == 'simple') { return Response::success($spca8acc->get(array('id', 'name'))); } elseif ($speeddd9 == 'id') { $spca8acc->where('id', $spe1fc85); } else { $spca8acc->where($speeddd9, 'like', '%' . $spe1fc85 . '%'); } } $spfea7ce = $spca8acc->get(); return Response::success(array('list' => $spfea7ce, 'urls' => array('url' => config('app.url'), 'url_api' => config('app.url_api')))); } function stat(Request $spba756f) { $this->validate($spba756f, array('day' => 'required|integer|between:1,30')); $sp8d35f0 = (int) $spba756f->input('day'); if ($sp8d35f0 === 30) { $sp20fe30 = Carbon::now()->addMonths(-1); } else { $sp20fe30 = Carbon::now()->addDays(-$sp8d35f0); } $spfea7ce = $this->authQuery($spba756f, \App\Order::class)->where(function ($spca8acc) { $spca8acc->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp20fe30)->with(array('pay' => function ($spca8acc) { $spca8acc->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp5359c9 = array(); foreach ($spfea7ce as $spbdd4b3) { if (isset($spbdd4b3['pay']) && isset($spbdd4b3['pay']['name'])) { $spc977ba = $spbdd4b3['pay']['name']; } else { $spc977ba = '未知方式#' . $spbdd4b3['pay_id']; } $sp5359c9[$spc977ba] = array((int) $spbdd4b3['count'], (int) $spbdd4b3['sum']); } return Response::success($sp5359c9); } function edit(Request $spba756f) { $this->validate($spba756f, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $sp8e8060 = (int) $spba756f->post('id'); $sp387f04 = $spba756f->post('name'); $spc2cc55 = $spba756f->post('img'); $sp7edcb1 = $spba756f->post('comment'); $spa28d5a = $spba756f->post('driver'); $sp4f3f11 = $spba756f->post('way'); $spf3616d = $spba756f->post('config'); $spc7c4ac = (int) $spba756f->post('enabled'); $sp91f0ec = \App\Pay::find($sp8e8060); if (!$sp91f0ec) { $sp91f0ec = new \App\Pay(); } $sp91f0ec->name = $sp387f04; $sp91f0ec->img = $spc2cc55; $sp91f0ec->comment = $sp7edcb1; $sp91f0ec->driver = $spa28d5a; $sp91f0ec->way = $sp4f3f11; $sp91f0ec->config = $spf3616d; $sp91f0ec->enabled = $spc7c4ac; $sp91f0ec->fee_system = $spba756f->post('fee_system'); $sp91f0ec->saveOrFail(); return Response::success(); } function comment(Request $spba756f) { $this->validate($spba756f, array('id' => 'required|integer')); $sp8e8060 = (int) $spba756f->post('id'); $sp91f0ec = \App\Pay::findOrFail($sp8e8060); $sp91f0ec->comment = $spba756f->post('comment'); $sp91f0ec->save(); return Response::success(); } function sort(Request $spba756f) { $this->validate($spba756f, array('id' => 'required|integer')); $sp8e8060 = (int) $spba756f->post('id'); $sp91f0ec = \App\Pay::findOrFail($sp8e8060); $sp91f0ec->sort = (int) $spba756f->post('sort', 1000); $sp91f0ec->save(); return Response::success(); } function fee_system(Request $spba756f) { $this->validate($spba756f, array('id' => 'required|integer')); $sp8e8060 = (int) $spba756f->post('id'); $sp91f0ec = \App\Pay::findOrFail($sp8e8060); $sp91f0ec->fee_system = $spba756f->post('fee_system'); $sp91f0ec->saveOrFail(); return Response::success(); } function enable(Request $spba756f) { $this->validate($spba756f, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp12026a = $spba756f->post('ids'); $spc7c4ac = (int) $spba756f->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp12026a))->update(array('enabled' => $spc7c4ac)); return Response::success(); } function delete(Request $spba756f) { $this->validate($spba756f, array('id' => 'required|integer')); $sp8e8060 = (int) $spba756f->post('id'); \App\Pay::whereId($sp8e8060)->delete(); return Response::success(); } }