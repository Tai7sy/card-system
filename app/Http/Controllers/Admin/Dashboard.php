<?php
namespace App\Http\Controllers\Admin; use App\Library\CurlRequest; use App\Library\Response; use App\Order; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cache; class Dashboard extends Controller { function index(Request $sp375069) { $spa45ae4 = array('today' => array('count' => 0, 'paid' => 0, 'profit' => 0), 'yesterday' => array('count' => 0, 'paid' => 0, 'profit' => 0)); $spcb44bf = Order::whereUserId(\Auth::Id())->whereDate('paid_at', \Carbon\Carbon::now()->toDateString())->where(function ($sped9569) { $sped9569->where('status', Order::STATUS_PAID)->orWhere('status', Order::STATUS_SUCCESS); })->selectRaw('COUNT(*) as `count`,SUM(`paid`) as `paid`,SUM(`paid`-`sms_price`-`cost`-`fee`) as `profit`')->get()->toArray(); $spdd3b61 = Order::whereUserId(\Auth::Id())->whereDate('paid_at', \Carbon\Carbon::yesterday()->toDateString())->where(function ($sped9569) { $sped9569->where('status', Order::STATUS_PAID)->orWhere('status', Order::STATUS_SUCCESS); })->selectRaw('COUNT(*) as `count`,SUM(`paid`) as `paid`,SUM(`paid`-`sms_price`-`cost`-`fee`) as `profit`')->get()->toArray(); if (isset($spcb44bf[0]) && isset($spcb44bf[0]['count'])) { $spa45ae4['today'] = array('count' => (int) $spcb44bf[0]['count'], 'paid' => (int) $spcb44bf[0]['paid'], 'profit' => (int) $spcb44bf[0]['profit']); } if (isset($spdd3b61[0]) && isset($spdd3b61[0]['count'])) { $spa45ae4['yesterday'] = array('count' => (int) $spdd3b61[0]['count'], 'paid' => (int) $spdd3b61[0]['paid'], 'profit' => (int) $spdd3b61[0]['profit']); } $spa45ae4['need_ship_count'] = Order::whereUserId(\Auth::Id())->where('status', Order::STATUS_PAID)->count(); $spa45ae4['login'] = \App\Log::where('action', \App\Log::ACTION_LOGIN)->latest()->first(); return Response::success($spa45ae4); } function clearCache() { if (function_exists('opcache_reset')) { opcache_reset(); } try { \Artisan::call('cache:clear'); \Artisan::call('route:cache'); \Artisan::call('config:cache'); } catch (\Throwable $spf95c2c) { return Response::fail($spf95c2c->getMessage()); } return Response::success(); } function version() { return Response::success(array('version' => config('app.version'))); } function logsToken() { $spc29a0f = md5(random_bytes(128)); Cache::put($spc29a0f, Auth::getUser(), 15); return response(array('token' => $spc29a0f)); } function logsView(Request $sp375069, $spc29a0f) { if ($sp264a55 = Cache::get($spc29a0f)) { Cache::put($spc29a0f, $sp264a55, 15); return (new \Rap2hpoutre\LaravelLogViewer\LogViewerController())->index(); } else { throw new \Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException('logs-token'); } } function checkUpdate() { return Response::success(@json_decode(CurlRequest::get('https://raw.githubusercontent.com/Tai7sy/card-system/master/.version'), true)); } }