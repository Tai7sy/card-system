<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $spe5a184, $sp5e4109) { foreach ($sp5e4109 as $spbc4c78) { if ($spe5a184->has($spbc4c78)) { \App\System::_set($spbc4c78, $spe5a184->post($spbc4c78)); } } } private function setMoney(Request $spe5a184, $sp5e4109) { foreach ($sp5e4109 as $spbc4c78) { if ($spe5a184->has($spbc4c78)) { \App\System::_set($spbc4c78, (int) round($spe5a184->post($spbc4c78) * 100)); } } } private function setInt(Request $spe5a184, $sp5e4109) { foreach ($sp5e4109 as $spbc4c78) { if ($spe5a184->has($spbc4c78)) { \App\System::_set($spbc4c78, (int) $spe5a184->post($spbc4c78)); } } } function setItem(Request $spe5a184) { $spbc4c78 = $spe5a184->post('name'); $spb17cea = $spe5a184->post('value'); if (!$spbc4c78 || !$spb17cea) { return Response::forbidden(); } \App\System::_set($spbc4c78, $spb17cea); return Response::success(); } function info(Request $spe5a184) { $sp498148 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'company', 'js_tj', 'js_kf'); $spd19c16 = array('shop_inventory'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp498148 as $spbc4c78) { $sp474860[$spbc4c78] = \App\System::_get($spbc4c78); } foreach ($spd19c16 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $sp81d92a = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $spe5a184->merge($sp81d92a); $this->set($spe5a184, $sp498148); $this->setInt($spe5a184, $spd19c16); return Response::success(); } function theme(Request $spe5a184) { if ($spe5a184->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $sp51da15 = \App\ShopTheme::whereName($spe5a184->post('shop_theme'))->firstOrFail(); \App\System::_set('shop_theme_default', $sp51da15->name); $sp51da15->config = @json_decode($spe5a184->post('theme_config')) ?? array(); $sp51da15->saveOrFail(); return Response::success(); } function order(Request $spe5a184) { $sp5e4109 = array('order_query_password_open', 'order_query_day', 'order_clean_unpay_open', 'order_clean_unpay_day'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp5e4109 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $this->setInt($spe5a184, $sp5e4109); return Response::success(); } function vcode(Request $spe5a184) { $sp498148 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $spd19c16 = array('vcode_login_admin', 'vcode_shop_buy', 'vcode_shop_search'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp498148 as $spbc4c78) { $sp474860[$spbc4c78] = \App\System::_get($spbc4c78); } foreach ($spd19c16 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $this->set($spe5a184, $sp498148); $this->setInt($spe5a184, $spd19c16); return Response::success(); } function email(Request $spe5a184) { $sp498148 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $spd19c16 = array('mail_send_order', 'mail_send_order_use_contact'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp498148 as $spbc4c78) { $sp474860[$spbc4c78] = \App\System::_get($spbc4c78); } foreach ($spd19c16 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $this->set($spe5a184, $sp498148); $this->setInt($spe5a184, $spd19c16); return Response::success(); } function sms(Request $spe5a184) { $sp498148 = array('sms_api_id', 'sms_api_key'); $spd19c16 = array('sms_send_order', 'sms_price'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp498148 as $spbc4c78) { $sp474860[$spbc4c78] = \App\System::_get($spbc4c78); } foreach ($spd19c16 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $this->set($spe5a184, $sp498148); $this->setInt($spe5a184, $spd19c16); return Response::success(); } function storage(Request $spe5a184) { $sp498148 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $spd19c16 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spe5a184->isMethod('GET')) { $sp474860 = array(); foreach ($sp498148 as $spbc4c78) { $sp474860[$spbc4c78] = \App\System::_get($spbc4c78); } foreach ($spd19c16 as $spbc4c78) { $sp474860[$spbc4c78] = (int) \App\System::_get($spbc4c78); } return Response::success($sp474860); } $this->set($spe5a184, $sp498148); $this->set($spe5a184, $spd19c16); return Response::success(); } function emailTest(Request $spe5a184) { $this->validate($spe5a184, array('to' => 'required')); $spcc830d = $spe5a184->post('to'); try { $spa64ee0 = Mail::to($spcc830d)->send(new \App\Mail\Test()); return Response::success($spa64ee0); } catch (\Throwable $spd118f7) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $spd118f7->getMessage()); return Response::fail($spd118f7->getMessage(), $spd118f7); } } function orderClean(Request $spe5a184) { $this->validate($spe5a184, array('day' => 'required|integer|min:1')); $speb0111 = (int) $spe5a184->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$speb0111))->delete(); return Response::success(); } function deleteOrders(Request $spe5a184) { $this->validate($spe5a184, array('date' => 'required|date_format:Y-m-d')); $spf2f13b = $spe5a184->input('date'); \App\Order::where('created_at', '<', $spf2f13b)->delete(); return Response::success(); } function deleteFundRecords(Request $spe5a184) { $this->validate($spe5a184, array('date' => 'required|date_format:Y-m-d')); $spf2f13b = $spe5a184->input('date'); \App\FundRecord::where('created_at', '<', $spf2f13b)->delete(); \App\User::where('m_paid', '>', 0)->update(array('m_all' => DB::raw('m_all-m_paid'), 'm_paid' => 0)); return Response::success(); } function deleteLogs(Request $spe5a184) { $this->validate($spe5a184, array('date' => 'required|date_format:Y-m-d')); $spf2f13b = $spe5a184->input('date'); \App\Log::where('created_at', '<', $spf2f13b)->delete(); return Response::success(); } }