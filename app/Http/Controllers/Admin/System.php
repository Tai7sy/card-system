<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $spba756f, $spa4106d) { foreach ($spa4106d as $sp387f04) { if ($spba756f->has($sp387f04)) { \App\System::_set($sp387f04, $spba756f->post($sp387f04)); } } } private function setMoney(Request $spba756f, $spa4106d) { foreach ($spa4106d as $sp387f04) { if ($spba756f->has($sp387f04)) { \App\System::_set($sp387f04, (int) round($spba756f->post($sp387f04) * 100)); } } } private function setInt(Request $spba756f, $spa4106d) { foreach ($spa4106d as $sp387f04) { if ($spba756f->has($sp387f04)) { \App\System::_set($sp387f04, (int) $spba756f->post($sp387f04)); } } } function setItem(Request $spba756f) { $sp387f04 = $spba756f->post('name'); $sp4a2047 = $spba756f->post('value'); if (!$sp387f04 || !$sp4a2047) { return Response::forbidden(); } \App\System::_set($sp387f04, $sp4a2047); return Response::success(); } function info(Request $spba756f) { $sp6fedaf = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'company', 'js_tj', 'js_kf'); $sp0ec45a = array('shop_inventory'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($sp6fedaf as $sp387f04) { $spf3616d[$sp387f04] = \App\System::_get($sp387f04); } foreach ($sp0ec45a as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $sp0784c1 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $spba756f->merge($sp0784c1); $this->set($spba756f, $sp6fedaf); $this->setInt($spba756f, $sp0ec45a); return Response::success(); } function theme(Request $spba756f) { if ($spba756f->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $spf289bd = \App\ShopTheme::whereName($spba756f->post('shop_theme'))->firstOrFail(); \App\System::_set('shop_theme_default', $spf289bd->name); $spf289bd->config = @json_decode($spba756f->post('theme_config')) ?? array(); $spf289bd->saveOrFail(); return Response::success(); } function order(Request $spba756f) { $spa4106d = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($spa4106d as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $this->setInt($spba756f, $spa4106d); return Response::success(); } function vcode(Request $spba756f) { $sp6fedaf = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp0ec45a = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($sp6fedaf as $sp387f04) { $spf3616d[$sp387f04] = \App\System::_get($sp387f04); } foreach ($sp0ec45a as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $this->set($spba756f, $sp6fedaf); $this->setInt($spba756f, $sp0ec45a); return Response::success(); } function email(Request $spba756f) { $sp6fedaf = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp0ec45a = array('mail_send_order', 'mail_send_order_use_contact'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($sp6fedaf as $sp387f04) { $spf3616d[$sp387f04] = \App\System::_get($sp387f04); } foreach ($sp0ec45a as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $this->set($spba756f, $sp6fedaf); $this->setInt($spba756f, $sp0ec45a); return Response::success(); } function sms(Request $spba756f) { $sp6fedaf = array('sms_api_id', 'sms_api_key'); $sp0ec45a = array('sms_send_order', 'sms_price'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($sp6fedaf as $sp387f04) { $spf3616d[$sp387f04] = \App\System::_get($sp387f04); } foreach ($sp0ec45a as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $this->set($spba756f, $sp6fedaf); $this->setInt($spba756f, $sp0ec45a); return Response::success(); } function storage(Request $spba756f) { $sp6fedaf = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp0ec45a = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spba756f->isMethod('GET')) { $spf3616d = array(); foreach ($sp6fedaf as $sp387f04) { $spf3616d[$sp387f04] = \App\System::_get($sp387f04); } foreach ($sp0ec45a as $sp387f04) { $spf3616d[$sp387f04] = (int) \App\System::_get($sp387f04); } return Response::success($spf3616d); } $this->set($spba756f, $sp6fedaf); $this->set($spba756f, $sp0ec45a); return Response::success(); } function emailTest(Request $spba756f) { $this->validate($spba756f, array('to' => 'required')); $spa17e0b = $spba756f->post('to'); try { $sp5359c9 = Mail::to($spa17e0b)->send(new \App\Mail\Test()); return Response::success($sp5359c9); } catch (\Throwable $sp6a7295) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp6a7295->getMessage()); return Response::fail($sp6a7295->getMessage(), $sp6a7295); } } function orderClean(Request $spba756f) { $this->validate($spba756f, array('day' => 'required|integer|min:1')); $sp8d35f0 = (int) $spba756f->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp8d35f0))->delete(); return Response::success(); } }