<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $spfb5ae3, $spb4acf8) { foreach ($spb4acf8 as $sp4c25fd) { if ($spfb5ae3->has($sp4c25fd)) { \App\System::_set($sp4c25fd, $spfb5ae3->post($sp4c25fd)); } } } private function setMoney(Request $spfb5ae3, $spb4acf8) { foreach ($spb4acf8 as $sp4c25fd) { if ($spfb5ae3->has($sp4c25fd)) { \App\System::_set($sp4c25fd, (int) round($spfb5ae3->post($sp4c25fd) * 100)); } } } private function setInt(Request $spfb5ae3, $spb4acf8) { foreach ($spb4acf8 as $sp4c25fd) { if ($spfb5ae3->has($sp4c25fd)) { \App\System::_set($sp4c25fd, (int) $spfb5ae3->post($sp4c25fd)); } } } function setItem(Request $spfb5ae3) { $sp4c25fd = $spfb5ae3->post('name'); $spe5f20e = $spfb5ae3->post('value'); if (!$sp4c25fd || !$spe5f20e) { return Response::forbidden(); } \App\System::_set($sp4c25fd, $spe5f20e); return Response::success(); } function info(Request $spfb5ae3) { $spd5fd92 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'company', 'js_tj', 'js_kf'); $spee4f88 = array('shop_inventory'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spd5fd92 as $sp4c25fd) { $speeef4e[$sp4c25fd] = \App\System::_get($sp4c25fd); } foreach ($spee4f88 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $spdef5e4 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $spfb5ae3->merge($spdef5e4); $this->set($spfb5ae3, $spd5fd92); $this->setInt($spfb5ae3, $spee4f88); return Response::success(); } function theme(Request $spfb5ae3) { if ($spfb5ae3->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $spd76f17 = \App\ShopTheme::whereName($spfb5ae3->post('shop_theme'))->firstOrFail(); \App\System::_set('shop_theme_default', $spd76f17->name); $spd76f17->config = @json_decode($spfb5ae3->post('theme_config')) ?? array(); $spd76f17->saveOrFail(); return Response::success(); } function order(Request $spfb5ae3) { $spb4acf8 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spb4acf8 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $this->setInt($spfb5ae3, $spb4acf8); return Response::success(); } function vcode(Request $spfb5ae3) { $spd5fd92 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $spee4f88 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spd5fd92 as $sp4c25fd) { $speeef4e[$sp4c25fd] = \App\System::_get($sp4c25fd); } foreach ($spee4f88 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $this->set($spfb5ae3, $spd5fd92); $this->setInt($spfb5ae3, $spee4f88); return Response::success(); } function email(Request $spfb5ae3) { $spd5fd92 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $spee4f88 = array('mail_send_order', 'mail_send_order_use_contact'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spd5fd92 as $sp4c25fd) { $speeef4e[$sp4c25fd] = \App\System::_get($sp4c25fd); } foreach ($spee4f88 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $this->set($spfb5ae3, $spd5fd92); $this->setInt($spfb5ae3, $spee4f88); return Response::success(); } function sms(Request $spfb5ae3) { $spd5fd92 = array('sms_api_id', 'sms_api_key'); $spee4f88 = array('sms_send_order', 'sms_price'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spd5fd92 as $sp4c25fd) { $speeef4e[$sp4c25fd] = \App\System::_get($sp4c25fd); } foreach ($spee4f88 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $this->set($spfb5ae3, $spd5fd92); $this->setInt($spfb5ae3, $spee4f88); return Response::success(); } function storage(Request $spfb5ae3) { $spd5fd92 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $spee4f88 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spfb5ae3->isMethod('GET')) { $speeef4e = array(); foreach ($spd5fd92 as $sp4c25fd) { $speeef4e[$sp4c25fd] = \App\System::_get($sp4c25fd); } foreach ($spee4f88 as $sp4c25fd) { $speeef4e[$sp4c25fd] = (int) \App\System::_get($sp4c25fd); } return Response::success($speeef4e); } $this->set($spfb5ae3, $spd5fd92); $this->set($spfb5ae3, $spee4f88); return Response::success(); } function emailTest(Request $spfb5ae3) { $this->validate($spfb5ae3, array('to' => 'required')); $sp96fb14 = $spfb5ae3->post('to'); try { $sp5f5153 = Mail::to($sp96fb14)->send(new \App\Mail\Test()); return Response::success($sp5f5153); } catch (\Throwable $sped8699) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sped8699->getMessage()); return Response::fail($sped8699->getMessage(), $sped8699); } } function orderClean(Request $spfb5ae3) { $this->validate($spfb5ae3, array('day' => 'required|integer|min:1')); $spf12ece = (int) $spfb5ae3->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$spf12ece))->delete(); return Response::success(); } }