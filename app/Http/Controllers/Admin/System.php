<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $spf09a96, $sp3de930) { foreach ($sp3de930 as $sp66f74c) { if ($spf09a96->has($sp66f74c)) { \App\System::_set($sp66f74c, $spf09a96->post($sp66f74c)); } } } private function setMoney(Request $spf09a96, $sp3de930) { foreach ($sp3de930 as $sp66f74c) { if ($spf09a96->has($sp66f74c)) { \App\System::_set($sp66f74c, (int) round($spf09a96->post($sp66f74c) * 100)); } } } private function setInt(Request $spf09a96, $sp3de930) { foreach ($sp3de930 as $sp66f74c) { if ($spf09a96->has($sp66f74c)) { \App\System::_set($sp66f74c, (int) $spf09a96->post($sp66f74c)); } } } function setItem(Request $spf09a96) { $sp66f74c = $spf09a96->post('name'); $spf43b52 = $spf09a96->post('value'); if (!$sp66f74c || !$spf43b52) { return Response::forbidden(); } \App\System::_set($sp66f74c, $spf43b52); return Response::success(); } function info(Request $spf09a96) { $sp453431 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'company', 'js_tj', 'js_kf'); $sp634096 = array('shop_inventory'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp453431 as $sp66f74c) { $sp0619ae[$sp66f74c] = \App\System::_get($sp66f74c); } foreach ($sp634096 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $sp783cd0 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $spf09a96->merge($sp783cd0); $this->set($spf09a96, $sp453431); $this->setInt($spf09a96, $sp634096); return Response::success(); } function theme(Request $spf09a96) { if ($spf09a96->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $spb77cbf = \App\ShopTheme::whereName($spf09a96->post('shop_theme'))->firstOrFail(); \App\System::_set('shop_theme_default', $spb77cbf->name); $spb77cbf->config = @json_decode($spf09a96->post('theme_config')) ?? array(); $spb77cbf->saveOrFail(); return Response::success(); } function order(Request $spf09a96) { $sp3de930 = array('order_query_password_open', 'order_query_day', 'order_clean_unpay_open', 'order_clean_unpay_day'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp3de930 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $this->setInt($spf09a96, $sp3de930); return Response::success(); } function vcode(Request $spf09a96) { $sp453431 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp634096 = array('vcode_login_admin', 'vcode_shop_buy', 'vcode_shop_search'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp453431 as $sp66f74c) { $sp0619ae[$sp66f74c] = \App\System::_get($sp66f74c); } foreach ($sp634096 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $this->set($spf09a96, $sp453431); $this->setInt($spf09a96, $sp634096); return Response::success(); } function email(Request $spf09a96) { $sp453431 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp634096 = array('mail_send_order', 'mail_send_order_use_contact'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp453431 as $sp66f74c) { $sp0619ae[$sp66f74c] = \App\System::_get($sp66f74c); } foreach ($sp634096 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $this->set($spf09a96, $sp453431); $this->setInt($spf09a96, $sp634096); return Response::success(); } function sms(Request $spf09a96) { $sp453431 = array('sms_api_id', 'sms_api_key'); $sp634096 = array('sms_send_order', 'sms_price'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp453431 as $sp66f74c) { $sp0619ae[$sp66f74c] = \App\System::_get($sp66f74c); } foreach ($sp634096 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $this->set($spf09a96, $sp453431); $this->setInt($spf09a96, $sp634096); return Response::success(); } function storage(Request $spf09a96) { $sp453431 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp634096 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spf09a96->isMethod('GET')) { $sp0619ae = array(); foreach ($sp453431 as $sp66f74c) { $sp0619ae[$sp66f74c] = \App\System::_get($sp66f74c); } foreach ($sp634096 as $sp66f74c) { $sp0619ae[$sp66f74c] = (int) \App\System::_get($sp66f74c); } return Response::success($sp0619ae); } $this->set($spf09a96, $sp453431); $this->set($spf09a96, $sp634096); return Response::success(); } function emailTest(Request $spf09a96) { $this->validate($spf09a96, array('to' => 'required')); $sp276995 = $spf09a96->post('to'); try { $sp571ce3 = Mail::to($sp276995)->send(new \App\Mail\Test()); return Response::success($sp571ce3); } catch (\Throwable $spf745ad) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $spf745ad->getMessage()); return Response::fail($spf745ad->getMessage(), $spf745ad); } } function orderClean(Request $spf09a96) { $this->validate($spf09a96, array('day' => 'required|integer|min:1')); $sp9c9b8d = (int) $spf09a96->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp9c9b8d))->delete(); return Response::success(); } }