<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $sp16eb02, $spc49632) { foreach ($spc49632 as $spb6a91a) { if ($sp16eb02->has($spb6a91a)) { \App\System::_set($spb6a91a, $sp16eb02->post($spb6a91a)); } } } private function setMoney(Request $sp16eb02, $spc49632) { foreach ($spc49632 as $spb6a91a) { if ($sp16eb02->has($spb6a91a)) { \App\System::_set($spb6a91a, (int) round($sp16eb02->post($spb6a91a) * 100)); } } } private function setInt(Request $sp16eb02, $spc49632) { foreach ($spc49632 as $spb6a91a) { if ($sp16eb02->has($spb6a91a)) { \App\System::_set($spb6a91a, (int) $sp16eb02->post($spb6a91a)); } } } function setItem(Request $sp16eb02) { $spb6a91a = $sp16eb02->post('name'); $spec49f8 = $sp16eb02->post('value'); if (!$spb6a91a || !$spec49f8) { return Response::forbidden(); } \App\System::_set($spb6a91a, $spec49f8); return Response::success(); } function info(Request $sp16eb02) { $spa844d1 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'company', 'js_tj', 'js_kf'); $sp7d7a82 = array('shop_inventory'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spa844d1 as $spb6a91a) { $sp8ba223[$spb6a91a] = \App\System::_get($spb6a91a); } foreach ($sp7d7a82 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $sp2b97a5 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $sp16eb02->merge($sp2b97a5); $this->set($sp16eb02, $spa844d1); $this->setInt($sp16eb02, $sp7d7a82); return Response::success(); } function theme(Request $sp16eb02) { if ($sp16eb02->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $spc3ccbe = \App\ShopTheme::whereName($sp16eb02->post('shop_theme'))->firstOrFail(); \App\System::_set('shop_theme_default', $spc3ccbe->name); $spc3ccbe->config = @json_decode($sp16eb02->post('theme_config')) ?? array(); $spc3ccbe->saveOrFail(); return Response::success(); } function order(Request $sp16eb02) { $spc49632 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spc49632 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $this->setInt($sp16eb02, $spc49632); return Response::success(); } function vcode(Request $sp16eb02) { $spa844d1 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp7d7a82 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spa844d1 as $spb6a91a) { $sp8ba223[$spb6a91a] = \App\System::_get($spb6a91a); } foreach ($sp7d7a82 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $this->set($sp16eb02, $spa844d1); $this->setInt($sp16eb02, $sp7d7a82); return Response::success(); } function email(Request $sp16eb02) { $spa844d1 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp7d7a82 = array('mail_send_order', 'mail_send_order_use_contact'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spa844d1 as $spb6a91a) { $sp8ba223[$spb6a91a] = \App\System::_get($spb6a91a); } foreach ($sp7d7a82 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $this->set($sp16eb02, $spa844d1); $this->setInt($sp16eb02, $sp7d7a82); return Response::success(); } function sms(Request $sp16eb02) { $spa844d1 = array('sms_api_id', 'sms_api_key'); $sp7d7a82 = array('sms_send_order', 'sms_price'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spa844d1 as $spb6a91a) { $sp8ba223[$spb6a91a] = \App\System::_get($spb6a91a); } foreach ($sp7d7a82 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $this->set($sp16eb02, $spa844d1); $this->setInt($sp16eb02, $sp7d7a82); return Response::success(); } function storage(Request $sp16eb02) { $spa844d1 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp7d7a82 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp16eb02->isMethod('GET')) { $sp8ba223 = array(); foreach ($spa844d1 as $spb6a91a) { $sp8ba223[$spb6a91a] = \App\System::_get($spb6a91a); } foreach ($sp7d7a82 as $spb6a91a) { $sp8ba223[$spb6a91a] = (int) \App\System::_get($spb6a91a); } return Response::success($sp8ba223); } $this->set($sp16eb02, $spa844d1); $this->set($sp16eb02, $sp7d7a82); return Response::success(); } function emailTest(Request $sp16eb02) { $this->validate($sp16eb02, array('to' => 'required')); $spf3ab7c = $sp16eb02->post('to'); try { $spc31330 = Mail::to($spf3ab7c)->send(new \App\Mail\Test()); return Response::success($spc31330); } catch (\Throwable $sp803aea) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp803aea->getMessage()); return Response::fail($sp803aea->getMessage(), $sp803aea); } } function orderClean(Request $sp16eb02) { $this->validate($sp16eb02, array('day' => 'required|integer|min:1')); $sp297f39 = (int) $sp16eb02->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp297f39))->delete(); return Response::success(); } }