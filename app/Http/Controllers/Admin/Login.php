<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Geetest; use Illuminate\Auth\Events\PasswordReset; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; class Login extends Controller { function getVerify() { $spe7ca18 = array('driver' => 'geetest', 'geetest' => Geetest\API::get()); return Response::success($spe7ca18); } public function login(Request $sp0aae4c) { if ((int) \App\System::_get('vcode_login') === 1) { $spf96e67 = Geetest\API::verify($sp0aae4c->post('gt_c'), $sp0aae4c->post('gt_v'), $sp0aae4c->post('gt_s')); if (!$spf96e67) { return Response::fail('滑动验证超时，请返回页面重试。'); } } $sp888c54 = $sp0aae4c->input('remember') == 'true'; if (!Auth::attempt(array('email' => $sp0aae4c->input('email'), 'password' => $sp0aae4c->input('password')), $sp888c54)) { return Response::fail('邮箱或密码错误, 请检查'); } else { $spd99fb1 = new \App\Log(); $spd99fb1->user_id = Auth::Id(); $spd99fb1->ip = Helper::getIP(); $spd99fb1->action = \App\Log::ACTION_LOGIN; $spd99fb1->save(); $spd05c92 = Auth::getUser(); $spd05c92->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $spd05c92->toArray())); } } function info() { $spd05c92 = Auth::getUser(); $spd05c92->addHidden(array('created_at', 'updated_at')); $spd05c92->setAttribute('shop_name', \App\System::_get('app_name')); return Response::success(array('token' => 'login', 'user' => $spd05c92->toArray())); } function logout(Request $sp0aae4c) { @Auth::logout(); return Response::success(); } function changePassword(Request $sp0aae4c) { $spd05c92 = Auth::getUser(); $spf62e49 = $sp0aae4c->post('old', null); $sp86b1f2 = $sp0aae4c->post('password', null); if (strlen($sp86b1f2) < 6 || strlen($sp86b1f2) > 32) { return Response::fail('请输入6-32位密码'); } if (!Hash::check($spf62e49, $spd05c92->password)) { return Response::fail('旧密码错误，请检查'); } $spd05c92->password = Hash::make($sp86b1f2); $spd05c92->setRememberToken(str_random(60)); $spd05c92->saveOrFail(); event(new PasswordReset($spd05c92)); Auth::guard()->login($spd05c92); return Response::success(); } }