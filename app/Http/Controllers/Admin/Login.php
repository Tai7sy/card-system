<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Geetest; use Illuminate\Auth\Events\PasswordReset; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; class Login extends Controller { function getVerify() { $sp050ef7 = array('driver' => 'geetest', 'geetest' => Geetest\API::get()); return Response::success($sp050ef7); } public function login(Request $spfb5ae3) { if ((int) \App\System::_get('vcode_login') === 1) { $sp5f5153 = Geetest\API::verify($spfb5ae3->post('gt_c'), $spfb5ae3->post('gt_v'), $spfb5ae3->post('gt_s')); if (!$sp5f5153) { return Response::fail('滑动验证超时，请返回页面重试。'); } } $spbe5a0b = $spfb5ae3->input('remember') == 'true'; if (!Auth::attempt(array('email' => $spfb5ae3->input('email'), 'password' => $spfb5ae3->input('password')), $spbe5a0b)) { return Response::fail('邮箱或密码错误, 请检查'); } else { $sp2aee62 = new \App\Log(); $sp2aee62->user_id = Auth::Id(); $sp2aee62->ip = Helper::getIP(); $sp2aee62->action = \App\Log::ACTION_LOGIN; $sp2aee62->save(); $sp21e2d0 = Auth::getUser(); $sp21e2d0->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $sp21e2d0->toArray())); } } function info() { $sp21e2d0 = Auth::getUser(); $sp21e2d0->addHidden(array('created_at', 'updated_at')); $sp21e2d0->setAttribute('shop_name', \App\System::_get('app_name')); return Response::success(array('token' => 'login', 'user' => $sp21e2d0->toArray())); } function logout(Request $spfb5ae3) { @Auth::logout(); return Response::success(); } function changePassword(Request $spfb5ae3) { $sp21e2d0 = Auth::getUser(); $sp65bd71 = $spfb5ae3->post('old', null); $spc9d50c = $spfb5ae3->post('password', null); if (strlen($spc9d50c) < 6 || strlen($spc9d50c) > 32) { return Response::fail('请输入6-32位密码'); } if (!Hash::check($sp65bd71, $sp21e2d0->password)) { return Response::fail('旧密码错误，请检查'); } $sp21e2d0->password = Hash::make($spc9d50c); $sp21e2d0->setRememberToken(str_random(60)); $sp21e2d0->saveOrFail(); event(new PasswordReset($sp21e2d0)); Auth::guard()->login($sp21e2d0); return Response::success(); } }