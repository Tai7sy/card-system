<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Geetest; use Illuminate\Auth\Events\PasswordReset; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; class Login extends Controller { function getVerify() { $spe9df6d = array('driver' => 'geetest', 'geetest' => Geetest\API::get()); return Response::success($spe9df6d); } public function login(Request $spba756f) { if ((int) \App\System::_get('vcode_login') === 1) { $sp5359c9 = Geetest\API::verify($spba756f->post('gt_c'), $spba756f->post('gt_v'), $spba756f->post('gt_s')); if (!$sp5359c9) { return Response::fail('滑动验证超时，请返回页面重试。'); } } $sp0074ec = $spba756f->input('remember') == 'true'; if (!Auth::attempt(array('email' => $spba756f->input('email'), 'password' => $spba756f->input('password')), $sp0074ec)) { return Response::fail('邮箱或密码错误, 请检查'); } else { $spaf344d = new \App\Log(); $spaf344d->user_id = Auth::Id(); $spaf344d->ip = Helper::getIP(); $spaf344d->action = \App\Log::ACTION_LOGIN; $spaf344d->save(); $spac34b1 = Auth::getUser(); $spac34b1->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $spac34b1->toArray())); } } function info() { $spac34b1 = Auth::getUser(); $spac34b1->addHidden(array('created_at', 'updated_at')); $spac34b1->setAttribute('shop_name', \App\System::_get('app_name')); return Response::success(array('token' => 'login', 'user' => $spac34b1->toArray())); } function logout(Request $spba756f) { @Auth::logout(); return Response::success(); } function changePassword(Request $spba756f) { $spac34b1 = Auth::getUser(); $sp31e536 = $spba756f->post('old', null); $spdc3802 = $spba756f->post('password', null); if (strlen($spdc3802) < 6 || strlen($spdc3802) > 32) { return Response::fail('请输入6-32位密码'); } if (!Hash::check($sp31e536, $spac34b1->password)) { return Response::fail('旧密码错误，请检查'); } $spac34b1->password = Hash::make($spdc3802); $spac34b1->setRememberToken(str_random(60)); $spac34b1->saveOrFail(); event(new PasswordReset($spac34b1)); Auth::guard()->login($spac34b1); return Response::success(); } }