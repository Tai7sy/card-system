<?php
namespace App\Http\Controllers\Admin; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class PayWay extends Controller { function get(Request $sp62e4cd) { $sp295466 = (int) $sp62e4cd->input('current_page', 1); $spe5b040 = (int) $sp62e4cd->input('per_page', 20); $sp4210ad = \App\PayWay::orderBy('sort')->where('type', $sp62e4cd->input('type')); $spe0aaed = $sp62e4cd->input('search', false); $sp75c4d8 = $sp62e4cd->input('val', false); if ($spe0aaed && $sp75c4d8) { if ($spe0aaed == 'simple') { return Response::success($sp4210ad->get(array('id', 'name'))); } elseif ($spe0aaed == 'id') { $sp4210ad->where('id', $sp75c4d8); } else { $sp4210ad->where($spe0aaed, 'like', '%' . $sp75c4d8 . '%'); } } $sp3022f1 = $sp62e4cd->input('enabled'); if (strlen($sp3022f1)) { $sp4210ad->whereIn('enabled', explode(',', $sp3022f1)); } $sp6492f8 = $sp4210ad->paginate($spe5b040, array('*'), 'page', $sp295466); return Response::success($sp6492f8); } function edit(Request $sp62e4cd) { $this->validate($sp62e4cd, array('id' => 'required|integer', 'type' => 'required|integer|between:1,2', 'name' => 'required|string', 'sort' => 'required|integer', 'channels' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spdc31ea = (int) $sp62e4cd->post('id'); $sp6f0d0b = \App\PayWay::find($spdc31ea); if (!$sp6f0d0b) { if (\App\PayWay::where('name', $sp62e4cd->post('name'))->exists()) { return Response::fail('名称已经存在'); } $sp6f0d0b = new \App\PayWay(); } else { if (\App\PayWay::where('name', $sp62e4cd->post('name'))->where('id', '!=', $sp6f0d0b->id)->exists()) { return Response::fail('名称已经存在'); } } $sp6f0d0b->type = (int) $sp62e4cd->post('type'); $sp6f0d0b->name = $sp62e4cd->post('name'); $sp6f0d0b->sort = (int) $sp62e4cd->post('sort'); $sp6f0d0b->img = $sp62e4cd->post('img'); $sp6f0d0b->channels = @json_decode($sp62e4cd->post('channels')) ?? array(); $sp6f0d0b->comment = $sp62e4cd->post('comment'); $sp6f0d0b->enabled = (int) $sp62e4cd->post('enabled'); $sp6f0d0b->saveOrFail(); return Response::success(); } function enable(Request $sp62e4cd) { $this->validate($sp62e4cd, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $spb0cc9a = $sp62e4cd->post('ids'); $sp3022f1 = (int) $sp62e4cd->post('enabled'); \App\PayWay::whereIn('id', explode(',', $spb0cc9a))->update(array('enabled' => $sp3022f1)); return Response::success(); } function sort(Request $sp62e4cd) { $this->validate($sp62e4cd, array('id' => 'required|integer')); $spdc31ea = (int) $sp62e4cd->post('id'); $sp6f0d0b = \App\PayWay::findOrFail($spdc31ea); $sp6f0d0b->sort = (int) $sp62e4cd->post('sort'); $sp6f0d0b->save(); return Response::success(); } function delete(Request $sp62e4cd) { $this->validate($sp62e4cd, array('ids' => 'required|string')); $spb0cc9a = $sp62e4cd->post('ids'); \App\PayWay::whereIn('id', explode(',', $spb0cc9a))->delete(); return Response::success(); } }