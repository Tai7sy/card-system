<?php
namespace App\Http\Controllers\Auth; use App\Http\Controllers\Controller; use App\Library\Helper; use App\Library\QQWry\QQWry; use App\Library\WeChat; use App\System; use Illuminate\Http\Request; use Illuminate\Foundation\Auth\ThrottlesLogins; use Illuminate\Http\Response; use Illuminate\Support\Facades\Auth; class LoginController extends Controller { use ThrottlesLogins; protected function username() { return 'email'; } public function login(Request $spf09a96) { $this->validate($spf09a96, array('email' => 'required|email', 'password' => 'required|string')); if (System::_getInt('vcode_login_admin') === 1) { $this->validateCaptcha($spf09a96); } if ($this->hasTooManyLoginAttempts($spf09a96)) { $this->fireLockoutEvent($spf09a96); $sp1c1c29 = $this->limiter()->availableIn($this->throttleKey($spf09a96)); return response(array('message' => trans('auth.throttle', array('seconds' => $sp1c1c29))), Response::HTTP_BAD_REQUEST); } if ($sp269e48 = Auth::attempt($spf09a96->only('email', 'password'))) { $sp586d7b = Auth::getUser(); $sp72f2d1 = Helper::getIP() ?? $spf09a96->ip(); $sp586d7b->logs()->create(array('action' => \App\Log::ACTION_LOGIN, 'ip' => $sp72f2d1, 'address' => (new QQWry())->getLocation($sp72f2d1))); return response($this->getUserInfo()->getContent(), Response::HTTP_CREATED, array('Authorization' => 'Bearer ' . $sp269e48)); } LOGIN_FAILED: $this->incrementLoginAttempts($spf09a96); return response(array('message' => trans('auth.failed')), Response::HTTP_BAD_REQUEST); } public function getUserInfo() { $sp586d7b = Auth::getUser(); $sp586d7b->addHidden(array('created_at', 'updated_at')); $sp586d7b->append(array('last_login_at')); $sp586d7b->setAttribute('shop_name', config('app.name')); $sp501b73 = array(); $sp501b73['user'] = $sp586d7b; return response($sp501b73); } public function logout() { try { @Auth::logout(); } catch (\Throwable $spf745ad) { } return response(array()); } }