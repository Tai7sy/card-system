<?php
namespace App\Http\Controllers\Auth; use App\Http\Controllers\Controller; use App\Library\Helper; use App\Library\QQWry\QQWry; use App\Library\WeChat; use App\System; use Illuminate\Http\Request; use Illuminate\Foundation\Auth\ThrottlesLogins; use Illuminate\Http\Response; use Illuminate\Support\Facades\Auth; class LoginController extends Controller { use ThrottlesLogins; protected function username() { return 'email'; } public function login(Request $spdf16c9) { $this->validate($spdf16c9, array('email' => 'required|email', 'password' => 'required|string')); if (System::_getInt('vcode_login_admin') === 1) { $this->validateCaptcha($spdf16c9); } if ($this->hasTooManyLoginAttempts($spdf16c9)) { $this->fireLockoutEvent($spdf16c9); $sp7e9425 = $this->limiter()->availableIn($this->throttleKey($spdf16c9)); return response(array('message' => trans('auth.throttle', array('seconds' => $sp7e9425))), Response::HTTP_BAD_REQUEST); } if ($sp268070 = Auth::attempt($spdf16c9->only('email', 'password'))) { $sp0a324a = Auth::getUser(); $spb491c0 = Helper::getIP() ?? $spdf16c9->ip(); $sp0a324a->logs()->create(array('action' => \App\Log::ACTION_LOGIN, 'ip' => $spb491c0, 'address' => (new QQWry())->getLocation($spb491c0))); return response($this->getUserInfo()->getContent(), Response::HTTP_CREATED, array('Authorization' => 'Bearer ' . $sp268070)); } LOGIN_FAILED: $this->incrementLoginAttempts($spdf16c9); return response(array('message' => trans('auth.failed')), Response::HTTP_BAD_REQUEST); } public function getUserInfo() { $sp0a324a = Auth::getUser(); $sp0a324a->addHidden(array('created_at', 'updated_at')); $sp0a324a->append(array('last_login_at')); $sp0a324a->setAttribute('shop_name', config('app.name')); $sp4ffb9b = array(); $sp4ffb9b['user'] = $sp0a324a; return response($sp4ffb9b); } public function logout() { try { @Auth::logout(); } catch (\Throwable $sp54a0c6) { } return response(array()); } }