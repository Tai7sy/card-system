<?php
namespace App\Http\Controllers\Auth; use App\Http\Controllers\Controller; use App\Library\Helper; use App\Library\QQWry\QQWry; use App\Library\WeChat; use App\System; use Illuminate\Http\Request; use Illuminate\Foundation\Auth\ThrottlesLogins; use Illuminate\Http\Response; use Illuminate\Support\Facades\Auth; class LoginController extends Controller { use ThrottlesLogins; protected function username() { return 'email'; } public function login(Request $sp510ef3) { $this->validate($sp510ef3, array('email' => 'required|email', 'password' => 'required|string')); if (System::_getInt('vcode_login_admin') === 1) { $this->validateCaptcha($sp510ef3); } if ($this->hasTooManyLoginAttempts($sp510ef3)) { $this->fireLockoutEvent($sp510ef3); $sp797a34 = $this->limiter()->availableIn($this->throttleKey($sp510ef3)); return response(array('message' => trans('auth.throttle', array('seconds' => $sp797a34))), Response::HTTP_BAD_REQUEST); } if ($sp1f4391 = Auth::attempt($sp510ef3->only('email', 'password'))) { $sp24cedd = Auth::getUser(); $sp77e6c7 = Helper::getIP() ?? $sp510ef3->ip(); $sp24cedd->logs()->create(array('action' => \App\Log::ACTION_LOGIN, 'ip' => $sp77e6c7, 'address' => (new QQWry())->getLocation($sp77e6c7))); return response($this->getUserInfo()->getContent(), Response::HTTP_CREATED, array('Authorization' => 'Bearer ' . $sp1f4391)); } LOGIN_FAILED: $this->incrementLoginAttempts($sp510ef3); return response(array('message' => trans('auth.failed')), Response::HTTP_BAD_REQUEST); } public function getUserInfo() { $sp24cedd = Auth::getUser(); $sp24cedd->addHidden(array('created_at', 'updated_at')); $sp24cedd->append(array('last_login_at')); $sp24cedd->setAttribute('shop_name', config('app.name')); $sp15bacb = array(); $sp15bacb['user'] = $sp24cedd; return response($sp15bacb); } public function logout() { try { @Auth::logout(); } catch (\Throwable $spd3b3eb) { } return response(array()); } }