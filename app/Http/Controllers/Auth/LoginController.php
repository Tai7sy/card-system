<?php
namespace App\Http\Controllers\Auth; use App\Http\Controllers\Controller; use App\Library\Helper; use App\Library\QQWry\QQWry; use App\Library\WeChat; use App\System; use Illuminate\Http\Request; use Illuminate\Foundation\Auth\ThrottlesLogins; use Illuminate\Http\Response; use Illuminate\Support\Facades\Auth; class LoginController extends Controller { use ThrottlesLogins; protected function username() { return 'email'; } public function login(Request $sp62e4cd) { $this->validate($sp62e4cd, array('email' => 'required|email', 'password' => 'required|string')); if (System::_getInt('vcode_login_admin') === 1) { $this->validateCaptcha($sp62e4cd); } if ($this->hasTooManyLoginAttempts($sp62e4cd)) { $this->fireLockoutEvent($sp62e4cd); $spba1daf = $this->limiter()->availableIn($this->throttleKey($sp62e4cd)); return response(array('message' => trans('auth.throttle', array('seconds' => $spba1daf))), Response::HTTP_BAD_REQUEST); } if ($sp97507d = Auth::attempt($sp62e4cd->only('email', 'password'))) { $spbfa519 = Auth::getUser(); $sp211d0e = Helper::getIP() ?? $sp62e4cd->ip(); $spbfa519->logs()->create(array('action' => \App\Log::ACTION_LOGIN, 'ip' => $sp211d0e, 'address' => (new QQWry())->getLocation($sp211d0e))); return response($this->getUserInfo()->getContent(), Response::HTTP_CREATED, array('Authorization' => 'Bearer ' . $sp97507d)); } LOGIN_FAILED: $this->incrementLoginAttempts($sp62e4cd); return response(array('message' => trans('auth.failed')), Response::HTTP_BAD_REQUEST); } public function getUserInfo() { $spbfa519 = Auth::getUser(); $spbfa519->addHidden(array('created_at', 'updated_at')); $spbfa519->append(array('last_login_at')); $spbfa519->setAttribute('shop_name', config('app.name')); $sp3e8d87 = array(); $sp3e8d87['user'] = $spbfa519; return response($sp3e8d87); } public function logout() { try { @Auth::logout(); } catch (\Throwable $spc22b6c) { } return response(array()); } }