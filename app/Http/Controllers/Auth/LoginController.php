<?php
namespace App\Http\Controllers\Auth; use App\Http\Controllers\Controller; use App\Library\Helper; use App\Library\QQWry\QQWry; use App\Library\WeChat; use App\System; use Illuminate\Http\Request; use Illuminate\Foundation\Auth\ThrottlesLogins; use Illuminate\Http\Response; use Illuminate\Support\Facades\Auth; class LoginController extends Controller { use ThrottlesLogins; protected function username() { return 'email'; } public function login(Request $spe5a184) { $this->validate($spe5a184, array('email' => 'required|email', 'password' => 'required|string')); if (System::_getInt('vcode_login_admin') === 1) { $this->validateCaptcha($spe5a184); } if ($this->hasTooManyLoginAttempts($spe5a184)) { $this->fireLockoutEvent($spe5a184); $sp2b9d54 = $this->limiter()->availableIn($this->throttleKey($spe5a184)); return response(array('message' => trans('auth.throttle', array('seconds' => $sp2b9d54))), Response::HTTP_BAD_REQUEST); } if ($sp63ab26 = Auth::attempt($spe5a184->only('email', 'password'))) { $sp766bcc = Auth::getUser(); $sp17de72 = Helper::getIP() ?? $spe5a184->ip(); $sp766bcc->logs()->create(array('action' => \App\Log::ACTION_LOGIN, 'ip' => $sp17de72, 'address' => (new QQWry())->getLocation($sp17de72))); return response($this->getUserInfo()->getContent(), Response::HTTP_CREATED, array('Authorization' => 'Bearer ' . $sp63ab26)); } LOGIN_FAILED: $this->incrementLoginAttempts($spe5a184); return response(array('message' => trans('auth.failed')), Response::HTTP_BAD_REQUEST); } public function getUserInfo() { $sp766bcc = Auth::getUser(); $sp766bcc->addHidden(array('created_at', 'updated_at')); $sp766bcc->append(array('last_login_at')); $sp766bcc->setAttribute('shop_name', config('app.name')); $spca52a4 = array(); $spca52a4['user'] = $sp766bcc; return response($spca52a4); } public function logout() { try { @Auth::logout(); } catch (\Throwable $spd118f7) { } return response(array()); } }