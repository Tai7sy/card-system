<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spfeab54) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spb9589c = Geetest\API::verify($spfeab54->post('geetest_challenge'), $spfeab54->post('geetest_validate'), $spfeab54->post('geetest_seccode')); if (!$spb9589c) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp5786ca = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp8f5ac7 = $spfeab54->post('type', ''); if ($sp8f5ac7 === 'cookie') { $sp0daafb = Cookie::get('customer'); if (strlen($sp0daafb) !== 32) { return Response::success(); } $sp5786ca->where('customer', $sp0daafb); } elseif ($sp8f5ac7 === 'order_no') { $sp7c88f3 = $spfeab54->post('order_no', ''); if (strlen($sp7c88f3) !== 19) { return Response::success(); } $sp5786ca->where('order_no', $sp7c88f3); } elseif ($sp8f5ac7 === 'contact') { $sp09279e = $spfeab54->post('contact', ''); if (strlen($sp09279e) < 6) { return Response::success(); } $sp5786ca->where('contact', $sp09279e); } else { return Response::fail('请选择查询类型'); } $spbd14f4 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $spbd14f4[] = 'product_name'; $spbd14f4[] = 'contact'; $spbd14f4[] = 'contact_ext'; } $spaff91c = $sp5786ca->orderBy('id', 'DESC')->get($spbd14f4); $sp5952ba = ''; return Response::success(array('list' => $spaff91c, 'msg' => count($spaff91c) ? $sp5952ba : '')); } }