<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp7f7104) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp6e55ba = Geetest\API::verify($sp7f7104->post('geetest_challenge'), $sp7f7104->post('geetest_validate'), $sp7f7104->post('geetest_seccode')); if (!$sp6e55ba) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spbec213 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp1a26a5 = $sp7f7104->post('type', ''); if ($sp1a26a5 === 'cookie') { $sp68c4f7 = Cookie::get('customer'); if (strlen($sp68c4f7) !== 32) { return Response::success(); } $spbec213->where('customer', $sp68c4f7); } elseif ($sp1a26a5 === 'order_no') { $sp0f479a = $sp7f7104->post('order_no', ''); if (strlen($sp0f479a) !== 19) { return Response::success(); } $spbec213->where('order_no', $sp0f479a); } elseif ($sp1a26a5 === 'contact') { $spd4452a = $sp7f7104->post('contact', ''); if (strlen($spd4452a) < 6) { return Response::success(); } $spbec213->where('contact', $spd4452a); } else { return Response::fail('请选择查询类型'); } $sp0baafc = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp0baafc[] = 'product_name'; $sp0baafc[] = 'contact'; $sp0baafc[] = 'contact_ext'; } $spa229b5 = $spbec213->orderBy('id', 'DESC')->get($sp0baafc); $sp3492a3 = ''; return Response::success(array('list' => $spa229b5, 'msg' => count($spa229b5) ? $sp3492a3 : '')); } }