<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp179c14) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spa6aab5 = Geetest\API::verify($sp179c14->post('geetest_challenge'), $sp179c14->post('geetest_validate'), $sp179c14->post('geetest_seccode')); if (!$spa6aab5) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp78fbd3 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp42feb1 = $sp179c14->post('type', ''); if ($sp42feb1 === 'cookie') { $spf4810e = Cookie::get('customer'); if (strlen($spf4810e) !== 32) { return Response::success(); } $sp78fbd3->where('customer', $spf4810e); } elseif ($sp42feb1 === 'order_no') { $sp1b0c2d = $sp179c14->post('order_no', ''); if (strlen($sp1b0c2d) !== 19) { return Response::success(); } $sp78fbd3->where('order_no', $sp1b0c2d); } elseif ($sp42feb1 === 'contact') { $sp8762f0 = $sp179c14->post('contact', ''); if (strlen($sp8762f0) < 6) { return Response::success(); } $sp78fbd3->where('contact', $sp8762f0); } else { return Response::fail('请选择查询类型'); } $spa571db = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $spa571db[] = 'product_name'; $spa571db[] = 'contact'; $spa571db[] = 'contact_ext'; } $spe11c26 = $sp78fbd3->orderBy('id', 'DESC')->get($spa571db); $sp93a483 = ''; return Response::success(array('list' => $spe11c26, 'msg' => count($spe11c26) ? $sp93a483 : '')); } }