<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spba756f) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp5359c9 = Geetest\API::verify($spba756f->post('geetest_challenge'), $spba756f->post('geetest_validate'), $spba756f->post('geetest_seccode')); if (!$sp5359c9) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spca8acc = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $spe7b1c7 = $spba756f->post('type', ''); if ($spe7b1c7 === 'cookie') { $sp5ac530 = Cookie::get('customer'); if (strlen($sp5ac530) !== 32) { return Response::success(); } $spca8acc->where('customer', $sp5ac530); } elseif ($spe7b1c7 === 'order_no') { $spf34e1a = $spba756f->post('order_no', ''); if (strlen($spf34e1a) !== 19) { return Response::success(); } $spca8acc->where('order_no', $spf34e1a); } elseif ($spe7b1c7 === 'contact') { $spa04ff6 = $spba756f->post('contact', ''); if (strlen($spa04ff6) < 6) { return Response::success(); } $spca8acc->where('contact', $spa04ff6); } else { return Response::fail('请选择查询类型'); } $sp1bb3f5 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp1bb3f5[] = 'product_name'; $sp1bb3f5[] = 'contact'; $sp1bb3f5[] = 'contact_ext'; } $spfea7ce = $spca8acc->orderBy('id', 'DESC')->get($sp1bb3f5); $sp28477e = ''; return Response::success(array('list' => $spfea7ce, 'msg' => count($spfea7ce) ? $sp28477e : '')); } }