<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spf066f3) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp9b52fe = Geetest\API::verify($spf066f3->post('geetest_challenge'), $spf066f3->post('geetest_validate'), $spf066f3->post('geetest_seccode')); if (!$sp9b52fe) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp5044a7 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp4f56c1 = $spf066f3->post('type', ''); if ($sp4f56c1 === 'cookie') { $sp173146 = Cookie::get('customer'); if (strlen($sp173146) !== 32) { return Response::success(); } $sp5044a7->where('customer', $sp173146); } elseif ($sp4f56c1 === 'order_no') { $sp845b45 = $spf066f3->post('order_no', ''); if (strlen($sp845b45) !== 19) { return Response::success(); } $sp5044a7->where('order_no', $sp845b45); } elseif ($sp4f56c1 === 'contact') { $spedfbdb = $spf066f3->post('contact', ''); if (strlen($spedfbdb) < 6) { return Response::success(); } $sp5044a7->where('contact', $spedfbdb); } else { return Response::fail('请选择查询类型'); } $sp8cf7f5 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp8cf7f5[] = 'product_name'; $sp8cf7f5[] = 'contact'; $sp8cf7f5[] = 'contact_ext'; } $sp293456 = $sp5044a7->orderBy('id', 'DESC')->get($sp8cf7f5); $sp23dff4 = ''; return Response::success(array('list' => $sp293456, 'msg' => count($sp293456) ? $sp23dff4 : '')); } }