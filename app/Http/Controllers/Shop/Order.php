<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp054aa0) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp93ae8e = Geetest\API::verify($sp054aa0->post('geetest_challenge'), $sp054aa0->post('geetest_validate'), $sp054aa0->post('geetest_seccode')); if (!$sp93ae8e) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp0964e2 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp8beb2b = $sp054aa0->post('type', ''); if ($sp8beb2b === 'cookie') { $sp88b744 = Cookie::get('customer'); if (strlen($sp88b744) !== 32) { return Response::success(); } $sp0964e2->where('customer', $sp88b744); } elseif ($sp8beb2b === 'order_no') { $sp503d88 = $sp054aa0->post('order_no', ''); if (strlen($sp503d88) !== 19) { return Response::success(); } $sp0964e2->where('order_no', $sp503d88); } elseif ($sp8beb2b === 'contact') { $sp9a587c = $sp054aa0->post('contact', ''); if (strlen($sp9a587c) < 6) { return Response::success(); } $sp0964e2->where('contact', $sp9a587c); } else { return Response::fail('请选择查询类型'); } $sp312bca = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp312bca[] = 'product_name'; $sp312bca[] = 'contact'; $sp312bca[] = 'contact_ext'; } $sp03b529 = $sp0964e2->orderBy('id', 'DESC')->get($sp312bca); $sp2abddd = ''; return Response::success(array('list' => $sp03b529, 'msg' => count($sp03b529) ? $sp2abddd : '')); } }