<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spbaac90) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp599084 = Geetest\API::verify($spbaac90->post('geetest_challenge'), $spbaac90->post('geetest_validate'), $spbaac90->post('geetest_seccode')); if (!$sp599084) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp50919b = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp53ba26 = $spbaac90->post('type', ''); if ($sp53ba26 === 'cookie') { $spf97594 = Cookie::get('customer'); if (strlen($spf97594) !== 32) { return Response::success(); } $sp50919b->where('customer', $spf97594); } elseif ($sp53ba26 === 'order_no') { $sp40aadb = $spbaac90->post('order_no', ''); if (strlen($sp40aadb) !== 19) { return Response::success(); } $sp50919b->where('order_no', $sp40aadb); } elseif ($sp53ba26 === 'contact') { $spce4f4d = $spbaac90->post('contact', ''); if (strlen($spce4f4d) < 6) { return Response::success(); } $sp50919b->where('contact', $spce4f4d); } else { return Response::fail('请选择查询类型'); } $sp3af63a = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp3af63a[] = 'product_name'; $sp3af63a[] = 'contact'; $sp3af63a[] = 'contact_ext'; } $spd5d914 = $sp50919b->orderBy('id', 'DESC')->get($sp3af63a); $sp0fdca0 = ''; return Response::success(array('list' => $spd5d914, 'msg' => count($spd5d914) ? $sp0fdca0 : '')); } }