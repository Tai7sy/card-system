<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp375069) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp6706d8 = Geetest\API::verify($sp375069->post('geetest_challenge'), $sp375069->post('geetest_validate'), $sp375069->post('geetest_seccode')); if (!$sp6706d8) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sped9569 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp2d4d5b = $sp375069->post('type', ''); if ($sp2d4d5b === 'cookie') { $spddb0af = Cookie::get('customer'); if (strlen($spddb0af) !== 32) { return Response::success(); } $sped9569->where('customer', $spddb0af); } elseif ($sp2d4d5b === 'order_no') { $sp4b6ac9 = $sp375069->post('order_no', ''); if (strlen($sp4b6ac9) !== 19) { return Response::success(); } $sped9569->where('order_no', $sp4b6ac9); } elseif ($sp2d4d5b === 'contact') { $spafb0ff = $sp375069->post('contact', ''); if (strlen($spafb0ff) < 6) { return Response::success(); } $sped9569->where('contact', $spafb0ff); } else { return Response::fail('请选择查询类型'); } $sp275bdb = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp275bdb[] = 'product_name'; $sp275bdb[] = 'contact'; $sp275bdb[] = 'contact_ext'; } $sp3aa6bd = $sped9569->orderBy('id', 'DESC')->get($sp275bdb); $spea35ff = ''; return Response::success(array('list' => $sp3aa6bd, 'msg' => count($sp3aa6bd) ? $spea35ff : '')); } }