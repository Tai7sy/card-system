<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spfb5ae3) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp5f5153 = Geetest\API::verify($spfb5ae3->post('geetest_challenge'), $spfb5ae3->post('geetest_validate'), $spfb5ae3->post('geetest_seccode')); if (!$sp5f5153) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp32b0d3 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp0e721b = $spfb5ae3->post('type', ''); if ($sp0e721b === 'cookie') { $spddaf27 = Cookie::get('customer'); if (strlen($spddaf27) !== 32) { return Response::success(); } $sp32b0d3->where('customer', $spddaf27); } elseif ($sp0e721b === 'order_no') { $spa19857 = $spfb5ae3->post('order_no', ''); if (strlen($spa19857) !== 19) { return Response::success(); } $sp32b0d3->where('order_no', $spa19857); } elseif ($sp0e721b === 'contact') { $sp836fef = $spfb5ae3->post('contact', ''); if (strlen($sp836fef) < 6) { return Response::success(); } $sp32b0d3->where('contact', $sp836fef); } else { return Response::fail('请选择查询类型'); } $spf56cb9 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $spf56cb9[] = 'product_name'; $spf56cb9[] = 'contact'; $spf56cb9[] = 'contact_ext'; } $spfa99a5 = $sp32b0d3->orderBy('id', 'DESC')->get($spf56cb9); $sp13f1d1 = ''; return Response::success(array('list' => $spfa99a5, 'msg' => count($spfa99a5) ? $sp13f1d1 : '')); } }