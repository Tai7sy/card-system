<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp7fb11a) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp44edeb = Geetest\API::verify($sp7fb11a->post('geetest_challenge'), $sp7fb11a->post('geetest_validate'), $sp7fb11a->post('geetest_seccode')); if (!$sp44edeb) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spbea74d = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp6d9a17 = $sp7fb11a->post('type', ''); if ($sp6d9a17 === 'cookie') { $sp2cdf6e = Cookie::get('customer'); if (strlen($sp2cdf6e) !== 32) { return Response::success(); } $spbea74d->where('customer', $sp2cdf6e); } elseif ($sp6d9a17 === 'order_no') { $sp1f2f98 = $sp7fb11a->post('order_no', ''); if (strlen($sp1f2f98) !== 19) { return Response::success(); } $spbea74d->where('order_no', $sp1f2f98); } elseif ($sp6d9a17 === 'contact') { $sp975203 = $sp7fb11a->post('contact', ''); if (strlen($sp975203) < 6) { return Response::success(); } $spbea74d->where('contact', $sp975203); } else { return Response::fail('请选择查询类型'); } $sp1a3475 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp1a3475[] = 'product_name'; $sp1a3475[] = 'contact'; $sp1a3475[] = 'contact_ext'; } $sp90a30c = $spbea74d->orderBy('id', 'DESC')->get($sp1a3475); $sp41e9ba = ''; return Response::success(array('list' => $sp90a30c, 'msg' => count($sp90a30c) ? $sp41e9ba : '')); } }