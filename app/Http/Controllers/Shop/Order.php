<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp16eb02) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spc31330 = Geetest\API::verify($sp16eb02->post('geetest_challenge'), $sp16eb02->post('geetest_validate'), $sp16eb02->post('geetest_seccode')); if (!$spc31330) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spf5b559 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp827f09 = $sp16eb02->post('type', ''); if ($sp827f09 === 'cookie') { $sp2ff1c9 = Cookie::get('customer'); if (strlen($sp2ff1c9) !== 32) { return Response::success(); } $spf5b559->where('customer', $sp2ff1c9); } elseif ($sp827f09 === 'order_no') { $sp88df5b = $sp16eb02->post('order_no', ''); if (strlen($sp88df5b) !== 19) { return Response::success(); } $spf5b559->where('order_no', $sp88df5b); } elseif ($sp827f09 === 'contact') { $sp7a59a6 = $sp16eb02->post('contact', ''); if (strlen($sp7a59a6) < 6) { return Response::success(); } $spf5b559->where('contact', $sp7a59a6); } else { return Response::fail('请选择查询类型'); } $sp0c9294 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp0c9294[] = 'product_name'; $sp0c9294[] = 'contact'; $sp0c9294[] = 'contact_ext'; } $sp218bb0 = $spf5b559->orderBy('id', 'DESC')->get($sp0c9294); $spbbd1c6 = ''; return Response::success(array('list' => $sp218bb0, 'msg' => count($sp218bb0) ? $spbbd1c6 : '')); } }