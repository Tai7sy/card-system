<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp3c91bd) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp6a22d6 = Geetest\API::verify($sp3c91bd->post('geetest_challenge'), $sp3c91bd->post('geetest_validate'), $sp3c91bd->post('geetest_seccode')); if (!$sp6a22d6) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp6cb35e = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp0fe7ec = $sp3c91bd->post('type', ''); if ($sp0fe7ec === 'cookie') { $sp7eb55c = Cookie::get('customer'); if (strlen($sp7eb55c) !== 32) { return Response::success(); } $sp6cb35e->where('customer', $sp7eb55c); } elseif ($sp0fe7ec === 'order_no') { $spd10b1a = $sp3c91bd->post('order_no', ''); if (strlen($spd10b1a) !== 19) { return Response::success(); } $sp6cb35e->where('order_no', $spd10b1a); } elseif ($sp0fe7ec === 'contact') { $sp10107a = $sp3c91bd->post('contact', ''); if (strlen($sp10107a) < 6) { return Response::success(); } $sp6cb35e->where('contact', $sp10107a); } else { return Response::fail('请选择查询类型'); } $spf3965e = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $spf3965e[] = 'product_name'; $spf3965e[] = 'contact'; $spf3965e[] = 'contact_ext'; } $spdecb4c = $sp6cb35e->orderBy('id', 'DESC')->get($spf3965e); $sp163458 = ''; return Response::success(array('list' => $spdecb4c, 'msg' => count($spdecb4c) ? $sp163458 : '')); } }