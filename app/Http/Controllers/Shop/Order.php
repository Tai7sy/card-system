<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spa20801) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp179a17 = Geetest\API::verify($spa20801->post('geetest_challenge'), $spa20801->post('geetest_validate'), $spa20801->post('geetest_seccode')); if (!$sp179a17) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp6c3275 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $spf46b4f = $spa20801->post('type', ''); if ($spf46b4f === 'cookie') { $sp43a1bd = Cookie::get('customer'); if (strlen($sp43a1bd) !== 32) { return Response::success(); } $sp6c3275->where('customer', $sp43a1bd); } elseif ($spf46b4f === 'order_no') { $sp54976c = $spa20801->post('order_no', ''); if (strlen($sp54976c) !== 19) { return Response::success(); } $sp6c3275->where('order_no', $sp54976c); } elseif ($spf46b4f === 'contact') { $spc4ccaf = $spa20801->post('contact', ''); if (strlen($spc4ccaf) < 6) { return Response::success(); } $sp6c3275->where('contact', $spc4ccaf); } else { return Response::fail('请选择查询类型'); } $sp3d1c9a = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp3d1c9a[] = 'product_name'; $sp3d1c9a[] = 'contact'; $sp3d1c9a[] = 'contact_ext'; } $spa79e9a = $sp6c3275->orderBy('id', 'DESC')->get($sp3d1c9a); $sp03c964 = ''; return Response::success(array('list' => $spa79e9a, 'msg' => count($spa79e9a) ? $sp03c964 : '')); } }