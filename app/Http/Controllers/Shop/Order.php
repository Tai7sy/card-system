<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp0aae4c) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spf96e67 = Geetest\API::verify($sp0aae4c->post('geetest_challenge'), $sp0aae4c->post('geetest_validate'), $sp0aae4c->post('geetest_seccode')); if (!$spf96e67) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spb0a50e = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $spaabe45 = $sp0aae4c->post('type', ''); if ($spaabe45 === 'cookie') { $sp21127d = Cookie::get('customer'); if (strlen($sp21127d) !== 32) { return Response::success(); } $spb0a50e->where('customer', $sp21127d); } elseif ($spaabe45 === 'order_no') { $spdcb7fd = $sp0aae4c->post('order_no', ''); if (strlen($spdcb7fd) !== 19) { return Response::success(); } $spb0a50e->where('order_no', $spdcb7fd); } elseif ($spaabe45 === 'contact') { $spb9200e = $sp0aae4c->post('contact', ''); if (strlen($spb9200e) < 6) { return Response::success(); } $spb0a50e->where('contact', $spb9200e); } else { return Response::fail('请选择查询类型'); } $sp0436b9 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp0436b9[] = 'product_name'; $sp0436b9[] = 'contact'; $sp0436b9[] = 'contact_ext'; } $sp4e4cfe = $spb0a50e->orderBy('id', 'DESC')->get($sp0436b9); $speb1102 = ''; return Response::success(array('list' => $sp4e4cfe, 'msg' => count($sp4e4cfe) ? $speb1102 : '')); } }