<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spfb41ce) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spd7b285 = Geetest\API::verify($spfb41ce->post('geetest_challenge'), $spfb41ce->post('geetest_validate'), $spfb41ce->post('geetest_seccode')); if (!$spd7b285) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp61dd0f = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $spc5c8dd = $spfb41ce->post('type', ''); if ($spc5c8dd === 'cookie') { $spaa904b = Cookie::get('customer'); if (strlen($spaa904b) !== 32) { return Response::success(); } $sp61dd0f->where('customer', $spaa904b); } elseif ($spc5c8dd === 'order_no') { $sp6fdb49 = $spfb41ce->post('order_no', ''); if (strlen($sp6fdb49) !== 19) { return Response::success(); } $sp61dd0f->where('order_no', $sp6fdb49); } elseif ($spc5c8dd === 'contact') { $sp69517f = $spfb41ce->post('contact', ''); if (strlen($sp69517f) < 6) { return Response::success(); } $sp61dd0f->where('contact', $sp69517f); } else { return Response::fail('请选择查询类型'); } $sp7980ca = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp7980ca[] = 'product_name'; $sp7980ca[] = 'contact'; $sp7980ca[] = 'contact_ext'; } $sp32d442 = $sp61dd0f->orderBy('id', 'DESC')->get($sp7980ca); $sp4abb97 = ''; return Response::success(array('list' => $sp32d442, 'msg' => count($sp32d442) ? $sp4abb97 : '')); } }