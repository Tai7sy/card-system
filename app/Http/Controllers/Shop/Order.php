<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spa27895) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp786169 = Geetest\API::verify($spa27895->post('geetest_challenge'), $spa27895->post('geetest_validate'), $spa27895->post('geetest_seccode')); if (!$sp786169) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp7e6fa3 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-\App\System::_getInt('order_query_day', 30))); $sp460df4 = $spa27895->post('type', ''); if ($sp460df4 === 'cookie') { $spe44380 = Cookie::get('customer'); if (strlen($spe44380) !== 32) { return Response::success(); } $sp7e6fa3->where('customer', $spe44380); } elseif ($sp460df4 === 'order_no') { $sp0dbaa3 = $spa27895->post('order_no', ''); if (strlen($sp0dbaa3) !== 19) { return Response::success(); } $sp7e6fa3->where('order_no', $sp0dbaa3); } elseif ($sp460df4 === 'contact') { $sp0c9f2e = $spa27895->post('contact', ''); if (strlen($sp0c9f2e) < 6) { return Response::success(); } $sp7e6fa3->where('contact', $sp0c9f2e); } else { return Response::fail('请选择查询类型'); } $sp587ad4 = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp587ad4[] = 'product_name'; $sp587ad4[] = 'contact'; $sp587ad4[] = 'contact_ext'; } $sp966ae1 = $sp7e6fa3->orderBy('id', 'DESC')->get($sp587ad4); $spde7fa0 = ''; return Response::success(array('list' => $sp966ae1, 'msg' => count($sp966ae1) ? $spde7fa0 : '')); } }