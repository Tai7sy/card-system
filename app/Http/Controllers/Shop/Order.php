<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spd5cc4d) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp29a775 = Geetest\API::verify($spd5cc4d->post('geetest_challenge'), $spd5cc4d->post('geetest_validate'), $spd5cc4d->post('geetest_seccode')); if (!$sp29a775) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spe440a8 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $spdc3fe5 = $spd5cc4d->post('type', ''); if ($spdc3fe5 === 'cookie') { $sp2e64ab = Cookie::get('customer'); if (strlen($sp2e64ab) !== 32) { return Response::success(); } $spe440a8->where('customer', $sp2e64ab); } elseif ($spdc3fe5 === 'order_no') { $spd56469 = $spd5cc4d->post('order_no', ''); if (strlen($spd56469) !== 19) { return Response::success(); } $spe440a8->where('order_no', $spd56469); } elseif ($spdc3fe5 === 'contact') { $spfe0489 = $spd5cc4d->post('contact', ''); if (strlen($spfe0489) < 6) { return Response::success(); } $spe440a8->where('contact', $spfe0489); } else { return Response::fail('请选择查询类型'); } $sp1aad7f = array('id', 'created_at', 'order_no', 'contact', 'status', 'send_status', 'count', 'paid'); if (1) { $sp1aad7f[] = 'product_name'; $sp1aad7f[] = 'contact'; $sp1aad7f[] = 'contact_ext'; } $sp78c70b = $spe440a8->orderBy('id', 'DESC')->get($sp1aad7f); $sp537325 = ''; return Response::success(array('list' => $sp78c70b, 'msg' => count($sp78c70b) ? $sp537325 : '')); } }