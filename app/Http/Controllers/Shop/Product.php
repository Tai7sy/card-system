<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $sp13451b) { $sp3955fa = (int) $sp13451b->post('category_id'); if (!$sp3955fa) { return Response::forbidden(trans('shop.category.required')); } $spd58c4f = \App\Category::where('id', $sp3955fa)->first(); if (!$spd58c4f) { return Response::forbidden(trans('shop.category.not_found')); } if ($spd58c4f->password_open && $sp13451b->post('password') !== $spd58c4f->password) { return Response::fail(trans('shop.category.password_error')); } $spa1cb90 = \App\Product::where('category_id', $sp3955fa)->where('enabled', 1)->orderBy('sort')->get(); foreach ($spa1cb90 as $sp863814) { $sp863814->setForShop(); } return Response::success($spa1cb90); } function verifyPassword(Request $sp13451b) { $spcaeba2 = (int) $sp13451b->post('product_id'); if (!$spcaeba2) { return Response::forbidden(trans('shop.product.required')); } $sp863814 = \App\Product::where('id', $spcaeba2)->first(); if (!$sp863814) { return Response::forbidden(trans('shop.product.not_found')); } if ($sp863814->password_open && $sp13451b->post('password') !== $sp863814->password) { return Response::fail(trans('shop.product.password_error')); } return Response::success(); } }