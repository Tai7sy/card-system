<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $spf09a96) { $sp8e3d37 = (int) $spf09a96->post('category_id'); if (!$sp8e3d37) { return Response::forbidden(trans('shop.category.required')); } $spf5ac2c = \App\Category::where('id', $sp8e3d37)->first(); if (!$spf5ac2c) { return Response::forbidden(trans('shop.category.not_found')); } if ($spf5ac2c->password_open && $spf09a96->post('password') !== $spf5ac2c->password) { return Response::fail(trans('shop.category.password_error')); } $spfeb65c = \App\Product::where('category_id', $sp8e3d37)->where('enabled', 1)->orderBy('sort')->get(); foreach ($spfeb65c as $sp551a82) { $sp551a82->setForShop(); } return Response::success($spfeb65c); } function verifyPassword(Request $spf09a96) { $spb43b27 = (int) $spf09a96->post('product_id'); if (!$spb43b27) { return Response::forbidden(trans('shop.product.required')); } $sp551a82 = \App\Product::where('id', $spb43b27)->first(); if (!$sp551a82) { return Response::forbidden(trans('shop.product.not_found')); } if ($sp551a82->password_open && $spf09a96->post('password') !== $sp551a82->password) { return Response::fail(trans('shop.product.password_error')); } return Response::success(); } }