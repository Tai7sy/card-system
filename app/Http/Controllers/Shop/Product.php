<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $sp517903) { $spc4a21e = (int) $sp517903->post('category_id'); if (!$spc4a21e) { return Response::forbidden(trans('shop.category.required')); } $spe223d2 = \App\Category::where('id', $spc4a21e)->first(); if (!$spe223d2) { return Response::forbidden(trans('shop.category.not_found')); } if ($spe223d2->password_open && $sp517903->post('password') !== $spe223d2->password) { return Response::fail(trans('shop.category.password_error')); } $sp204e47 = \App\Product::where('category_id', $spc4a21e)->where('enabled', 1)->orderBy('sort')->get(); foreach ($sp204e47 as $sp427eba) { $sp427eba->setForShop(); } return Response::success($sp204e47); } function verifyPassword(Request $sp517903) { $spb429e3 = (int) $sp517903->post('product_id'); if (!$spb429e3) { return Response::forbidden(trans('shop.product.required')); } $sp427eba = \App\Product::where('id', $spb429e3)->first(); if (!$sp427eba) { return Response::forbidden(trans('shop.product.not_found')); } if ($sp427eba->password_open && $sp517903->post('password') !== $sp427eba->password) { return Response::fail(trans('shop.product.password_error')); } return Response::success(); } }