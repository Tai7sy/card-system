<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $spdf16c9) { $spf26f7e = (int) $spdf16c9->post('category_id'); if (!$spf26f7e) { return Response::forbidden(trans('shop.category.required')); } $spb98da4 = \App\Category::where('id', $spf26f7e)->first(); if (!$spb98da4) { return Response::forbidden(trans('shop.category.not_found')); } if ($spb98da4->password_open && $spdf16c9->post('password') !== $spb98da4->password) { return Response::fail(trans('shop.category.password_error')); } $sp3e77bf = \App\Product::where('category_id', $spf26f7e)->where('enabled', 1)->orderBy('sort')->get(); foreach ($sp3e77bf as $sp94204a) { $sp94204a->setForShop(); } return Response::success($sp3e77bf); } function verifyPassword(Request $spdf16c9) { $spfb3e15 = (int) $spdf16c9->post('product_id'); if (!$spfb3e15) { return Response::forbidden(trans('shop.product.required')); } $sp94204a = \App\Product::where('id', $spfb3e15)->first(); if (!$sp94204a) { return Response::forbidden(trans('shop.product.not_found')); } if ($sp94204a->password_open && $spdf16c9->post('password') !== $sp94204a->password) { return Response::fail(trans('shop.product.password_error')); } return Response::success(); } }